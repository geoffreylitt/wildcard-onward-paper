
@article{2003,
  title = {American {{Educational Research Association}} 2004 {{Annual Meeting}}: {{April}} 12\textendash{}16, {{San Diego}}},
  shorttitle = {American {{Educational Research Association}} 2004 {{Annual Meeting}}},
  year = {2003},
  month = dec,
  volume = {32},
  pages = {35--43},
  issn = {0013-189X, 1935-102X},
  doi = {10.3102/0013189X032009035},
  file = {/Users/geoffreylitt/Zotero/storage/JSMCHX9E/2003 - American Educational Research Association 2004 Ann.pdf},
  journal = {Educational Researcher},
  language = {en},
  number = {9}
}

@misc{2019,
  title = {End-User Programming},
  year = {2019},
  month = mar,
  abstract = {A vision for empowered computing that reaches back forty years. Our research lab examines why it has been so hard to achieve.},
  file = {/Users/geoffreylitt/Zotero/storage/VN9ZZWVZ/end-user-programming.html},
  howpublished = {https://www.inkandswitch.com/end-user-programming.html},
  journal = {Ink and Switch},
  language = {en-US}
}

@book{2019a,
  title = {Studying {{Diversity}}, {{Migration}} and {{Urban Multiculture}}},
  year = {2019},
  month = jul,
  publisher = {{UCL Press}},
  doi = {10.14324/111.9781787354784},
  file = {/Users/geoffreylitt/Zotero/storage/ANRQZ7TX/2019 - Studying Diversity, Migration and Urban Multicultu.pdf;/Users/geoffreylitt/Zotero/storage/X5X2JASA/tr2012001_steps.pdf},
  isbn = {978-1-78735-478-4},
  language = {en}
}

@misc{2020,
  title = {Reduxjs/Redux-Devtools},
  year = {2020},
  month = may,
  abstract = {DevTools for Redux with hot reloading, action replay, and customizable UI},
  howpublished = {Redux}
}

@misc{2020a,
  title = {Airtable},
  shorttitle = {Airtable},
  year = {2020},
  abstract = {Airtable works like a spreadsheet but gives you the power of a database to organize anything. Sign up for free.},
  file = {/Users/geoffreylitt/Zotero/storage/8UKHXPNG/airtable.com.html},
  howpublished = {https://airtable.com},
  journal = {Airtable}
}

@misc{2020b,
  title = {Glide},
  year = {2020},
  abstract = {Glide turns spreadsheets into beautiful, easy-to-use apps, without code. Pick a spreadsheet or start with a template, customize your app, then share it instantly with anyone. Start today for free!},
  file = {/Users/geoffreylitt/Zotero/storage/YRRWLQM8/www.glideapps.com.html},
  howpublished = {https://www.glideapps.com/},
  language = {en}
}

@incollection{adar2010,
  title = {The Temporal Dimension in End User Programming for the {{Web}}},
  booktitle = {No {{Code Required}}},
  author = {Adar, Eytan and Dontcheva, Mira and Fogarty, James A. and Weld, Daniel S.},
  year = {2010},
  pages = {251--266},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00013-4},
  abstract = {Despite the dynamic nature of the Web, most people only view and interact with a static snapshot. Search engines, browsers, and higher-level end user programming environments only support observing and manipulating a single point in time \textendash{} the ``now.'' We propose that moving beyond this static viewpoint is important because (1) maintaining a temporal view of the Web allows users to more clearly understand the behavior of their ``programs,'' both in static and dynamic contexts; and (2) temporally changing information on the Web is interesting in its own right. In this chapter we discuss the opportunities and challenges of integrating the temporal dimension in end user programming environments and our experiences with Zoetrope, a tool for interacting with the ephemeral (i.e., dynamic) Web.},
  file = {/Users/geoffreylitt/Zotero/storage/YGB2WIUB/Adar et al. - 2010 - The temporal dimension in end user programming for.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@inproceedings{alkhatib2019,
  title = {Street-{{Level Algorithms}}: {{A Theory}} at the {{Gaps Between Policy}} and {{Decisions}}},
  shorttitle = {Street-{{Level Algorithms}}},
  booktitle = {Proceedings of the 2019 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Alkhatib, Ali and Bernstein, Michael},
  year = {2019},
  pages = {530:1-530:13},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3290605.3300760},
  abstract = {Errors and biases are earning algorithms increasingly malignant reputations in society. A central challenge is that algorithms must bridge the gap between high-level policy and on-the-ground decisions, making inferences in novel situations where the policy or training data do not readily apply. In this paper, we draw on the theory of street-level bureaucracies, how human bureaucrats such as police and judges interpret policy to make on-the-ground decisions. We present by analogy a theory of street-level algorithms, the algorithms that bridge the gaps between policy and decisions about people in a socio-technical system. We argue that unlike street-level bureaucrats, who reflexively refine their decision criteria as they reason through a novel situation, street-level algorithms at best refine their criteria only after the decision is made. This loop-and-a-half delay results in illogical decisions when handling new or extenuating circumstances. This theory suggests designs for street-level algorithms that draw on historical design patterns for street-level bureaucracies, including mechanisms for self-policing and recourse in the case of error.},
  isbn = {978-1-4503-5970-2},
  keywords = {artificial intelligence,street-level algorithms,street-level bureaucracies},
  series = {{{CHI}} '19}
}

@inproceedings{alrashed2020,
  title = {{{ScrAPIr}}: {{Making Web Data APIs Accessible}} to {{End Users}}},
  shorttitle = {{{ScrAPIr}}},
  booktitle = {Proceedings of the 2020 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Alrashed, Tarfah and Almahmoud, Jumana and Zhang, Amy X. and Karger, David R.},
  year = {2020},
  month = apr,
  pages = {1--12},
  publisher = {{Association for Computing Machinery}},
  address = {{Honolulu, HI, USA}},
  doi = {10.1145/3313831.3376691},
  abstract = {Users have long struggled to extract and repurpose data from websites by laboriously copying or scraping content from web pages. An alternative is to write scripts that pull data through APIs. This provides a cleaner way to access data than scraping; however, APIs are effortful for programmers and nigh-impossible for non-programmers to use. In this work, we empower users to access APIs without programming. We evolve a schema for declaratively specifying how to interact with a data API. We then develop ScrAPIr: a standard query GUI that enables users to fetch data through any API for which a specification exists, and a second GUI that lets users author and share the specification for a given API. From a lab evaluation, we find that even non-programmers can access APIs using ScrAPIr, while programmers can access APIs 3.8 times faster on average using ScrAPIr than using programming.},
  file = {/Users/geoffreylitt/Zotero/storage/AXSUQGM7/Alrashed et al. - 2020 - ScrAPIr Making Web Data APIs Accessible to End Us.pdf},
  isbn = {978-1-4503-6708-0},
  keywords = {api description language,web apis,web scraping},
  series = {{{CHI}} '20}
}

@inproceedings{amershi2019,
  title = {Guidelines for {{Human}}-{{AI Interaction}}},
  booktitle = {Proceedings of the 2019 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Amershi, Saleema and Inkpen, Kori and Teevan, Jaime and {Kikin-Gil}, Ruth and Horvitz, Eric and Weld, Dan and Vorvoreanu, Mihaela and Fourney, Adam and Nushi, Besmira and Collisson, Penny and Suh, Jina and Iqbal, Shamsi and Bennett, Paul N.},
  year = {2019},
  pages = {1--13},
  publisher = {{ACM Press}},
  address = {{Glasgow, Scotland}},
  doi = {10.1145/3290605.3300233},
  abstract = {Advances in artifcial intelligence (AI) frame opportunities and challenges for user interface design. Principles for humanAI interaction have been discussed in the human-computer interaction community for over two decades, but more study and innovation are needed in light of advances in AI and the growing uses of AI technologies in human-facing applications. We propose 18 generally applicable design guidelines for human-AI interaction. These guidelines are validated through multiple rounds of evaluation including a user study with 49 design practitioners who tested the guidelines against 20 popular AI-infused products. The results verify the relevance of the guidelines over a spectrum of interaction scenarios and reveal gaps in our knowledge, highlighting opportunities for further research. Based on the evaluations, we believe the set of design guidelines can serve as a resource to practitioners working on the design of applications and features that harness AI technologies, and to researchers interested in the further development of guidelines for human-AI interaction design.},
  isbn = {978-1-4503-5970-2},
  language = {en}
}

@inproceedings{bakke2016,
  title = {Expressive {{Query Construction}} through {{Direct Manipulation}} of {{Nested Relational Results}}},
  booktitle = {Proceedings of the 2016 {{International Conference}} on {{Management}} of {{Data}} - {{SIGMOD}} '16},
  author = {Bakke, Eirik and Karger, David R.},
  year = {2016},
  pages = {1377--1392},
  publisher = {{ACM Press}},
  address = {{San Francisco, California, USA}},
  doi = {10.1145/2882903.2915210},
  abstract = {Despite extensive research on visual query systems, the standard way to interact with relational databases remains to be through SQL queries and tailored form interfaces. We consider three requirements to be essential to a successful alternative: (1) query specification through direct manipulation of results, (2) the ability to view and modify any part of the current query without departing from the direct manipulation interface, and (3) SQL-like expressiveness. This paper presents the first visual query system to meet all three requirements in a single design. By directly manipulating nested relational results, and using spreadsheet idioms such as formulas and filters, the user can express a relationally complete set of query operators plus calculation, aggregation, outer joins, sorting, and nesting, while always remaining able to track and modify the state of the complete query. Our prototype gives the user an experience of responsive, incremental query building while pushing all actual query processing to the database layer. We evaluate our system with formative and controlled user studies on 28 spreadsheet users; the controlled study shows our system significantly outperforming Microsoft Access on the System Usability Scale.},
  file = {/Users/geoffreylitt/Zotero/storage/UAXRC2LC/Bakke and Karger - 2016 - Expressive Query Construction through Direct Manip.pdf},
  isbn = {978-1-4503-3531-7},
  language = {en}
}

@inproceedings{bakke2016a,
  title = {Expressive {{Query Construction}} through {{Direct Manipulation}} of {{Nested Relational Results}}},
  booktitle = {Proceedings of the 2016 {{International Conference}} on {{Management}} of {{Data}} - {{SIGMOD}} '16},
  author = {Bakke, Eirik and Karger, David R.},
  year = {2016},
  pages = {1377--1392},
  publisher = {{ACM Press}},
  address = {{San Francisco, California, USA}},
  doi = {10.1145/2882903.2915210},
  abstract = {Despite extensive research on visual query systems, the standard way to interact with relational databases remains to be through SQL queries and tailored form interfaces. We consider three requirements to be essential to a successful alternative: (1) query specification through direct manipulation of results, (2) the ability to view and modify any part of the current query without departing from the direct manipulation interface, and (3) SQL-like expressiveness. This paper presents the first visual query system to meet all three requirements in a single design. By directly manipulating nested relational results, and using spreadsheet idioms such as formulas and filters, the user can express a relationally complete set of query operators plus calculation, aggregation, outer joins, sorting, and nesting, while always remaining able to track and modify the state of the complete query. Our prototype gives the user an experience of responsive, incremental query building while pushing all actual query processing to the database layer. We evaluate our system with formative and controlled user studies on 28 spreadsheet users; the controlled study shows our system significantly outperforming Microsoft Access on the System Usability Scale.},
  file = {/Users/geoffreylitt/Zotero/storage/NI9Q9NIP/Bakke and Karger - 2016 - Expressive Query Construction through Direct Manip.pdf},
  isbn = {978-1-4503-3531-7},
  language = {en}
}

@article{basman,
  title = {What {{Lies}} in the {{Path}} of the {{Revolution}}},
  author = {Basman, Antranig and Tchernavskij, Philip},
  pages = {16},
  abstract = {Increasingly, the rights and capabilities to own technological artefacts, where they exist at all, are reserved to corporations and not to citizens. There are historical, economic, metaphysical, ideological and cognitive reasons for this situation, in addition to purely technological factors, which we will trace by following the fate of various concrete examples, analysed into five categories of ownable elements. These categories are those of ownable function, ownable expression, ownable data, ownable installations and ownable economies. In this paper, we attempt to align these goals of ownability into a research and activism program by describing a set of revolutionary goals in each category, and tracing ways we could reach them.},
  file = {/Users/geoffreylitt/Zotero/storage/9SEP8XK6/Basman and Tchernavskij - What Lies in the Path of the Revolution.pdf},
  keywords = {toread},
  language = {en}
}

@inproceedings{beaudouin-lafon2000,
  title = {Reification, {{Polymorphism}} and {{Reuse}}: {{Three Principles}} for {{Designing Visual Interfaces}}},
  shorttitle = {Reification, {{Polymorphism}} and {{Reuse}}},
  booktitle = {Proceedings of the {{Working Conference}} on {{Advanced Visual Interfaces}}},
  author = {{Beaudouin-Lafon}, Michel and Mackay, Wendy E.},
  year = {2000},
  pages = {102--109},
  publisher = {{ACM}},
  address = {{Palermo, Italy}},
  doi = {10.1145/345513.345267},
  abstract = {This paper presents three design principles to support the development of large-scale applications and take advantage of recent research in new interaction techniques: Reification turns concepts into first class objects, polymorphism permits commands to be applied to objects of different types, and reuse makes both user input and system output accessible for later use. We show that the power of these principles lies in their combination. Reification creates new objects that can be acted upon by a small set of polymorphic commands, creating more opportunities for reuse. The result is a simpler yet more powerful interface.
To validate these principles, we describe their application in the redesign of a complex interface for editing and simulating Coloured Petri Nets. The cpn2000 interface integrates floating palettes, toolglasses and marking menus in a consistent manner with a new metaphor for managing the workspace. It challenges traditional ideas about user interfaces, getting rid of pull-down menus, scrollbars, and even selection, while providing the same or greater functionality. Preliminary tests with users show that they find the new system both easier to use and more efficient.},
  file = {/Users/geoffreylitt/Zotero/storage/ZUTWDQ9X/Beaudouin-Lafon and Mackay - 2000 - Reification, Polymorphism and Reuse Three Princip.pdf},
  isbn = {978-1-58113-252-6},
  keywords = {design principles,direct manipulation,instrumental interaction,interaction model,polymorphism,reification,reuse},
  series = {{{AVI}} '00}
}

@inproceedings{beaudouin-lafon2000a,
  title = {Instrumental {{Interaction}}: {{An Interaction Model}} for {{Designing}} Post-{{WIMP User Interfaces}}},
  shorttitle = {Instrumental {{Interaction}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {{Beaudouin-Lafon}, Michel},
  year = {2000},
  pages = {446--453},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/332040.332473},
  abstract = {This article introduces a new interaction model called Instrumental Interaction that extends and generalizes the principles of direct manipulation. It covers existing interaction styles, including traditional WIMP interfaces, as well as new interaction styles such as two-handed input and augmented reality. It defines a design space for new interaction techniques and a set of properties for comparing them. Instrumental Interaction describes graphical user interfaces in terms of domain objects and interaction instruments. Interaction between users and domain objects is mediated by interaction instruments, similar to the tools and instruments we use in the real world to interact with physical objects. The article presents the model, applies it to describe and compare a number of interaction techniques, and shows how it was used to create a new interface for searching and replacing text.},
  isbn = {978-1-58113-216-8},
  keywords = {direct manipulation,instrumental interaction,interaction model,post-WIMP interfaces,WIMP interfaces},
  series = {{{CHI}} '00}
}

@article{becker1996,
  title = {The {{Visual Design}} and {{Control}} of {{Trellis Display}}},
  author = {Becker, Richard A. and Cleveland, William S. and Shyu, Ming-Jen},
  year = {1996},
  volume = {5},
  pages = {123--155},
  issn = {1061-8600},
  doi = {10.2307/1390777},
  abstract = {Trellis display is a framework for the visualization of data. Its most prominent aspect is an overall visual design, reminiscent of a garden trelliswork, in which panels are laid out into rows, columns, and pages. On each panel of the trellis, a subset of the data is graphed by a display method such as a scatterplot, curve plot, boxplot, 3-D wireframe, normal quantile plot, or dot plot. Each panel shows the relationship of certain variables conditional on the values of other variables. A number of display methods employed in the visual design of Trellis display enable it to succeed in uncovering the structure of data even when the structure is quite complicated. For example, Trellis display provides a powerful mechanism for understanding interactions in studies of how a response depends on explanatory variables. Three examples demonstrate this; in each case, we make important discoveries not appreciated in the original analyses. Several control methods are also essential to Trellis display. A control method is a technique for specifying information so that a display can be drawn. The control methods of Trellis display form a basic conceptual framework that can be used in designing software. We have demonstrated the viability of the control methods by implementing them in the S/S-PLUS system for graphics and data analysis, but they can be implemented in any software system with a basic capability for drawing graphs.},
  journal = {Journal of Computational and Graphical Statistics},
  number = {2}
}

@inproceedings{benson2014,
  title = {Spreadsheet Driven Web Applications},
  booktitle = {Proceedings of the 27th Annual {{ACM}} Symposium on {{User}} Interface Software and Technology - {{UIST}} '14},
  author = {Benson, Edward and Zhang, Amy X. and Karger, David R.},
  year = {2014},
  pages = {97--106},
  publisher = {{ACM Press}},
  address = {{Honolulu, Hawaii, USA}},
  doi = {10.1145/2642918.2647387},
  abstract = {Creating and publishing read-write-compute web applications requires programming skills beyond what most end users possess. But many end users know how to make spreadsheets that act as simple information management applications, often with computation. We present a system for creating basic web applications using such spreadsheets in place of a server and using HTML to describe the client UI. Authors connect the two by placing spreadsheet references inside HTML attributes. Data computation is provided by spreadsheet formulas. The result is a reactive read-write-compute web page without a single line of Javascript code. Nearly all of the fifteen HTML novices we studied were able to connect HTML to spreadsheets using our method with minimal instruction. We draw conclusions from their experience and discuss future extensions to this programming model.},
  file = {/Users/geoffreylitt/Zotero/storage/GGLIRAZC/Benson et al. - 2014 - Spreadsheet driven web applications.pdf},
  isbn = {978-1-4503-3069-5},
  language = {en}
}

@incollection{bergman1995,
  title = {Towards {{Accessible Human}}-{{Computer Interaction}}},
  booktitle = {Advances in {{Human}}-{{Computer Interaction}}},
  author = {Bergman, Eric A. and Johnson, Earl W.},
  editor = {Nielsen, Jakob},
  year = {1995},
  volume = {5},
  publisher = {{Ablex Publishing Corporation}},
  address = {{Norwood, NJ}},
  abstract = {In spite of the growing focus on user-centered interface design promoted by humancomputer interaction researchers and practitioners, there remains a large and diverse user population that is generally overlooked: users with disabilities. There are compelling legal, economic, social, and moral arguments for providing users with disabilities access to information technologies. Although we will touch on some of those arguments here, the primary purpose of this chapter is to provide a broad overview of the software humancomputer interaction (HCI) issues surrounding access to computer systems.},
  keywords = {Freedom of information laws by country,Human–computer interaction,User interface,User-centered design}
}

@misc{berners-lee2018,
  title = {One {{Small Step}} for the {{Web}}\ldots{}},
  author = {{Berners-Lee}, Tim},
  year = {2018},
  month = sep,
  abstract = {I've always believed the web is for everyone. That's why I and others fight fiercely to protect it. The changes we've managed to bring have\ldots{}},
  file = {/Users/geoffreylitt/Zotero/storage/MSSQR3BL/one-small-step-for-the-web-87f92217d085.html},
  howpublished = {https://medium.com/@timberners\_lee/one-small-step-for-the-web-87f92217d085},
  journal = {Medium},
  language = {en}
}

@inproceedings{bernstein2010,
  title = {Soylent: {{A Word Processor}} with a {{Crowd Inside}}},
  booktitle = {Proceedings of the 23nd {{Annual ACM Symposium}} on {{User Interface Software}} and {{Technology}}},
  author = {Bernstein, Michael S. and Little, Greg and Miller, Robert C. and Hartmann, Bj{\"o}rn and Ackerman, Mark S. and Karger, David R. and Crowell, David and Panovich, Katrina},
  year = {2010},
  month = oct,
  pages = {313--322},
  publisher = {{ACM}},
  address = {{New York, NY}},
  abstract = {This paper introduces architectural and interaction patterns for integrating crowdsourced human contributions directly into user interfaces. We focus on writing and editing, complex endeavors that span many levels of conceptual and pragmatic activity. Authoring tools offer help with pragmatics, but for higher-level help, writers commonly turn to other people. We thus present Soylent, a word processing interface that enables writers to call on Mechanical Turk workers to shorten, proofread, and otherwise edit parts of their documents on demand. To improve worker quality, we introduce the Find-Fix-Verify crowd programming pattern, which splits tasks into a series of generation and review stages. Evaluation studies demonstrate the feasibility of crowdsourced editing and investigate questions of reliability, cost, wait time, and work time for edits.},
  language = {en}
}

@incollection{bertin1981,
  title = {Postmortem of {{An Example}}},
  booktitle = {Graphics and {{Graphic Information}}-{{Processing}}},
  author = {Bertin, Jacques},
  year = {1981},
  edition = {Reprint 2011},
  publisher = {{De Gruyter}},
  address = {{Berlin, Germany}},
  isbn = {978-3-11-085468-8},
  language = {ENGL},
  translator = {Berg, William J. and Scott, Paul}
}

@book{bertin2010,
  title = {Semiology of {{Graphics}}: {{Diagrams}}, {{Networks}}, {{Maps}}},
  shorttitle = {Semiology of {{Graphics}}},
  author = {Bertin, Jacques and Berg, William J.},
  year = {2010},
  edition = {1st ed},
  publisher = {{ESRI Press}},
  address = {{Redlands, Calif}},
  isbn = {978-1-58948-261-6},
  keywords = {Graphic methods,Information visualization,Statistical maps,Statistics},
  language = {eng},
  lccn = {QA90 .B47513 2010}
}

@inproceedings{bickmore2009,
  title = {Taking the {{Time}} to {{Care}}: {{Empowering Low Health Literacy Hospital Patients}} with {{Virtual Nurse Agents}}},
  shorttitle = {Taking the {{Time}} to {{Care}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Bickmore, Timothy W. and Pfeifer, Laura M. and Jack, Brian W.},
  year = {2009},
  pages = {1265--1274},
  publisher = {{ACM}},
  address = {{New York, NY}},
  doi = {10.1145/1518701.1518891},
  abstract = {Ninety million Americans have inadequate health literacy, resulting in a reduced ability to read and follow directions in the healthcare environment. We describe an animated, empathic virtual nurse interface for educating and counseling hospital patients with inadequate health literacy in their hospital beds at the time of discharge. The development methodology, design rationale, and two iterations of user testing are described. Results indicate that hospital patients with low health literacy found the system easy to use, reported high levels of satisfaction, and most said they preferred receiving the discharge information from the agent over their doctor or nurse. Patients also expressed appreciation for the time and attention provided by the virtual nurse, and felt that it provided an additional authoritative source for their medical information.},
  isbn = {978-1-60558-246-7},
  keywords = {embodied conversational agent,health literacy,patient education,relational agent,universal access},
  series = {{{CHI}} '09}
}

@inproceedings{bigham2008,
  title = {Trailblazer: Enabling Blind Users to Blaze Trails through the Web},
  shorttitle = {Trailblazer},
  booktitle = {Proceedingsc of the 13th International Conference on {{Intelligent}} User Interfaces - {{IUI}} '09},
  author = {Bigham, Jeffrey P. and Lau, Tessa and Nichols, Jeffrey},
  year = {2008},
  pages = {177},
  publisher = {{ACM Press}},
  address = {{Sanibel Island, Florida, USA}},
  doi = {10.1145/1502650.1502677},
  abstract = {For blind Web users, completing tasks on the Web can be frustrating. Each step can require a timeconsuming linear search of the current Web page to find the needed interactive element or piece of information. Existing interactive help systems and the playback components of some programming by demonstration tools identify the needed elements of a page as they guide the user through predefined tasks, obviating the need for a linear search on each step. TrailBlazer is a system that provides an accessible, nonvisual interface to guide blind users through existing how-to knowledge. A formative study indicated that participants saw the value of TrailBlazer but wanted to use it for tasks and Web sites for which no existing script was available. To address this, TrailBlazer offers suggestionbased help created on the fly from a short, user-provided task description and an existing repository of how-to knowledge. In an evaluation on 15 tasks, the correct prediction was contained within the top 5 suggestions 75.9\% of the time.},
  file = {/Users/geoffreylitt/Zotero/storage/GVDQ7WFL/Bigham et al. - 2008 - Trailblazer enabling blind users to blaze trails .pdf},
  isbn = {978-1-60558-168-2},
  language = {en}
}

@incollection{blackwell2001,
  title = {Cognitive {{Dimensions}} of {{Notations}}: {{Design Tools}} for {{Cognitive Technology}}},
  shorttitle = {Cognitive {{Dimensions}} of {{Notations}}},
  booktitle = {Cognitive {{Technology}}: {{Instruments}} of {{Mind}}},
  author = {Blackwell, A. F. and Britton, C. and Cox, A. and Green, T. R. G. and Gurr, C. and Kadoda, G. and Kutar, M. S. and Loomes, M. and Nehaniv, C. L. and Petre, M. and Roast, C. and Roe, C. and Wong, A. and Young, R. M.},
  editor = {Beynon, Meurig and Nehaniv, Chrystopher L. and Dautenhahn, Kerstin},
  year = {2001},
  volume = {2117},
  pages = {325--341},
  publisher = {{Springer Berlin Heidelberg}},
  address = {{Berlin, Heidelberg}},
  abstract = {The Cognitive Dimensions of Notations framework has been created to assist the designers of notational systems and information artifacts to evaluate their designs with respect to the impact that they will have on the users of those designs. The framework emphasizes the design choices available to such designers, including characterization of the user's activity, and the inevitable tradeoffs that will occur between potential design options. The resulting framework has been under development for over 10 years, and now has an active community of researchers devoted to it. This paper first introduces Cognitive Dimensions. It then summarizes the current activity, especially the results of a one-day workshop devoted to Cognitive Dimensions in December 2000, and reviews the ways in which it applies to the field of Cognitive Technology.},
  isbn = {978-3-540-42406-2 978-3-540-44617-0},
  language = {en}
}

@incollection{blomberg2012,
  title = {An {{Ethnographic Approach}} to {{Design}}},
  booktitle = {Human\textendash{{Computer Interaction Handbook}}},
  author = {Blomberg, Jeanette and Burrell, Mark and Guest, Greg},
  year = {2012},
  month = may,
  volume = {20126252},
  pages = {1025--1052},
  publisher = {{Lawrence Erlbaum Associates, Publishers}},
  address = {{Mahway, NJ}},
  isbn = {978-1-4398-2943-1 978-1-4398-2944-8},
  language = {en}
}

@inproceedings{bolin2005,
  title = {Automation and Customization of Rendered Web Pages},
  booktitle = {Proceedings of the 18th Annual {{ACM}} Symposium on {{User}} Interface Software and Technology  - {{UIST}} '05},
  author = {Bolin, Michael and Webber, Matthew and Rha, Philip and Wilson, Tom and Miller, Robert C.},
  year = {2005},
  pages = {163},
  publisher = {{ACM Press}},
  address = {{Seattle, WA, USA}},
  doi = {10.1145/1095034.1095062},
  abstract = {On the desktop, an application can expect to control its user interface down to the last pixel, but on the World Wide Web, a content provider has no control over how the client will view the page, once delivered to the browser. This creates an opportunity for end-users who want to automate and customize their web experiences, but the growing complexity of web pages and standards prevents most users from realizing this opportunity. We describe Chickenfoot, a programming system embedded in the Firefox web browser, which enables end-users to automate, customize, and integrate web applications without examining their source code. One way Chickenfoot addresses this goal is a novel technique for identifying page components by keyword pattern matching. We motivate this technique by studying how users name web page components, and present a heuristic keyword matching algorithm that identifies the desired component from the user's name.},
  file = {/Users/geoffreylitt/Zotero/storage/JS89G2G2/Bolin et al. - 2005 - Automation and customization of rendered web pages.pdf},
  isbn = {978-1-59593-271-6},
  keywords = {Wildcard},
  language = {en}
}

@article{borkin2016,
  title = {Beyond {{Memorability}}: {{Visualization Recognition}} and {{Recall}}},
  shorttitle = {Beyond {{Memorability}}},
  author = {Borkin, M. A. and Bylinskii, Z. and Kim, N. W. and Bainbridge, C. M. and Yeh, C. S. and Borkin, D. and Pfister, H. and Oliva, A.},
  year = {2016},
  month = jan,
  volume = {22},
  pages = {519--528},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2015.2467732},
  abstract = {In this paper we move beyond memorability and investigate how visualizations are recognized and recalled. For this study we labeled a dataset of 393 visualizations and analyzed the eye movements of 33 participants as well as thousands of participant-generated text descriptions of the visualizations. This allowed us to determine what components of a visualization attract people's attention, and what information is encoded into memory. Our findings quantitatively support many conventional qualitative design guidelines, including that (1) titles and supporting text should convey the message of a visualization, (2) if used appropriately, pictograms do not interfere with understanding and can improve recognition, and (3) redundancy helps effectively communicate the message. Importantly, we show that visualizations memorable ``at-a-glance'' are also capable of effectively conveying the message of the visualization. Thus, a memorable visualization is often also an effective one.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  keywords = {Adult,Atmospheric measurements,Computer Graphics,data visualisation,Data visualization,Encoding,Eye Movements,eye-tracking study,Female,Humans,Information visualization,Male,memorability,Mental Recall,participant-generated text description,Particle measurements,qualitative design guidelines,recall,recognition,Redundancy,Target recognition,Task Performance and Analysis,Visual Perception,Visualization,visualization message,visualization recall,visualization recognition,Young Adult},
  number = {1}
}

@incollection{borodin2010,
  title = {Social {{Accessibility}}},
  booktitle = {No {{Code Required}}},
  author = {Borodin, Yevgen and Kawanaka, Shinya and Takagi, Hironobu and Kobayashi, Masatomo and Sato, Daisuke and Asakawa, Chieko},
  year = {2010},
  pages = {347--366},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00018-3},
  abstract = {This chapter challenges the assumption that Web site owners are the ones who are responsible for the accessibility of Web content. Web designers and Web developers have been notorious for not following official accessibility guidelines. At the same time, the amount of user-generated Web content made it practically impossible for site owners to ensure content accessibility in a centralized fashion. However, the dawn of social computing promises that collaborative approaches will overcome these problems. This chapter overviews the applications of social computing to Web accessibility and introduces Social Accessibility \textendash{} a collaborative framework, which brings together end users and volunteers for the purpose of creating external accessibility metadata. In making the Web accessible, the Social Accessibility approach bypasses content owners, considerably reducing the time for accessibility renovations. In addition, the centralized metadata can be used to educate Web designers and developers about creating accessible content, while providing a central point for collaborative accessibility verification.},
  file = {/Users/geoffreylitt/Zotero/storage/J42AHV3J/Borodin et al. - 2010 - Social Accessibility.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@article{bostock2011,
  title = {{{D}}{$^3$} {{Data}}-{{Driven Documents}}},
  author = {Bostock, M. and Ogievetsky, V. and Heer, J.},
  year = {2011},
  month = dec,
  volume = {17},
  pages = {2301--2309},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2011.185},
  abstract = {Data-Driven Documents (D3) is a novel representation-transparent approach to visualization for the web. Rather than hide the underlying scenegraph within a toolkit-specific abstraction, D3 enables direct inspection and manipulation of a native representation: the standard document object model (DOM). With D3, designers selectively bind input data to arbitrary document elements, applying dynamic transforms to both generate and modify content. We show how representational transparency improves expressiveness and better integrates with developer tools than prior approaches, while offering comparable notational efficiency and retaining powerful declarative components. Immediate evaluation of operators further simplifies debugging and allows iterative development. Additionally, we demonstrate how D3 transforms naturally enable animation and interaction with dramatic performance improvements over intermediate representations.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {12}
}

@inproceedings{brandt2010,
  title = {Example-Centric Programming: Integrating Web Search into the Development Environment},
  shorttitle = {Example-Centric Programming},
  booktitle = {Proceedings of the 28th {{International Conference}} on {{Human Factors}} in {{Computing Systems}} - {{CHI}} '10},
  author = {Brandt, Joel and Dontcheva, Mira and Weskamp, Marcos and Klemmer, Scott R.},
  year = {2010},
  pages = {513},
  publisher = {{ACM Press}},
  address = {{Atlanta, Georgia, USA}},
  doi = {10.1145/1753326.1753402},
  abstract = {The ready availability of online source-code examples has fundamentally changed programming practices. However, current search tools are not designed to assist with programming tasks and are wholly separate from editing tools. This paper proposes that embedding a task-specific search engine in the development environment can significantly reduce the cost of finding information and thus enable programmers to write better code more easily. This paper describes the design, implementation, and evaluation of Blueprint, a Web search interface integrated into the Adobe Flex Builder development environment that helps users locate example code. Blueprint automatically augments queries with code context, presents a code-centric view of search results, embeds the search experience into the editor, and retains a link between copied code and its source. A comparative laboratory study found that Blueprint enables participants to write significantly better code and find example code significantly faster than with a standard Web browser. Analysis of three months of usage logs with 2,024 users suggests that task-specific search interfaces can significantly change how and when people search the Web.},
  isbn = {978-1-60558-929-9},
  language = {en}
}

@incollection{brandt2010a,
  title = {How the {{Web}} Helps People Turn Ideas into Code},
  booktitle = {No {{Code Required}}},
  author = {Brandt, Joel and Guo, Philip J. and Lewenstein, Joel and Dontcheva, Mira and Klemmer, Scott R.},
  year = {2010},
  pages = {439--451},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00023-7},
  abstract = {This chapter investigates the role of online resources in building software. We look specifically at how programmers \textendash{} an exemplar form of knowledge workers \textendash{} opportunistically interleave Web foraging, learning, and writing code. To understand this, we have both studied how programmers work in the lab and analyzed Web search logs of programming resources. The lab provides rich, detailed information and context about how programmers work; online studies offer a naturalistic setting and the advantages of scale. We found that programmers engage in just-in-time learning of new skills and approaches, clarify and extend their existing knowledge, and remind themselves of details deemed not worth remembering. The results also suggest that queries for different purposes have different styles and durations. These results contribute to a theory of online resource usage in programming, and suggest opportunities for tools to facilitate online knowledge work.},
  file = {/Users/geoffreylitt/Zotero/storage/QR9YPLCF/Brandt et al. - 2010 - How the Web helps people turn ideas into code.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@inproceedings{brewer1999,
  title = {Color {{Use Guidelines}} for {{Data Representation}}},
  booktitle = {Proceedings of the {{Section}} on {{Statistical Graphics}}, {{American Statistical Association}}},
  author = {Brewer, Cynthia A.},
  year = {1999},
  pages = {55--60},
  address = {{Alexandria, VA}},
  abstract = {Matching the organization of the perceptual dimensions of color (hue, lightness, saturation) to the organization of data being represented is one key to gaining insight from data visualizations. Geographic mappings of data are akin to three-variable graphs and thus benefit from the multi-dimensional nature of color symbolization. Systematic paths within perceptually ordered color systems, such as Munsell and CIELAB, produce logical progressions of color. Colors that progress from light to dark through a series of adjacent hues are an effective way to symbolize quantitative data that are monotonically increasing. Alternatively, emphasis on a critical value midway through a data range is accomplished by using the lightest color in a scheme to represent the critical value and then diverging toward different hues for high and low data extremes. Common spectral schemes (red-orange-yellow-green-blue) are well suited as diverging schemes by centering light yellow on a middle value, such as a mean or median. Visual comparisons between map distributions are aided by systematic two-variable color schemes. A topology of ten perceptually ordered schemes will be presented. In addition, vision research results are used to guide selection of combinations of hues that are easily distinguished by people who are colorblind (4 percent of the population).},
  language = {en}
}

@inproceedings{brown1984,
  title = {A System for Algorithm Animation},
  booktitle = {Proceedings of the 11th Annual Conference on {{Computer}} Graphics and Interactive Techniques},
  author = {Brown, Marc H. and Sedgewick, Robert},
  year = {1984},
  month = jan,
  pages = {177--186},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/800031.808596},
  abstract = {A software environment is described which provides facilities at a variety of levels for ``animating'' algorithms: exposing properties of programs by displaying multiple dynamic views of the program and associated data structures. The system is operational on a network of graphics-based, personal workstations and has been used successfully in several applications for teaching and research in computer science and mathematics. In this paper, we outline the conceptual framework that we have developed for animating algorithms, describe the system that we have implemented, and give several examples drawn from the host of algorithms that we have animated.},
  file = {/Users/geoffreylitt/Zotero/storage/4XLPNHXX/Brown and Sedgewick - 1984 - A system for algorithm animation.pdf},
  isbn = {978-0-89791-138-2},
  series = {{{SIGGRAPH}} '84}
}

@incollection{bruls2000,
  title = {Squarified {{Treemaps}}},
  booktitle = {Data {{Visualization}} 2000},
  author = {Bruls, Mark and Huizing, Kees and {van Wijk}, Jarke J.},
  editor = {{de Leeuw}, Willem Cornelis and {van Liere}, Robert},
  year = {2000},
  pages = {33--42},
  publisher = {{Springer Vienna}},
  address = {{Vienna}},
  abstract = {An extension to the treemap method for the visualization of hierarchical information, such as directory structures and organization structures, is presented. The standard treemap method often gives thin, elongated rectangles. As a result, rectangles are difficult to compare and to select. A new method is presented to generate lay-outs in which the rectangles approximate squares. To strenghten the visualization of the structure, shaded frames are used around groups of related nodes.},
  isbn = {978-3-211-83515-9 978-3-7091-6783-0},
  language = {en}
}

@article{bush1945,
  title = {As {{We May Think}}},
  author = {Bush, Vannevar},
  year = {1945},
  month = jul,
  journal = {The Atlantic Monthly}
}

@misc{buxton2007,
  title = {Multi-{{Touch Systems}} That {{I}} Have {{Known}} and {{Loved}}},
  author = {Buxton, Bill},
  year = {2007},
  month = jan,
  howpublished = {http://www.billbuxton.com/multitouchOverview.html},
  journal = {Bill Buxton}
}

@book{buxton2011,
  title = {Sketching {{User Experiences}}: {{Getting}} the {{Design Right}} and the {{Right Design}}},
  shorttitle = {Sketching {{User Experiences}}},
  author = {Buxton, Bill},
  year = {2011},
  publisher = {{Morgan Kaufmann}},
  address = {{Amsterdam}},
  isbn = {978-0-12-374037-3},
  language = {en}
}

@inproceedings{card1986,
  title = {User {{Technology}}: {{From Pointing}} to {{Pondering}}},
  booktitle = {{{ACM Conference}} on the {{History}} of {{Personal Workstations}}},
  author = {Card, Stuart K. and Moran, Thomas P.},
  year = {1986},
  pages = {183--98},
  language = {en}
}

@article{card1991,
  title = {A {{Morphological Analysis}} of the {{Design Space}} of {{Input Devices}}},
  author = {Card, Stuart K. and Mackinlay, Jock D. and Robertson, George G.},
  year = {1991},
  month = apr,
  volume = {9},
  pages = {99--122},
  issn = {10468188},
  doi = {10.1145/123078.128726},
  journal = {ACM Transactions on Information Systems},
  language = {en},
  number = {2}
}

@inproceedings{chang2014,
  title = {Creating Interactive Web Data Applications with Spreadsheets},
  booktitle = {Proceedings of the 27th Annual {{ACM}} Symposium on {{User}} Interface Software and Technology - {{UIST}} '14},
  author = {Chang, Kerry Shih-Ping and Myers, Brad A.},
  year = {2014},
  pages = {87--96},
  publisher = {{ACM Press}},
  address = {{Honolulu, Hawaii, USA}},
  doi = {10.1145/2642918.2647371},
  abstract = {While more and more data are available through web services, it remains difficult for end-users to create web applications that make use of these data without having to write complex code. We present Gneiss, a live programming environment that extends the spreadsheet metaphor to support creating interactive web applications that dynamically use local and web data from multiple sources. Gneiss closely integrates a spreadsheet editor with a web interface builder to let users demonstrate bindings between properties of web GUI elements and cells in the spreadsheet while working with real web service data. The spreadsheet editor provides two-way connections to web services, to both visualize and retrieve different data based on the user input in the web interface. Gneiss achieves rich interactivity without the need for event-based programming by extending the ``pull model'' of formulas that is familiar to the spreadsheet users. We use a series of examples to demonstrate Gneiss's ability to create a variety of interactive web data applications.},
  file = {/Users/geoffreylitt/Zotero/storage/VKRPDATE/Chang and Myers - 2014 - Creating interactive web data applications with sp.pdf},
  isbn = {978-1-4503-3069-5},
  language = {en}
}

@article{chang2019,
  title = {Dependent Type Systems as Macros},
  author = {Chang, Stephen and Ballantyne, Michael and Turner, Milo and Bowman, William J.},
  year = {2019},
  month = dec,
  volume = {4},
  pages = {1--29},
  issn = {24751421},
  doi = {10.1145/3371071},
  file = {/Users/geoffreylitt/Zotero/storage/DL7ZUBWU/Chang et al. - 2019 - Dependent type systems as macros.pdf},
  journal = {Proceedings of the ACM on Programming Languages},
  keywords = {toread},
  language = {en},
  number = {POPL}
}

@inproceedings{chasins2018,
  title = {Rousillon: {{Scraping Distributed Hierarchical Web Data}}},
  shorttitle = {Rousillon},
  booktitle = {The 31st {{Annual ACM Symposium}} on {{User Interface Software}} and {{Technology}} - {{UIST}} '18},
  author = {Chasins, Sarah E. and Mueller, Maria and Bodik, Rastislav},
  year = {2018},
  pages = {963--975},
  publisher = {{ACM Press}},
  address = {{Berlin, Germany}},
  doi = {10.1145/3242587.3242661},
  abstract = {Programming by Demonstration (PBD) promises to enable data scientists to collect web data. However, in formative interviews with social scientists, we learned that current PBD tools are insufficient for many real-world web scraping tasks. The missing piece is the capability to collect hierarchicallystructured data from across many different webpages. We present Rousillon, a programming system for writing complex web automation scripts by demonstration. Users demonstrate how to collect the first row of a `universal table' view of a hierarchical dataset to teach Rousillon how to collect all rows. To offer this new demonstration model, we developed novel relation selection and generalization algorithms. In a withinsubject user study on 15 computer scientists, users can write hierarchical web scrapers 8 times more quickly with Rousillon than with traditional programming.},
  file = {/Users/geoffreylitt/Zotero/storage/DJQ79QKU/Chasins et al. - 2018 - Rousillon Scraping Distributed Hierarchical Web D.pdf},
  isbn = {978-1-4503-5948-1},
  language = {en}
}

@incollection{chilton2010,
  title = {Why We Customize the {{Web}}},
  booktitle = {No {{Code Required}}},
  author = {Chilton, Lydia B. and Miller, Robert C. and Little, Greg and Yu, Chen-Hsiang},
  year = {2010},
  pages = {23--35},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00002-X},
  abstract = {The Web is increasingly an application platform comparable to the desktop, but its openness enables more customizations than were possible on the desktop. This chapter examines the kinds of customization seen on the Web, focusing on the highly extensible Mozilla Firefox Web browser, and compares and contrasts the motivations for Web customization with desktop customization.},
  file = {/Users/geoffreylitt/Zotero/storage/CPDBUMWR/Chilton et al. - 2010 - Why we customize the Web.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@article{chlipala2016,
  title = {The {{End}} of {{History}}? {{Using}} a {{Proof Assistant}} to {{Replace Language Design}} with {{Library Design}}},
  author = {Chlipala, Adam and Delaware, Benjamin and Duchovni, Samuel and {Pit-Claudel}, Cl{\'e}ment and Suriyakarn, Sorawit and Wang, Peng and Ye, Katherine},
  year = {2016},
  pages = {14},
  abstract = {Functionality of software systems has exploded in part because of advances in programminglanguage support for packaging reusable functionality as libraries. Developers benefit from the uniformity that comes of exposing many interfaces in the same language, as opposed to stringing together hodgepodges of command-line tools. Domain-specific languages may be viewed as an evolution of the power of reusable interfaces, when those interfaces become so flexible as to deserve to be called programming languages. However, common approaches to domain-specific languages give up many of the hard-won advantages of library-building in a rich common language, and even the traditional approach poses significant challenges in learning new APIs. We suggest that instead of continuing to develop new domain-specific languages, our community should embrace library-based ecosystems within very expressive languages that mix programming and theorem proving. Our prototype framework Fiat, a library for the Coq proof assistant, turns languages into easily comprehensible libraries via the key idea of modularizing functionality and performance away from each other, the former via macros that desugar into higher-order logic and the latter via optimization scripts that derive efficient code from logical programs.},
  file = {/Users/geoffreylitt/Zotero/storage/I3EUUHAE/Chlipala et al. - 2016 - The End of History Using a Proof Assistant to Rep.pdf},
  keywords = {toread},
  language = {en}
}

@inproceedings{cook2007,
  title = {{{AppleScript}}},
  booktitle = {Proceedings of the Third {{ACM SIGPLAN}} Conference on {{History}} of Programming Languages  - {{HOPL III}}},
  author = {Cook, William R.},
  year = {2007},
  pages = {1-1-1-21},
  publisher = {{ACM Press}},
  address = {{San Diego, California}},
  doi = {10.1145/1238844.1238845},
  file = {/Users/geoffreylitt/Zotero/storage/4ZFGV2YC/4ZFGV2YC.pdf},
  language = {en}
}

@article{correll2014,
  title = {Error {{Bars Considered Harmful}}: {{Exploring Alternate Encodings}} for {{Mean}} and {{Error}}},
  shorttitle = {Error {{Bars Considered Harmful}}},
  author = {Correll, Michael and Gleicher, Michael},
  year = {2014},
  month = dec,
  volume = {20},
  pages = {2142--2151},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2014.2346298},
  abstract = {When making an inference or comparison with uncertain, noisy, or incomplete data, measurement error and confidence intervals can be as important for judgment as the actual mean values of different groups. These often misunderstood statistical quantities are frequently represented by bar charts with error bars. This paper investigates drawbacks with this standard encoding, and considers a set of alternatives designed to more effectively communicate the implications of mean and error data to a general audience, drawing from lessons learned from the use of visual statistics in the information visualization community. We present a series of crowd-sourced experiments that confirm that the encoding of mean and error significantly changes how viewers make decisions about uncertain data. Careful consideration of design tradeoffs in the visual presentation of data results in human reasoning that is more consistently aligned with statistical inferences. We suggest the use of gradient plots (which use transparency to encode uncertainty) and violin plots (which use width) as better alternatives for inferential tasks than bar charts with error bars.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {12}
}

@incollection{cypher2010,
  title = {End User Programming on the {{Web}}},
  booktitle = {No {{Code Required}}},
  author = {Cypher, Allen},
  year = {2010},
  pages = {3--22},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00001-8},
  abstract = {This introduction explains who end users are and why they want to program. In the past 25 years, there have been two main approaches to enable end users to create their own programs: scripting languages and programming by demonstration. After outlining the challenges that confront these approaches, we shall see how the Web has removed some of the most significant barriers, opening the way for the recent progress that is detailed in this book.},
  file = {/Users/geoffreylitt/Zotero/storage/DS4X22YE/Cypher - 2010 - End user programming on the Web.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@incollection{cypher2010a,
  title = {Collaborative Scripting for the {{Web}}},
  booktitle = {No {{Code Required}}},
  author = {Cypher, Allen and Drews, Clemens and Haber, Eben and Kandogan, Eser and Lin, James and Lau, Tessa and Leshed, Gilly and Matthews, Tara and Wilcox, Eric},
  year = {2010},
  pages = {85--104},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00005-5},
  abstract = {Today's knowledge workers interact with a variety of Web-based tasks in the course of their jobs. We have found that two of the challenges faced by these workers are automation of repetitive tasks, and support for complex or hard-to-remember tasks. This chapter presents CoScripter, a system that enables users to capture, share, and automate tasks on the Web. CoScripter's most notable features include ClearScript, a scripting language that is both human-readable and machine-understandable, and built-in support for sharing via a Web-based script repository. CoScripter has been used by tens of thousands of people on the Web. Our user studies show that CoScripter has helped people both automate repetitive Web tasks, and share how-to knowledge inside the enterprise.},
  file = {/Users/geoffreylitt/Zotero/storage/U84JQNIC/Cypher et al. - 2010 - Collaborative scripting for the Web.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@misc{czaplicki,
  title = {The {{Elm Architecture}} {$\cdot$} {{An Introduction}} to {{Elm}}},
  author = {Czaplicki, Evan},
  file = {/Users/geoffreylitt/Zotero/storage/P4VFX8C7/architecture.html},
  howpublished = {https://guide.elm-lang.org/architecture/}
}

@book{dent2009,
  title = {Cartography: {{Thematic Map Design}}},
  shorttitle = {Cartography},
  author = {Dent, Borden D. and Torguson, Jeffrey S. and Hodler, Thomas W.},
  year = {2009},
  edition = {6th edition},
  publisher = {{McGraw-Hill Higher Education}},
  address = {{New York}},
  isbn = {978-0-07-294382-5},
  keywords = {Cartography,Thematic maps},
  language = {en},
  lccn = {GA105.3 .D45 2009}
}

@article{disessa1986,
  title = {Boxer: A Reconstructible Computational Medium},
  shorttitle = {Boxer},
  author = {{diSessa}, A. A and Abelson, H.},
  year = {1986},
  month = sep,
  volume = {29},
  pages = {859--868},
  issn = {00010782},
  doi = {10.1145/6592.6595},
  file = {/Users/geoffreylitt/Zotero/storage/EWBMP8Z2/diSessa and Abelson - 1986 - Boxer a reconstructible computational medium.pdf},
  journal = {Communications of the ACM},
  language = {en},
  number = {9}
}

@book{disessa2000,
  title = {Changing {{Minds}}: {{Computers}}, {{Learning}}, and {{Literacy}}},
  shorttitle = {Changing {{Minds}}},
  author = {{diSessa}, Andrea A.},
  year = {2000},
  publisher = {{MIT Press}},
  address = {{Cambridge, MA, USA}}
}

@article{dontcheva,
  title = {Relations, {{Cards}}, and {{Search Templates}}: {{User}}-{{Guided Web Data Integration}} and {{Layout}}},
  author = {Dontcheva, Mira and Drucker, Steven M and Salesin, David and Cohen, Michael F},
  pages = {10},
  abstract = {We present three new interaction techniques for aiding users in collecting and organizing Web content. First, we demonstrate an interface for creating associations between websites, which facilitate the automatic retrieval of related content. Second, we present an authoring interface that allows users to quickly merge content from many different websites into a uniform and personalized representation, which we call a card. Finally, we introduce a novel search paradigm that leverages the relationships in a card to direct search queries to extract relevant content from multiple Web sources and fill a new series of cards instead of just returning a list of webpage URLs. Preliminary feedback from users is positive and validates our design.},
  file = {/Users/geoffreylitt/Zotero/storage/52C7ASCN/Dontcheva et al. - Relations, Cards, and Search Templates User-Guide.pdf},
  language = {en}
}

@inproceedings{dontcheva2006,
  title = {Summarizing Personal Web Browsing Sessions},
  booktitle = {Proceedings of the 19th Annual {{ACM}} Symposium on {{User}} Interface Software and Technology - {{UIST}} '06},
  author = {Dontcheva, Mira and Drucker, Steven M. and Wade, Geraldine and Salesin, David and Cohen, Michael F.},
  year = {2006},
  pages = {115},
  publisher = {{ACM Press}},
  address = {{Montreux, Switzerland}},
  doi = {10.1145/1166253.1166273},
  abstract = {We describe a system, implemented as a browser extension, that enables users to quickly and easily collect, view, and share personal Web content. Our system employs a novel interaction model, which allows a user to specify webpage extraction patterns by interactively selecting webpage elements and applying these patterns to automatically collect similar content. Further, we present a technique for creating visual summaries of the collected information by combining user labeling with predefined layout templates. These summaries are interactive in nature: depending on the behaviors encoded in their templates, they may respond to mouse events, in addition to providing a visual summary. Finally, the summaries can be saved or sent to others to continue the research at another place or time. Informal evaluation shows that our approach works well for popular websites, and that users can quickly learn this interaction model for collecting content from the Web.},
  file = {/Users/geoffreylitt/Zotero/storage/EDNRA7W9/Dontcheva et al. - 2006 - Summarizing personal web browsing sessions.pdf},
  isbn = {978-1-59593-313-3},
  language = {en}
}

@incollection{dontcheva2010,
  title = {From {{Web Summaries}} to Search Templates},
  booktitle = {No {{Code Required}}},
  author = {Dontcheva, Mira and Drucker, Steven M. and Salesin, David and Cohen, Michael F.},
  year = {2010},
  pages = {235--250},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00012-2},
  abstract = {This chapter describes the Web Summaries system, which is designed to aid people in accomplishing exploratory Web research. Web Summaries enables users to produce automation artifacts, such as extraction patterns, relations, and personalized task-specific search templates, in the context of existing tasks. By leveraging the growing amount of structured Web pages and pervasive search capabilities Web Summaries provides a set of semiautomatic interaction techniques for collecting and organizing personal Web content.},
  file = {/Users/geoffreylitt/Zotero/storage/6BKSRPQ2/Dontcheva et al. - 2010 - From Web Summaries to search templates.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@inproceedings{dourish2006,
  title = {Implications for {{Design}}},
  booktitle = {{{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Dourish, Paul},
  year = {2006},
  month = apr,
  pages = {541--550},
  address = {{Montreal, Canada}},
  abstract = {Although ethnography has become a common approach in HCI research and design, considerable confusion still attends both ethnographic practice and the criteria by which it should be evaluated in HCI. Often, ethnography is seen as an approach to field investigation that can generate requirements for systems development; by that token, the major evaluative criterion for an ethnographic study is the implications it can provide for design. Exploring the nature of ethnographic inquiry, this paper suggests that ``implications for design'' may not be the best metric for evaluation and may, indeed, fail to capture the value of ethnographic investigations.},
  language = {en}
}

@article{dourish2007,
  title = {The {{Infrastructure}} of {{Experience}} and the {{Experience}} of {{Infrastructure}}: {{Meaning}} and {{Structure}} in {{Everyday Encounters}} with {{Space}}},
  shorttitle = {The {{Infrastructure}} of {{Experience}} and the {{Experience}} of {{Infrastructure}}},
  author = {Dourish, Paul and Bell, Genevieve},
  year = {2007},
  month = jun,
  volume = {34},
  pages = {414--430},
  issn = {0265-8135},
  doi = {10.1068/b32035t},
  abstract = {Although the current developments in ubiquitous and pervasive computing are driven largely by technological opportunities, they have radical implications not just for technology design but also for the ways in which we experience and interact with computation. In particular, the move of computation `off the desktop' and into the world, whether embedded in the environment around us or carried or worn on our bodies, suggests that computation is beginning to manifest itself in new ways as an aspect of the everyday environment. One particularly interesting issue in this transformation is the move from a concern with virtual spaces to a concern with physical ones. Basically, once computation moves off the desktop, computer science suddenly has to be concerned with where it might have gone. Whereas computer science and human-computer interaction have previously been concerned with disembodied cognition, they must now look more directly at embodied action and bodily encounters between people and technology. In this paper, we explore some of the implications of the development of ubiquitous computing for encounters with space. We look on space here as infrastructure\textemdash{}not just a technological infrastructure, but an infrastructure through which we experience the world. Drawing on studies of both the practical organization of space and the cultural organization of space, we begin to explore the ways in which ubiquitous computing may condition, and be conditioned by, the social organization of everyday space.},
  journal = {Environment and Planning B: Planning and Design},
  language = {en},
  number = {3}
}

@incollection{dourish2014,
  title = {Reading and {{Interpreting Ethnography}}},
  booktitle = {Ways of Knowing in {{HCI}}},
  author = {Dourish, Paul},
  editor = {Olson, Judith S. and Kellogg, Wendy},
  year = {2014},
  pages = {1--24},
  publisher = {{Springer}},
  address = {{New York}},
  isbn = {978-1-4939-0377-1},
  keywords = {Human-computer interaction},
  language = {en},
  lccn = {QA76.9.H85 W39 2014}
}

@article{dow2010,
  title = {Parallel {{Prototyping Leads}} to {{Better Design Results}}, {{More Divergence}}, and {{Increased Self}}-{{Efficacy}}},
  author = {Dow, Steven P. and Glassco, Alana and Kass, Jonathan and Schwarz, Melissa and Schwartz, Daniel L. and Klemmer, Scott R.},
  year = {2010},
  month = dec,
  volume = {17},
  pages = {1--24},
  issn = {10730516},
  doi = {10.1145/1879831.1879836},
  journal = {ACM Transactions on Computer-Human Interaction},
  language = {en},
  number = {4}
}

@inproceedings{eagan2011,
  title = {Cracking the Cocoa Nut: User Interface Programming at Runtime},
  shorttitle = {Cracking the Cocoa Nut},
  booktitle = {Proceedings of the 24th Annual {{ACM}} Symposium on {{User}} Interface Software and Technology - {{UIST}} '11},
  author = {Eagan, James R. and {Beaudouin-Lafon}, Michel and Mackay, Wendy E.},
  year = {2011},
  pages = {225},
  publisher = {{ACM Press}},
  address = {{Santa Barbara, California, USA}},
  doi = {10.1145/2047196.2047226},
  abstract = {This article introduces runtime toolkit overloading, a novel approach to help third-party developers modify the interaction and behavior of existing software applications without access to their underlying source code. We describe the abstractions provided by this approach as well as the mechanisms for implementing them in existing environments. We describe Scotty, a prototype implementation for Mac OS X Cocoa that enables developers to modify existing applications at runtime, and we demonstrate a collection of interaction and functional transformations on existing off-the-shelf applications. We show how Scotty helps a developer make sense of unfamiliar software, even without access to its source code. We further discuss what features of future environments would facilitate this kind of runtime software development.},
  file = {/Users/geoffreylitt/Zotero/storage/EBX2GJRX/Eagan et al. - 2011 - Cracking the cocoa nut user interface programming.pdf},
  isbn = {978-1-4503-0716-1},
  language = {en}
}

@misc{elliott2016,
  title = {39 {{Studies About Human Perception}} in 30 {{Minutes}}},
  author = {Elliott, Kennedy},
  year = {2016},
  month = may,
  journal = {Medium}
}

@techreport{engelbart1962,
  title = {Augmenting {{Human Intellect}}: {{A Conceptual Framework}}},
  author = {Engelbart, Douglas C.},
  year = {1962},
  address = {{Washington, D.C.}},
  institution = {{Director of Information Sciences, Air Force Office of Scientific Research}},
  abstract = {This is an initial summary report of project taking new and systematic approach to improving the intellectual effectiveness of the individual human being detailed conceptual framework explores the nature of the system composed of the individual and the tools concepts and methods that match his basic capabilities to his problems One of
the tools that shows the greatest immediate promise is the computer when it can be harnessed for direct online assistance integrated with new concepts and methods},
  number = {AFOSR-3223},
  type = {Summary {{Report}}}
}

@misc{engelbart1968,
  title = {The {{Mother}} of {{All Demos}}},
  author = {Engelbart, Douglas C.},
  year = {1968},
  month = dec,
  address = {{San Francisco, CA}}
}

@article{engelbart2003,
  title = {Improving {{Our Ability}} to {{Improve}}: {{A Call}} for {{Investment}} in a {{New Future}}},
  author = {Engelbart, Dr Douglas C and Dr, Kaiser},
  year = {2003},
  pages = {14},
  abstract = {In the past fifty years we have seen enormous growth in computing capability \textendash{} computing is everywhere and has impacted nearly everything. In this talk, Dr. Douglas Engelbart, who pioneered much of what we now take for granted as interactive computing, examines the forces that have shaped this growth. He argues that our criteria for investment in innovation are, in fact, short-sighted and focused on the wrong things. He proposes, instead, investment in an improvement infrastructure that can result in sustained, radical innovation capable of changing computing and expanding the kinds of problems that we can address through computing.},
  file = {/Users/geoffreylitt/Zotero/storage/5MCRAG23/Engelbart and Dr - 2003 - Improving Our Ability to Improve A Call for Inves.pdf},
  keywords = {toread},
  language = {en}
}

@article{faaborg,
  title = {Chapter 4 - {{A}} Goal-Oriented {{Web}} Browser},
  author = {Faaborg, Alexander and Lieberman, Henry},
  pages = {20},
  abstract = {Many users are familiar with the interesting but limited functionality of data detector interfaces like Microsoft's Smart Tags and Google's AutoLink. In this chapter we significantly expand the breadth and functionality of this type of user interface through the use of large-scale knowledge bases of semantic information. The result is a Web browser that is able to generate personalized semantic hypertext, providing a goal-oriented browsing experience.},
  file = {/Users/geoffreylitt/Zotero/storage/R8UMLLRD/Faaborg and Lieberman - Chapter 4 - A goal-oriented Web browser.pdf},
  language = {en}
}

@inproceedings{fallman2003,
  title = {Design-Oriented {{Human}}-Computer {{Interaction}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Fallman, Daniel},
  year = {2003},
  pages = {225--232},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/642611.642652},
  abstract = {We argue that HCI has emerged as a design-oriented field of research, directed at large towards innovation, design, and construction of new kinds of information and interaction technology. But the understanding of such an attitude to research in terms of philosophical, theoretical, and methodological underpinnings seems however relatively poor within the field. This paper intends to specifically address what design 'is' and how it is related to HCI. First, three candidate accounts from design theory of what design 'is' are introduced; the conservative, the romantic, and the pragmatic. By examining the role of sketching in design, it is found that the designer becomes involved in a necessary dialogue, from which the design problem and its solution are worked out simultaneously as a closely coupled pair. In conclusion, it is proposed that we need to acknowledge, first, the role of design in HCI conduct, and second, the difference between the knowledge-generating Design-oriented Research and the artifact-generating conduct of Research-oriented Design.},
  isbn = {978-1-58113-630-2},
  keywords = {design,design-orientation,design-oriented research,research-oriented design,sketching,theory},
  series = {{{CHI}} '03}
}

@inproceedings{fogarty2017,
  title = {Code and {{Contribution}} in {{Interactive Systems Research}}},
  author = {Fogarty, James},
  year = {2017},
  abstract = {The scale and complexity of interactive systems research often require care in distinguishing: (1) the code that implements a system, versus (2) the research contribution demonstrated or embodied in a system. This position paper for the CHI 2017 workshop on \#HCI.Tools reflects on this contrast and some common forms of contribution in interactive systems research. We explore several forms of interactive systems contribution based in differentiating: (1) what a system accomplishes, versus (2) how it accomplishes that. We argue some interactive systems should be considered sketches that use code as a medium to explore their research contributions, while others embody their contributions more directly in their code. Finally, we argue the progress and impact of our field requires diverse forms of contribution across interactive systems. INTRODUCTION The scale and complexity of modern interactive systems is daunting along several dimensions. Weiser characterized important aspects of this in a trend from many-to-1 (i.e., many people sharing a single device), to 1-to-1 (i.e., each person with a dedicated device), to 1-to-many (i.e., each person having many devices), to many-to-many (i.e., many people connected through many devices) [14]. As technology enters later stages of this trend, researchers now explore interactive systems that span multiple devices, require massive volumes of data to enable seemingly simple interactions, or require entire social networks before key aspects of their design can surface. Such barriers to real-world deployment of interactive systems create important challenges for interactive systems research. This reflection focuses primarily on the relationship between code and contribution. Interactive systems research generally contains both, but they are not always well-distinguished. Prior discussions include consideration of the limitations of usability testing [6], examination of common pitfalls in evaluating interactive systems [11], and discussion of technical HCI research as an activity of invention that contrasts with activities of discovery [8]. Additional discussion considers how these challenges manifest or can be magnified in social computing systems [1], with their corresponding need for a critical mass of participation [7]. Our reflection is intended to complement existing discussions without contradiction. This position paper first considers the case where code is closely linked to contribution. It then explores cases where the link is less direct. Consistent with the workshop's proposal to explore conceptual roles for toolkits in HCI research, we examine several forms of interactive systems contribution based in a differentiation of: (1) what a system accomplishes, versus (2) how it accomplishes that. We conclude with brief comments on our prior interactive systems research as a background for participation in the \#HCI.Tools workshop. WHEN CODE IS THE CONTRIBUTION Some interactive systems research contributions are directly manifested in code. Although these are a minority, they are important for both: (1) their own research value and impact, and (2) the contrast they can provide for other styles of research. A well-known example is the \$1 Recognizer, a template-based unistroke gesture recognizer implemented in approximately 100 lines of code [15]. The paper has been widely cited, both in applications that use the recognizer and in later extensions of the underlying recognition technique. A project website also hosts community implementations of the recognizer in multiple programming languages. The contribution and impact of this research thus directly results from solving a technical challenge in code that people can easily adopt and adapt in their applications and contexts. Replication, Validation, and Extension Discussions of replication within the CHI community often focus on experimental replication, which remains relevant in our current context. For example, the \$1 Recognizer's project website includes data to replicate its performance experiments. But contributions associated with code also provide opportunity for stronger validation: each future use of that code in a new application, or in a context beyond the original research, validates the underlying research contribution. This validation is riskier and therefore stronger than simply re-executing the original data analysis or replicating the prior experiment. Figures 1 and 2 illustrate this using a simple visual language we develop in figures throughout this paper. In Figure 1, we distill the contribution of the \$1 Recognizer down to a circle. The circle is filled (i.e., purple) to indicate that contribution is novel. In contrast, we will use empty circles (i.e., white) to illustrate components of a system that are not themselves novel (e.g., replicate a prior result, otherwise already known). Figure 2 illustrates this in a research progression based on the \$1 Recognizer. This progression begins with Protractor, a recognizer informed by techniques in the \$1 Recognizer [9]. Protractor is then used in implementing Gesture Script, a novel tool for interactively authoring compound gestures [10]. Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the Owner/Author. Copyright is held by the owner/author(s). Presented at the CHI 2017 Workshop on \#HCI.Tools: Strategies and Best Practices for Designing, Evaluating, and Sharing Technical HCI Toolkits.},
  file = {/Users/geoffreylitt/Zotero/storage/MHDZ42SV/Fogarty - 2017 - Code and Contribution in Interactive Systems Resea.pdf},
  keywords = {meta-research}
}

@article{fowler2020,
  title = {Model-{{View}}-{{Update}}-{{Communicate}}: {{Session Types}} Meet the {{Elm Architecture}}},
  shorttitle = {Model-{{View}}-{{Update}}-{{Communicate}}},
  author = {Fowler, Simon},
  year = {2020},
  month = jan,
  abstract = {Session types are a type discipline for communication channel endpoints which allow conformance to protocols to be checked statically. Safely implementing session types requires linearity, usually in the form of a linear type system. Unfortunately, linear typing is difficult to integrate with graphical user interfaces (GUIs), and to date most programs using session types are command line applications. In this paper, we propose the first principled integration of session typing and GUI development by building upon the Model-View-Update (MVU) architecture, pioneered by the Elm programming language. We introduce \$\textbackslash{}lambda\_\{\textbackslash{}textsf\{MVU\}\}\$, the first formal model of the MVU architecture, and prove it sound. By extending \$\textbackslash{}lambda\_\{\textbackslash{}textsf\{MVU\}\}\$ with \textbackslash{}emph\{commands\} as found in Elm, along with \textbackslash{}emph\{linearity\} and \textbackslash{}emph\{model transitions\}, we show the first formal integration of session typing and GUI programming. We implement our approach in the Links web programming language, and show examples including a two-factor authentication workflow and multi-room chat server.},
  archivePrefix = {arXiv},
  eprint = {1910.11108},
  eprinttype = {arxiv},
  file = {/Users/geoffreylitt/Zotero/storage/689LC7JQ/Fowler - 2020 - Model-View-Update-Communicate Session Types meet .pdf;/Users/geoffreylitt/Zotero/storage/NFXV2J5L/1910.html},
  journal = {arXiv:1910.11108 [cs]},
  keywords = {Computer Science - Programming Languages},
  primaryClass = {cs}
}

@incollection{friedman2006,
  title = {Value {{Sensitive Design}} and {{Information Systems}}},
  booktitle = {Human-{{Computer Interaction}} and {{Management Information Systems}}: {{Foundations}}},
  author = {Friedman, Batya and Kahn, Peter H. and Borning, Alan},
  editor = {Zhang, Ping and Galletta, Dennis F.},
  year = {2006},
  month = jul,
  pages = {27},
  publisher = {{Routledge}},
  address = {{New York, NY}},
  language = {en},
  series = {Advances in {{Management}}}
}

@inproceedings{gajos2008,
  title = {Improving the Performance of Motor-Impaired Users with Automatically-Generated, Ability-Based Interfaces},
  booktitle = {Proceedings of the {{Twenty}}-{{Sixth Annual Chi Conference}} on {{Human Factors}} in {{Computing Systems}} - {{CHI}} '08},
  author = {Gajos, Krzysztof Z. and Wobbrock, Jacob O. and Weld, Daniel S.},
  year = {2008},
  pages = {1257},
  publisher = {{ACM Press}},
  address = {{Florence, Italy}},
  doi = {10.1145/1357054.1357250},
  abstract = {We evaluate two systems for automatically generating personalized interfaces adapted to the individual motor capabilities of users with motor impairments. The first system, SUPPLE, adapts to users' capabilities indirectly by first using the ARNAULD preference elicitation engine to model a user's preferences regarding how he or she likes the interfaces to be created. The second system, SUPPLE++, models a user's motor abilities directly from a set of one-time motor performance tests. In a study comparing these approaches to baseline interfaces, participants with motor impairments were 26.4\% faster using ability-based user interfaces generated by SUPPLE++. They also made 73\% fewer errors, strongly preferred those interfaces to the manufacturers' defaults, and found them more efficient, easier to use, and much less physically tiring. These findings indicate that rather than requiring some users with motor impairments to adapt themselves to software using separate assistive technologies, software can now adapt itself to the capabilities of its users.},
  isbn = {978-1-60558-011-1},
  language = {en}
}

@unpublished{gelman2013,
  title = {The Garden of Forking Paths: {{Why}} Multiple Comparisons Can Be a Problem, Even When There Is No ``Fishing Expedition'' or ``p-Hacking'' and the Research Hypothesis Was Posited Ahead of Time},
  author = {Gelman, Andrew and Loken, Eric},
  year = {2013},
  abstract = {Researcher degrees of freedom can lead to a multiple comparisons problem, even in settings where researchers perform only a single analysis on their data. The problem is there can be a large number of potential comparisons when the details of data analysis are highly contingent on data, without the researcher having to perform any conscious procedure of fishing or examining multiple p-values. We discuss in the context of several examples of published papers where data-analysis decisions were theoretically-motivated based on previous literature, but where the details of data selection and analysis were not pre-specified and, as a result, were contingent on data.},
  language = {en}
}

@inproceedings{gilbert2009,
  title = {Predicting Tie Strength with Social Media},
  booktitle = {Proceedings of the 27th {{International Conference}} on {{Human Factors}} in {{Computing Systems}} - {{CHI}} 09},
  author = {Gilbert, Eric and Karahalios, Karrie},
  year = {2009},
  pages = {211},
  publisher = {{ACM Press}},
  address = {{Boston, MA, USA}},
  doi = {10.1145/1518701.1518736},
  abstract = {Social media treats all users the same: trusted friend or total stranger, with little or nothing in between. In reality, relationships fall everywhere along this spectrum, a topic social science has investigated for decades under the theme of tie strength. Our work bridges this gap between theory and practice. In this paper, we present a predictive model that maps social media data to tie strength. The model builds on a dataset of over 2,000 social media ties and performs quite well, distinguishing between strong and weak ties with over 85\% accuracy. We complement these quantitative findings with interviews that unpack the relationships we could not predict. The paper concludes by illustrating how modeling tie strength can improve social media design elements, including privacy controls, message routing, friend introductions and information prioritization.},
  isbn = {978-1-60558-246-7},
  language = {en}
}

@article{gould1985,
  title = {Designing for {{Usability}}: {{Key Principles}} and {{What Designers Think}}},
  shorttitle = {Designing for {{Usability}}},
  author = {Gould, John D. and Lewis, Clayton},
  year = {1985},
  month = mar,
  volume = {28},
  pages = {300--311},
  issn = {0001-0782},
  doi = {10.1145/3166.3170},
  abstract = {This article is both theoretical and empirical. Theoretically, it describes three principles of system design which we believe must be followed to produce a useful and easy to use computer system. These principles are: early and continual focus on users; empirical measurement of usage; and iterative design whereby the system (simulated, prototype, and real) is modified, tested, modified again, tested again, and the cycle is repeated again and again. This approach is contrasted to other principled design approaches, for example, get it right the first time, reliance on design guidelines. Empirically, the article presents data which show that our design principles are not always intuitive to designers; identifies the arguments which designers often offer for not using these principles\textemdash{}and answers them; and provides an example in which our principles have been used successfully.},
  journal = {Commun. ACM},
  number = {3}
}

@inproceedings{guo2013,
  title = {Online Python Tutor: Embeddable Web-Based Program Visualization for Cs Education},
  shorttitle = {Online Python Tutor},
  booktitle = {Proceeding of the 44th {{ACM}} Technical Symposium on {{Computer}} Science Education},
  author = {Guo, Philip J.},
  year = {2013},
  month = mar,
  pages = {579--584},
  publisher = {{Association for Computing Machinery}},
  address = {{Denver, Colorado, USA}},
  doi = {10.1145/2445196.2445368},
  abstract = {This paper presents Online Python Tutor, a web-based program visualization tool for Python, which is becoming a popular language for teaching introductory CS courses. Using this tool, teachers and students can write Python programs directly in the web browser (without installing any plugins), step forwards and backwards through execution to view the run-time state of data structures, and share their program visualizations on the web. In the past three years, over 200,000 people have used Online Python Tutor to visualize their programs. In addition, instructors in a dozen universities such as UC Berkeley, MIT, the University of Washington, and the University of Waterloo have used it in their CS1 courses. Finally, Online Python Tutor visualizations have been embedded within three web-based digital Python textbook projects, which collectively attract around 16,000 viewers per month and are being used in at least 25 universities. Online Python Tutor is free and open source software, available at pythontutor.com.},
  file = {/Users/geoffreylitt/Zotero/storage/N52WHB3D/Guo - 2013 - Online python tutor embeddable web-based program .pdf},
  isbn = {978-1-4503-1868-6},
  keywords = {CS1,program visualization,python},
  series = {{{SIGCSE}} '13}
}

@incollection{haines2010,
  title = {A World Wider than the {{Web}}},
  booktitle = {No {{Code Required}}},
  author = {Haines, Will and Gervasio, Melinda and Blythe, Jim and Lerman, Kristina and Spaulding, Aaron},
  year = {2010},
  pages = {213--231},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00011-0},
  abstract = {As Web services become more diverse and powerful, end user programming (EUP) systems for the Web become increasingly compelling. However, many user workflows do not exist exclusively online. To support these workflows completely, EUP systems must allow the user to program across multiple applications in different domains. To this end, we created Integrated Task Learning (ITL), a system that integrates several learning components to learn end user workflows as user-editable executable procedures. In this chapter, we illustrate a motivating cross-domain task and describe the various learning techniques that support learning such a task with ITL. These techniques include dataflow reasoning to learn procedures from demonstration, symbolic analysis and compositional search to support procedure editing, and machine learning to infer new semantic types. Then, we describe the central engineering concept that ITL uses to facilitate cross-domain learning: pluggable domain models, which are independently generated type and action models over different application domains that can be combined to support cross-domain procedure learning. Finally, we briefly discuss some open questions that cross-domain EUP systems will need to address in the future.},
  file = {/Users/geoffreylitt/Zotero/storage/CVIKVD3V/Haines et al. - 2010 - A world wider than the Web.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@incollection{hartmann2010,
  title = {Programming by a Sample},
  booktitle = {No {{Code Required}}},
  author = {Hartmann, Bj{\"o}rn and Wu, Leslie and Collins, Kevin and Klemmer, Scott R.},
  year = {2010},
  pages = {191--211},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00010-9},
  abstract = {Many popular Web sites offer a public API that allows Web developers to access site data and functionality programmatically. The site and its API offer two complementary views of the same underlying functionality. This chapter introduces d.mix, a Web development tool that leverages this site-to-service correspondence to rapidly create Web-service based applications. With d.mix, users browse annotated Web sites and select elements on the page they would like to access programmatically. It then generates code for the underlying Web service calls that yield those elements. This code can be edited, executed, and shared in a wiki-based hosting environment. The application d.mix leverages prexisting Web sites as example sets and supports rapid composition and modification of examples.},
  file = {/Users/geoffreylitt/Zotero/storage/2Y4SNX4C/Hartmann et al. - 2010 - Programming by a sample.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@incollection{hayes2014,
  title = {Knowing by {{Doing}}: {{Action Research}} as an {{Approach}} to {{HCI}}},
  booktitle = {Ways of Knowing in {{HCI}}},
  author = {Hayes, Gillian R.},
  editor = {Olson, Judith S. and Kellogg, Wendy},
  year = {2014},
  pages = {49--68},
  publisher = {{Springer}},
  address = {{New York}},
  isbn = {978-1-4939-0377-1},
  keywords = {Human-computer interaction},
  language = {en},
  lccn = {QA76.9.H85 W39 2014}
}

@article{healey2012,
  title = {Attention and {{Visual Memory}} in {{Visualization}} and {{Computer Graphics}}},
  author = {Healey, Christopher G. and Enns, James T.},
  year = {2012},
  month = jul,
  volume = {18},
  pages = {1170--1188},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2011.127},
  abstract = {A fundamental goal of visualization is to produce images of data that support visual analysis, exploration, and discovery of novel insights. An important consideration during visualization design is the role of human visual perception. How we "see'' details in an image can directly impact a viewer's efficiency and effectiveness. This paper surveys research on attention and visual perception, with a specific focus on results that have direct relevance to visualization and visual analytics. We discuss theories of low-level visual perception, then show how these findings form a foundation for more recent work on visual memory and visual attention. We conclude with a brief overview of how knowledge of visual attention and visual memory is being applied in visualization and graphics. We also discuss how challenges in visualization are motivating research in psychophysics.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  keywords = {attention,Attention,Bars,color,computer graphics,Computer Graphics,data analysis,data visualisation,Data visualization,Feature extraction,human visual perception,Humans,Memory,Models; Theoretical,motion,nonphotorealism,Pattern Recognition; Visual,psychophysics,Psychophysics,Research,texture,visual analysis,visual analytics,visual attention,visual memory,visual perception,Visual perception,Visual Perception,Visualization,visualization design,visualization.},
  number = {7}
}

@incollection{hearst2009,
  title = {Chapter 10: {{Information Visualization}} for {{Search Interfaces}}},
  booktitle = {Search {{User Interfaces}}},
  author = {Hearst, Marti},
  year = {2009},
  publisher = {{Cambridge University Press}},
  address = {{Cambridge, UK}}
}

@incollection{hearst2009a,
  title = {Chapter 11: {{Information Visualization}} for {{Text Analysis}}},
  booktitle = {Search {{User Interfaces}}},
  author = {Hearst, Marti},
  year = {2009},
  publisher = {{Cambridge University Press}},
  address = {{Cambridge, UK}}
}

@article{heer2007,
  title = {Animated {{Transitions}} in {{Statistical Data Graphics}}},
  author = {Heer, Jeffrey and Robertson, George G.},
  year = {2007},
  month = nov,
  volume = {13},
  pages = {1240--1247},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2007.70539},
  abstract = {In this paper we investigate the effectiveness of animated transitions between common statistical data graphics such as bar charts, pie charts, and scatter plots. We extend theoretical models of data graphics to include such transitions, introducing a taxonomy of transition types. We then propose design principles for creating effective transitions and illustrate the application of these principles in DynaVis, a visualization system featuring animated data graphics. Two controlled experiments were conducted to assess the efficacy of various transition types, finding that animated transitions can significantly improve graphical perception.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  keywords = {animated transitions,animation,Animation,bar charts,Collaboration,computer animation,data visualisation,Data visualization,design,Drilling,DynaVis,experiment,graphical perception,Graphics,Guidelines,Information analysis,information visualization,Marketing and sales,pie charts,scatter plots,Scattering,statistical analysis,statistical data graphics,Statistical data graphics,Taxonomy,transitions,visualization system},
  number = {6}
}

@inproceedings{heer2010,
  title = {Crowdsourcing {{Graphical Perception}}: {{Using Mechanical Turk}} to {{Assess Visualization Design}}},
  shorttitle = {Crowdsourcing {{Graphical Perception}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Heer, Jeffrey and Bostock, Michael},
  year = {2010},
  pages = {203--212},
  publisher = {{ACM}},
  address = {{New York, NY}},
  doi = {10.1145/1753326.1753357},
  abstract = {Understanding perception is critical to effective visualization design. With its low cost and scalability, crowdsourcing presents an attractive option for evaluating the large design space of visualizations; however, it first requires validation. In this paper, we assess the viability of Amazon's Mechanical Turk as a platform for graphical perception experiments. We replicate previous studies of spatial encoding and luminance contrast and compare our results. We also conduct new experiments on rectangular area perception (as in treemaps or cartograms) and on chart size and gridline spacing. Our results demonstrate that crowdsourced perception experiments are viable and contribute new insights for visualization design. Lastly, we report cost and performance data from our experiments and distill recommendations for the design of crowdsourced studies.},
  isbn = {978-1-60558-929-9},
  keywords = {crowdsourcing,evaluation,experimentation,graphical perception,information visualization,mechanical turk,user study},
  series = {{{CHI}} '10}
}

@article{heer2012,
  title = {Interactive {{Dynamics}} for {{Visual Analysis}}},
  author = {Heer, Jeffrey and Shneiderman, Ben},
  year = {2012},
  month = apr,
  volume = {55},
  pages = {45},
  issn = {00010782},
  doi = {10.1145/2133806.2133821},
  journal = {Communications of the ACM},
  language = {en},
  number = {4}
}

@inproceedings{hill1992,
  title = {Edit {{Wear}} and {{Read Wear}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Hill, William C. and Hollan, James D. and Wroblewski, Dave and McCandless, Tim},
  year = {1992},
  pages = {3--9},
  publisher = {{ACM}},
  address = {{New York, NY}},
  doi = {10.1145/142750.142751},
  abstract = {We describe two applications that illustrate the idea of computational wear in the domain of document processing. By graphically depicting the history of author and reader interactions with documents, these applications offer otherwise unavailable information to guide work. We discuss how their design accords with a theory of professional work and an informational physics perspective on interface design.},
  isbn = {978-0-89791-513-7},
  keywords = {graphical user interfaces,informational physics,interface mechanisms,professional work,reflective practitioner},
  series = {{{CHI}} '92}
}

@inproceedings{hinckley2010,
  title = {Pen + Touch = New Tools},
  booktitle = {Proceedings of the 23nd {{Annual ACM Symposium}} on {{User Interface Software}} and {{Technology}} - {{UIST}} '10},
  author = {Hinckley, Ken and Yatani, Koji and Pahud, Michel and Coddington, Nicole and Rodenhouse, Jenny and Wilson, Andy and Benko, Hrvoje and Buxton, Bill},
  year = {2010},
  pages = {27},
  publisher = {{ACM Press}},
  address = {{New York, NY}},
  doi = {10.1145/1866029.1866036},
  abstract = {We describe techniques for direct pen+touch input. We observe people's manual behaviors with physical paper and notebooks. These serve as the foundation for a prototype Microsoft Surface application, centered on note-taking and scrapbooking of materials. Based on our explorations we advocate a division of labor between pen and touch: the pen writes, touch manipulates, and the combination of pen + touch yields new tools. This articulates how our system interprets unimodal pen, unimodal touch, and multimodal pen+touch inputs, respectively. For example, the user can hold a photo and drag off with the pen to create and place a copy; hold a photo and cross it in a freeform path with the pen to slice it in two; or hold selected photos and tap one with the pen to staple them all together. Touch thus unifies object selection with mode switching of the pen, while the muscular tension of holding touch serves as the ``glue'' that phrases together all the inputs into a unitary multimodal gesture. This helps the UI designer to avoid encumbrances such as physical buttons, persistent modes, or widgets that detract from the user's focus on the workspace.},
  isbn = {978-1-4503-0271-5},
  language = {en}
}

@inproceedings{hoffswell2018a,
  title = {Augmenting {{Code}} with {{In Situ Visualizations}} to {{Aid Program Understanding}}},
  booktitle = {Proceedings of the 2018 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Hoffswell, Jane and Satyanarayan, Arvind and Heer, Jeffrey},
  year = {2018},
  month = apr,
  pages = {1--12},
  publisher = {{Association for Computing Machinery}},
  address = {{Montreal QC, Canada}},
  doi = {10.1145/3173574.3174106},
  abstract = {Programmers must draw explicit connections between their code and runtime state to properly assess the correctness of their programs. However, debugging tools often decouple the program state from the source code and require explicitly invoked views to bridge the rift between program editing and program understanding. To unobtrusively reveal runtime behavior during both normal execution and debugging, we contribute techniques for visualizing program variables directly within the source code. We describe a design space and placement criteria for embedded visualizations. We evaluate our in situ visualizations in an editor for the Vega visualization grammar. Compared to a baseline development environment, novice Vega users improve their overall task grade by about 2 points when using the in situ visualizations and exhibit significant positive effects on their self-reported speed and accuracy.},
  file = {/Users/geoffreylitt/Zotero/storage/YHWWBVN2/Hoffswell et al. - 2018 - Augmenting Code with In Situ Visualizations to Aid.pdf},
  isbn = {978-1-4503-5620-6},
  keywords = {code augmentation,debugging,program behavior,program understanding,visualization},
  series = {{{CHI}} '18}
}

@inproceedings{hofmann2012,
  title = {Edit Lenses},
  booktitle = {Proceedings of the 39th Annual {{ACM SIGPLAN}}-{{SIGACT}} Symposium on {{Principles}} of Programming Languages - {{POPL}} '12},
  author = {Hofmann, Martin and Pierce, Benjamin and Wagner, Daniel},
  year = {2012},
  pages = {495},
  publisher = {{ACM Press}},
  address = {{Philadelphia, PA, USA}},
  doi = {10.1145/2103656.2103715},
  abstract = {A lens is a bidirectional transformation between a pair of connected data structures, capable of translating an edit on one structure into an appropriate edit on the other. Many varieties of lenses have been studied, but none, to date, has offered a satisfactory treatment of how edits are represented. Many foundational accounts [5, 7] only consider edits of the form ``overwrite the whole structure,'' leading to poor behavior in many situations by failing to track the associations between corresponding parts of the structures when elements are inserted and deleted in ordered lists, for example. Other theories of lenses do maintain these associations, either by annotating the structures themselves with change information [6, 15] or using auxiliary data structures [2, 4], but every extant theory assumes that the entire original source structure is part of the information passed to the lens. We offer a general theory of edit lenses, which work with descriptions of changes to structures, rather than with the structures themselves. We identify a simple notion of ``editable structure''\textemdash{}a set of states plus a monoid of edits with a partial monoid action on the states\textemdash{}and construct a semantic space of lenses between such structures, with natural laws governing their behavior. We show how a range of constructions from earlier papers on ``statebased'' lenses can be carried out in this space, including composition, products, sums, list operations, etc. Further, we show how to construct edit lenses for arbitrary containers in the sense of Abbott, Altenkirch, and Ghani [1]. Finally, we show that edit lenses refine a wellknown formulation of state-based lenses [7], in the sense that every state-based lens gives rise to an edit lens over structures with a simple overwrite-only edit language, and conversely every edit lens on such structures gives rise to a state-based lens.},
  file = {/Users/geoffreylitt/Zotero/storage/LWVRA7FP/Hofmann et al. - 2012 - Edit lenses.pdf},
  isbn = {978-1-4503-1083-3},
  language = {en}
}

@inproceedings{hogue2005,
  title = {Thresher: Automating the Unwrapping of Semantic Content from the {{World Wide Web}}},
  shorttitle = {Thresher},
  booktitle = {Proceedings of the 14th International Conference on {{World Wide Web}}  - {{WWW}} '05},
  author = {Hogue, Andrew and Karger, David},
  year = {2005},
  pages = {86},
  publisher = {{ACM Press}},
  address = {{Chiba, Japan}},
  doi = {10.1145/1060745.1060762},
  abstract = {We describe Thresher, a system that lets non-technical users teach their browsers how to extract semantic web content from HTML documents on the World Wide Web. Users specify examples of semantic content by highlighting them in a web browser and describing their meaning. We then use the tree edit distance between the DOM subtrees of these examples to create a general pattern, or wrapper, for the content, and allow the user to bind RDF classes and predicates to the nodes of these wrappers. By overlaying matches to these patterns on standard documents inside the Haystack semantic web browser, we enable a rich semantic interaction with existing web pages, ``unwrapping'' semantic data buried in the pages' HTML. By allowing end-users to create, modify, and utilize their own patterns, we hope to speed adoption and use of the Semantic Web and its applications.},
  file = {/Users/geoffreylitt/Zotero/storage/SGZ4PK28/Hogue and Karger - 2005 - Thresher automating the unwrapping of semantic co.pdf},
  isbn = {978-1-59593-046-0},
  language = {en}
}

@inproceedings{hollan1992,
  title = {Beyond {{Being There}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Hollan, Jim and Stornetta, Scott},
  year = {1992},
  pages = {119--125},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/142750.142769},
  abstract = {A belief in the efficacy of imitating face-to-face communication is an unquestioned presupposition of most current work on supporting communications in electronic media. In this paper we highlight problems with this presupposition and present an alternative proposal for grounding and motivating research and development that frames the issue in terms of needs, media, and mechanisms. To help elaborate the proposal we sketch a series of example projects and respond to potential criticisms.},
  isbn = {978-0-89791-513-7},
  keywords = {CSCW,telecommunications},
  series = {{{CHI}} '92}
}

@article{holten2006,
  title = {Hierarchical {{Edge Bundles}}: {{Visualization}} of {{Adjacency Relations}} in {{Hierarchical Data}}},
  shorttitle = {Hierarchical {{Edge Bundles}}},
  author = {Holten, D.},
  year = {2006},
  month = sep,
  volume = {12},
  pages = {741--748},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2006.147},
  abstract = {A compound graph is a frequently encountered type of data set. Relations are given between items, and a hierarchy is defined on the items as well. We present a new method for visualizing such compound graphs. Our approach is based on visually bundling the adjacency edges, i.e., non-hierarchical edges, together. We realize this as follows. We assume that the hierarchy is shown via a standard tree visualization method. Next, we bend each adjacency edge, modeled as a B-spline curve, toward the polyline defined by the path via the inclusion edges from one node to another. This hierarchical bundling reduces visual clutter and also visualizes implicit adjacency edges between parent nodes that are the result of explicit adjacency edges between their respective child nodes. Furthermore, hierarchical edge bundling is a generic method which can be used in conjunction with existing tree visualization techniques. We illustrate our technique by providing example visualizations and discuss the results based on an informal evaluation provided by potential users of such visualizations.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {5}
}

@inproceedings{horvitz1998,
  title = {The {{Lumi\`ere Project}}: {{Bayesian User Modeling}} for {{Inferring}} the {{Goals}} and {{Needs}} of {{Software Users}}},
  shorttitle = {The {{Lumi\`eRe Project}}},
  booktitle = {Proceedings of the {{Fourteenth Conference}} on {{Uncertainty}} in {{Artificial Intelligence}}},
  author = {Horvitz, Eric and Breese, Jack and Heckerman, David and Hovel, David and Rommelse, Koos},
  year = {1998},
  pages = {256--265},
  publisher = {{Morgan Kaufmann Publishers Inc.}},
  address = {{San Francisco, CA, USA}},
  abstract = {The Lumi\`ere Project centers on harnessing probability and utility to provide assistance to computer software users. We review work on Bayesian user models that can be employed to infer a user's needs by considering a user's background, actions, and queries. Several problems were tackled in Lumi\`ere research, including (1) the construction of Bayesian models for reasoning about the time-varying goals of computer users from their observed actions and queries, (2) gaining access to a stream of events from software applications, (3) developing a language for transforming system events into observational variables represented in Bayesian user models, (4) developing persistent profiles to capture changes in a user's expertise, and (5) the development of an overall architecture for an intelligent user interface. Lumi\`ere prototypes served as the basis for the Ofice Assistant in the Microsoft Office '97 suite of productivity applications.},
  isbn = {978-1-55860-555-8},
  series = {{{UAI}}'98}
}

@inproceedings{horvitz1999,
  title = {Principles of {{Mixed}}-{{Initiative User Interfaces}}},
  booktitle = {Proceedings of the {{SIGCHI}} Conference on {{Human}} Factors in Computing Systems the {{CHI}} Is the Limit - {{CHI}} '99},
  author = {Horvitz, Eric},
  year = {1999},
  pages = {159--166},
  publisher = {{ACM Press}},
  address = {{Pittsburgh, Pennsylvania, United States}},
  doi = {10.1145/302979.303030},
  abstract = {Recent debate has centered on the relative promise of focusing user-interface research on developing new metaphors and tools that enhance users' abilities to directly manipulate objects versus directing effort toward developing interface agents that provide automation. In this paper, we review principles that show promise for allowing engineers to enhance human\textemdash{}computer interaction through an elegant coupling of automated services with direct manipulation. Key ideas will be highlighted in terms of the LookOut system for scheduling and meeting management.},
  isbn = {978-0-201-48559-2},
  language = {en}
}

@article{horvitz2003,
  title = {Models of {{Attention}} in {{Computing}} and {{Communication}}: {{From Principles}} to {{Applications}}},
  shorttitle = {Models of {{Attention}} in {{Computing}} and {{Communication}}},
  author = {Horvitz, Eric and Kadie, Carl and Paek, Tim and Hovel, David},
  year = {2003},
  month = mar,
  volume = {46},
  pages = {52},
  issn = {00010782},
  doi = {10.1145/636772.636798},
  journal = {Communications of the ACM},
  language = {en},
  number = {3}
}

@incollection{houde1997,
  title = {What Do {{Prototypes Prototype}}?},
  booktitle = {Handbook of {{Human}}-{{Computer Interaction}}},
  author = {Houde, Stephanie and Hill, Charles},
  editor = {Helander, Martin G. and Landauer, Thomas K. and Prabhu, Prasad V.},
  year = {1997},
  edition = {2nd edition},
  pages = {367--382},
  publisher = {{Elsevier}},
  address = {{Amsterdam, Netherlands}},
  language = {en}
}

@article{hullman2011,
  title = {Visualization {{Rhetoric}}: {{Framing Effects}} in {{Narrative Visualization}}},
  shorttitle = {Visualization {{Rhetoric}}},
  author = {Hullman, J. and Diakopoulos, N.},
  year = {2011},
  month = dec,
  volume = {17},
  pages = {2231--2240},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2011.255},
  abstract = {Narrative visualizations combine conventions of communicative and exploratory information visualization to convey an intended story. We demonstrate visualization rhetoric as an analytical framework for understanding how design techniques that prioritize particular interpretations in visualizations that ``tell a story'' can significantly affect end-user interpretation. We draw a parallel between narrative visualization interpretation and evidence from framing studies in political messaging, decision-making, and literary studies. Devices for understanding the rhetorical nature of narrative information visualizations are presented, informed by the rigorous application of concepts from critical theory, semiotics, journalism, and political theory. We draw attention to how design tactics represent additions or omissions of information at various levels\textemdash{}the data, visual representation, textual annotations, and interactivity\textemdash{}and how visualizations denote and connote phenomena with reference to unstated viewing conventions and codes. Classes of rhetorical techniques identified via a systematic analysis of recent narrative visualizations are presented, and characterized according to their rhetorical contribution to the visualization. We describe how designers and researchers can benefit from the potentially positive aspects of visualization rhetoric in designing engaging, layered narrative visualizations and how our framework can shed light on how a visualization design prioritizes specific interpretations. We identify areas where future inquiry into visualization rhetoric can improve understanding of visualization interpretation.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {12}
}

@article{hullman2019,
  title = {In {{Pursuit}} of {{Error}}: {{A Survey}} of {{Uncertainty Visualization Evaluation}}},
  shorttitle = {In {{Pursuit}} of {{Error}}},
  author = {Hullman, Jessica and Qiao, Xiaoli and Correll, Michael and Kale, Alex and Kay, Matthew},
  year = {2019},
  month = jan,
  volume = {25},
  pages = {903--913},
  issn = {1077-2626, 1941-0506, 2160-9306},
  doi = {10.1109/TVCG.2018.2864889},
  abstract = {Understanding and accounting for uncertainty is critical to effectively reasoning about visualized data. However, evaluating the impact of an uncertainty visualization is complex due to the difficulties that people have interpreting uncertainty and the challenge of defining correct behavior with uncertainty information. Currently, evaluators of uncertainty visualization must rely on general purpose visualization evaluation frameworks which can be ill-equipped to provide guidance with the unique difficulties of assessing judgments under uncertainty. To help evaluators navigate these complexities, we present a taxonomy for characterizing decisions made in designing an evaluation of an uncertainty visualization. Our taxonomy differentiates six levels of decisions that comprise an uncertainty visualization evaluation: the behavioral targets of the study, expected effects from an uncertainty visualization, evaluation goals, measures, elicitation techniques, and analysis approaches. Applying our taxonomy to 86 user studies of uncertainty visualizations, we find that existing evaluation practice, particularly in visualization research, focuses on Performance and Satisfaction-based measures that assume more predictable and statistically-driven judgment behavior than is suggested by research on human judgment and decision making. We reflect on common themes in evaluation practice concerning the interpretation and semantics of uncertainty, the use of confidence reporting, and a bias toward evaluating performance as accuracy rather than decision quality. We conclude with a concrete set of recommendations for evaluators designed to reduce the mismatch between the conceptualization of uncertainty in visualization versus other fields.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {1}
}

@article{hutchins1985,
  title = {Direct Manipulation Interfaces},
  author = {Hutchins, Edwin L and Hollan, James D and Norman, Donald A},
  year = {1985},
  volume = {1},
  pages = {311--338},
  abstract = {Direct manipulation has been lauded as a good form of interface design, and some interfaces that have this property have been well received by users. In this article we seek a cognitive account of both the advantages and disadvantages of direct manipulation interfaces. We identify two underlying phenomena that give rise to the feeling of directness. One deals with the information processing distance between the user's intentions and the facilities provided by the machine. Reduction of this distance makes the interface feel direct by reducing the effort required of the user to accomplish goals. The second phenomenon concerns the relation between the input and output vocabularies of the interface language. In particular, direct manipulation requires that the system provide representations of objects that behave as if they are the objects themselves. This provides the feeling of directness of manipulation.},
  journal = {Human-Computer Interaction},
  language = {en}
}

@inproceedings{hutchinson2003,
  title = {Technology {{Probes}}: {{Inspiring Design}} for and with {{Families}}},
  shorttitle = {Technology {{Probes}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Hutchinson, Hilary and Mackay, Wendy and Westerlund, Bo and Bederson, Benjamin B. and Druin, Allison and Plaisant, Catherine and {Beaudouin-Lafon}, Michel and Conversy, St{\'e}phane and Evans, Helen and Hansen, Heiko and Roussel, Nicolas and Eiderb{\"a}ck, Bj{\"o}rn},
  year = {2003},
  pages = {17--24},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/642611.642616},
  abstract = {We describe a new method for use in the process of co-designing technologies with users called technology probes. Technology probes are simple, flexible, adaptable technologies with three interdisciplinary goals: the social science goal of understanding the needs and desires of users in a real-world setting, the engineering goal of field-testing the technology, and the design goal of inspiring users and researchers to think about new technologies. We present the results of designing and deploying two technology probes, the messageProbe and the videoProbe, with diverse families in France, Sweden, and the U.S. We conclude with our plans for creating new technologies for and with families based on our experiences.},
  isbn = {978-1-58113-630-2},
  keywords = {computer mediated communication,ethnography,home,participatory design and cooperative design},
  series = {{{CHI}} '03}
}

@inproceedings{huynh2005,
  title = {Piggy {{Bank}}: {{Experience}} the {{Semantic Web Inside Your Web Browser}}},
  shorttitle = {Piggy {{Bank}}},
  booktitle = {The {{Semantic Web}} \textendash{} {{ISWC}} 2005},
  author = {Huynh, David and Mazzocchi, Stefano and Karger, David},
  editor = {Gil, Yolanda and Motta, Enrico and Benjamins, V. Richard and Musen, Mark A.},
  year = {2005},
  pages = {413--430},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/11574620_31},
  abstract = {The Semantic Web Initiative envisions a Web wherein information is offered free of presentation, allowing more effective exchange and mixing across web sites and across web pages. But without substantial Semantic Web content, few tools will be written to consume it; without many such tools, there is little appeal to publish Semantic Web content.To break this chicken-and-egg problem, thus enabling more flexible informa-tion access, we have created a web browser extension called Piggy Bankthat lets users make use of Semantic Web content within Web content as users browse the Web. Wherever Semantic Web content is not available, Piggy Bank can invoke screenscrapers to re-structure information within web pages into Semantic Web format. Through the use of Semantic Web technologies, Piggy Bank provides direct, immediate benefits to users in their use of the existing Web. Thus, the ex-istence of even just a few Semantic Web-enabled sites or a few scrapers already benefits users. Piggy Bank thereby offers an easy, incremental upgrade path to users without requiring a wholesale adoption of the Semantic Web's vision.To further improve this Semantic Web experience, we have created Semantic Bank, a web server application that lets Piggy Bank users share the Semantic Web information they have collected, enabling collaborative efforts to build so-phisticated Semantic Web information repositories through simple, everyday's use of Piggy Bank.},
  file = {/Users/geoffreylitt/Zotero/storage/T84CAZ7L/Huynh et al. - 2005 - Piggy Bank Experience the Semantic Web Inside You.pdf},
  isbn = {978-3-540-32082-1},
  keywords = {Common Data Model,Information Item,Resource Description Framework,Resource Description Framework Data,Temporary Database},
  language = {en},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{huynh2006,
  title = {Enabling Web Browsers to Augment Web Sites' Filtering and Sorting Functionalities},
  booktitle = {Proceedings of the 19th Annual {{ACM}} Symposium on {{User}} Interface Software and Technology - {{UIST}} '06},
  author = {Huynh, David F. and Miller, Robert C. and Karger, David R.},
  year = {2006},
  pages = {125},
  publisher = {{ACM Press}},
  address = {{Montreux, Switzerland}},
  doi = {10.1145/1166253.1166274},
  abstract = {Existing augmentations of web pages are mostly small cosmetic changes (e.g., removing ads) and minor addition of third-party content (e.g., product prices from competing sites). None leverages the structured data presented in web pages. This paper describes Sifter, a web browser extension that can augment a well-structured web site with advanced filtering and sorting functionality. These added features work inside the site's own pages, preserving the site's presentational style and the user's context. Sifter contains an algorithm that scrapes structured data out of well-structured web pages while usually requiring no user intervention. We tested Sifter on real web sites and real users and found that people could use Sifter to perform sophisticated queries and high-level analyses on sizable data collections on the Web. We propose that web sites can be similarly augmented with other sophisticated data-centric functionality, giving users new benefits over the existing Web.},
  file = {/Users/geoffreylitt/Zotero/storage/8WA9RXE3/Huynh et al. - 2006 - Enabling web browsers to augment web sites' filter.pdf},
  isbn = {978-1-59593-313-3},
  language = {en}
}

@inproceedings{huynh2007,
  title = {Exhibit: Lightweight Structured Data Publishing},
  shorttitle = {Exhibit},
  booktitle = {Proceedings of the 16th International Conference on {{World Wide Web}}  - {{WWW}} '07},
  author = {Huynh, David F. and Karger, David R. and Miller, Robert C.},
  year = {2007},
  pages = {737},
  publisher = {{ACM Press}},
  address = {{Banff, Alberta, Canada}},
  doi = {10.1145/1242572.1242672},
  abstract = {The early Web was hailed for giving individuals the same publishing power as large content providers. But over time, large content providers learned to exploit the structure in their data, leveraging databases and server side technologies to provide rich browsing and visualization. Individual authors fall behind once more: neither old-fashioned static pages nor domain-specific publishing frameworks supporting limited customization can match custom database-backed web applications.},
  file = {/Users/geoffreylitt/Zotero/storage/KDFB58RI/Huynh et al. - 2007 - Exhibit lightweight structured data publishing.pdf},
  isbn = {978-1-59593-654-7},
  language = {en}
}

@article{huynh2008,
  title = {Potluck: {{Data}} Mash-up Tool for Casual Users},
  shorttitle = {Potluck},
  author = {Huynh, David F. and Miller, Robert C. and Karger, David R.},
  year = {2008},
  month = nov,
  volume = {6},
  pages = {274--282},
  issn = {15708268},
  doi = {10.1016/j.websem.2008.09.005},
  abstract = {As more and more reusable structured data appears on the Web, casual users will want to take into their own hands the task of mashing up data rather than wait for mash-up sites to be built that address exactly their individually unique needs. In this paper, we present Potluck, a Web user interface that let's casual users\textemdash{}those without programming skills and data modeling expertise\textemdash{}mash up data themselves.},
  file = {/Users/geoffreylitt/Zotero/storage/XL8L5IPD/Huynh et al. - 2008 - Potluck Data mash-up tool for casual users.pdf},
  journal = {Journal of Web Semantics},
  language = {en},
  number = {4}
}

@article{huynha,
  title = {Piggy {{Bank}}: {{Experience}} the {{Semantic Web Inside Your Web Browser}}},
  author = {Huynh, David and Mazzocchi, Stefano and Karger, David},
  pages = {15},
  abstract = {The Semantic Web Initiative envisions a Web wherein information is offered free of presentation, allowing more effective exchange and mixing across web sites and across web pages. But without substantial Semantic Web content, few tools will be written to consume it; without many such tools, there is little appeal to publish Semantic Web content.},
  file = {/Users/geoffreylitt/Zotero/storage/KN75YT2E/Huynh et al. - Piggy Bank Experience the Semantic Web Inside You.pdf},
  language = {en}
}

@article{hypercard2019,
  title = {{{HyperCard}}},
  author = {Hypercard},
  year = {2019},
  month = dec,
  abstract = {HyperCard is a software application and  development kit for Apple Macintosh and Apple IIGS computers. It is among the first successful hypermedia systems predating the World Wide Web.
HyperCard combines a flat-file database with a graphical, flexible, user-modifiable interface. HyperCard includes a built-in programming language called HyperTalk for manipulating data and the user interface.
This combination of features \textendash{} a database with simple form layout, flexible support for graphics, and ease of programming \textendash{} suits HyperCard for many different projects such as rapid application development of applications and databases, interactive applications with no database requirements, command and control systems, and many examples in the demoscene.
HyperCard was originally released in 1987 for \$49.95 and was included for free with all new Macs sold then. It was withdrawn from sale in March 2004, having received its final update in 1998 upon the return of Steve Jobs to Apple. HyperCard runs in the Classic Environment, but was not ported to Mac OS X.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  file = {/Users/geoffreylitt/Zotero/storage/XZV548R8/index.html},
  journal = {Wikipedia},
  language = {en},
  note = {Page Version ID: 931376685}
}

@article{jackson2002,
  title = {Alloy: A Lightweight Object Modelling Notation},
  shorttitle = {Alloy},
  author = {Jackson, Daniel},
  year = {2002},
  month = apr,
  volume = {11},
  pages = {256--290},
  issn = {1049331X},
  doi = {10.1145/505145.505149},
  file = {/Users/geoffreylitt/Zotero/storage/D2PEJZE5/Jackson - 2002 - Alloy a lightweight object modelling notation.pdf},
  journal = {ACM Transactions on Software Engineering and Methodology},
  language = {en},
  number = {2}
}

@inproceedings{jensen2018,
  title = {Remediating a {{Design Tool}}: {{Implications}} of {{Digitizing Sticky Notes}}},
  shorttitle = {Remediating a {{Design Tool}}},
  booktitle = {Proceedings of the 2018 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Jensen, Mads M{\o}ller and R{\"a}dle, Roman and Klokmose, Clemens N. and Bodker, Susanne},
  year = {2018},
  month = apr,
  pages = {1--12},
  publisher = {{Association for Computing Machinery}},
  address = {{Montreal QC, Canada}},
  doi = {10.1145/3173574.3173798},
  abstract = {Sticky notes are ubiquitous in design processes because of their tangibility and ease of use. Yet, they have well-known limitations in professional design processes, as documentation and distribution are cumbersome at best. This paper compares the use of sticky notes in ideation with a remediated digital sticky notes setup. The paper contributes with a nuanced understanding of what happens when remediating a physical design tool into digital space, by emphasizing focus shifts and breakdowns caused by the technology, but also benefits and promises inherent in the digital media. Despite users' preference for creating physical notes, handling digital notes on boards was easier and the potential of proper documentation make the digital setup a possible alternative. While the analogy in our remediation supported a transfer of learned handling, the users' experiences across technological setups impact their use and understanding, yielding new concerns regarding cross-device transfer and collaboration.},
  file = {/Users/geoffreylitt/Zotero/storage/Y7AD6GWN/Jensen et al. - 2018 - Remediating a Design Tool Implications of Digitiz.pdf},
  isbn = {978-1-4503-5620-6},
  keywords = {comparative analysis,cross-device interaction,design tools,remediation,sticky notes},
  series = {{{CHI}} '18}
}

@article{jones,
  title = {Tackling the {{Awkward Squad}}: Monadic Input/Output, Concurrency, Exceptions, and Foreign-Language Calls in {{Haskell}}},
  author = {Jones, Simon PEYTON},
  pages = {46},
  abstract = {Functional programming may be beautiful, but to write real applications we must grapple with awkward real-world issues: input/output, robustness, concurrency, and interfacing to programs written in other languages.},
  file = {/Users/geoffreylitt/Zotero/storage/HQWP2WDS/Jones - Tackling the Awkward Squad monadic inputoutput, .pdf},
  language = {en}
}

@incollection{jones2010,
  title = {Mashed Layers and Muddled Models},
  booktitle = {No {{Code Required}}},
  author = {Jones, M. Cameron and Churchill, Elizabeth F. and Nelson, Les},
  year = {2010},
  pages = {423--438},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00022-5},
  abstract = {Programming for the Web is a daunting task, especially when attempting to mash up multiple services and data sources. Many technologies advocated in this book approach this problem by attempting to hide the messiness of the Web from the developer. However, these efforts can complicate the process of debugging as data are passed through multiple transformations and sources of errors are obscured beneath additional layers of abstraction and processing. In this chapter we discuss the issues of debugging Web applications and Web mashups, and we explore how users of the Yahoo! Pipes programming environment turn to an online community for help-seeking and help-giving. We discuss the social and collaborative aspects of debugging in Web programming and argue that the complexity and heterogeneity of the Web requires a diversity of knowledge and experience beyond the grasp of any individual, and any effort to encourage or enhance the end user programming experience for the Web must embrace facilities for social and collaborative engagement.},
  file = {/Users/geoffreylitt/Zotero/storage/NSEUTURI/Jones et al. - 2010 - Mashed layers and muddled models.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@article{kahneman2004,
  title = {A {{Survey Method}} for {{Characterizing Daily Life Experience}}: {{The Day Reconstruction Method}}},
  shorttitle = {A {{Survey Method}} for {{Characterizing Daily Life Experience}}},
  author = {Kahneman, Daniel and Krueger, Alan B. and Schkade, David A. and Schwarz, Norbert and Stone, Arthur A.},
  year = {2004},
  month = dec,
  volume = {306},
  pages = {1776--1780},
  issn = {0036-8075, 1095-9203},
  doi = {10.1126/science.1103572},
  abstract = {The Day Reconstruction Method (DRM) assesses how people spend their time and how they experience the various activities and settings of their lives, combining features of time-budget measurement and experience sampling. Participants systematically reconstruct their activities and experiences of the preceding day with procedures designed to reduce recall biases. The DRM's utility is shown by documenting close correspondences between the DRM reports of 909 employed women and established results from experience sampling. An analysis of the hedonic treadmill shows the DRM's potential for well-being research.},
  journal = {Science},
  language = {en},
  number = {5702}
}

@article{kandel2012,
  title = {Enterprise {{Data Analysis}} and {{Visualization}}: {{An Interview Study}}},
  shorttitle = {Enterprise {{Data Analysis}} and {{Visualization}}},
  author = {Kandel, Sean and Paepcke, Andreas and Hellerstein, Joseph M. and Heer, Jeffrey},
  year = {2012},
  month = dec,
  volume = {18},
  pages = {2917--2926},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2012.219},
  abstract = {Organizations rely on data analysts to model customer engagement, streamline operations, improve production, inform business decisions, and combat fraud. Though numerous analysis and visualization tools have been built to improve the scale and efficiency at which analysts can work, there has been little research on how analysis takes place within the social and organizational context of companies. To better understand the enterprise analysts' ecosystem, we conducted semi-structured interviews with 35 data analysts from 25 organizations across a variety of sectors, including healthcare, retail, marketing and finance. Based on our interview data, we characterize the process of industrial data analysis and document how organizational features of an enterprise impact it. We describe recurring pain points, outstanding challenges, and barriers to adoption for visual analytic tools. Finally, we discuss design implications and opportunities for visual analysis research.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {12}
}

@inproceedings{kang2017,
  title = {Omnicode: {{A Novice}}-{{Oriented Live Programming Environment}} with {{Always}}-{{On Run}}-{{Time Value Visualizations}}},
  shorttitle = {Omnicode},
  booktitle = {Proceedings of the 30th {{Annual ACM Symposium}} on {{User Interface Software}} and {{Technology}}},
  author = {Kang, Hyeonsu and Guo, Philip J.},
  year = {2017},
  month = oct,
  pages = {737--745},
  publisher = {{ACM}},
  address = {{Qu\'ebec City QC Canada}},
  doi = {10.1145/3126594.3126632},
  abstract = {Visualizations of run-time program state help novices form proper mental models and debug their code. We push this technique to the extreme by posing the following question: What if a live programming environment for an imperative language always displays the entire history of all run-time values for all program variables all the time? To explore this question, we built a prototype live IDE called Omnicode (``Omniscient Code'') that continually runs the user's Python code and uses a scatterplot matrix to visualize the entire history of all of its numerical values, along with meaningful numbers derived from other data types. To filter the visualizations and hone in on specific points of interest, the user can brush and link over the scatterplots or select portions of code. They can also zoom in to view detailed stack and heap visualizations at each execution step. An exploratory study on 10 novice programmers discovered that they found Omnicode to be useful for debugging, forming mental models, explaining their code to others, and discovering moments of serendipity that would not have been likely within an ordinary IDE.},
  file = {/Users/geoffreylitt/Zotero/storage/PDKJMA9H/Kang and Guo - 2017 - Omnicode A Novice-Oriented Live Programming Envir.pdf},
  isbn = {978-1-4503-4981-9},
  keywords = {program visualization},
  language = {en}
}

@phdthesis{kasibatla2018,
  title = {Seymour: {{A Live Programming Environment}} for the {{Classroom}}},
  shorttitle = {Seymour},
  author = {Kasibatla, Saketh Ram},
  year = {2018},
  abstract = {A programming environment that visualizes a program's execution can help users better understand their programs. However, building such an environment for programmers at large is difficult, as it is not clear how to effectively visualize large, complex programs. We would like to make progress on this problem by first focusing on a subproblem: creating a better programming experience for learning and teaching programming. To explore this approach, we built Seymour, a prototype live programming environment that visualizes all events in a program's execution. Seymour features two complementary visualizations\textemdash{}one that shows a detailed view of a method call, and another that depicts the whole execution at a high level. These two visualizations come together to create a compelling user experience that we plan to test and improve with student feedback},
  file = {/Users/geoffreylitt/Zotero/storage/C4HAJB3I/Kasibatla - 2018 - Seymour A Live Programming Environment for the Cl.pdf;/Users/geoffreylitt/Zotero/storage/IX5Z2NLB/8gx5x6kj.html},
  language = {en},
  school = {UCLA}
}

@inproceedings{kay1972,
  title = {A {{Personal Computer}} for {{Children}} of {{All Ages}}},
  booktitle = {Proceedings of the {{ACM Annual Conference}} - {{Volume}} 1},
  author = {Kay, Alan C.},
  year = {1972},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/800193.1971922},
  abstract = {This note speculates about the emergence of personal, portable information manipulators and their effects when used by both children and adults. Although it should be read as science fiction, current trends in miniaturization and price reduction almost guarantee that many of the notions discussed will actually happen in the near future.},
  series = {{{ACM}} '72}
}

@article{kay1977,
  title = {Personal {{Dynamic Media}}},
  author = {Kay, A. and Goldberg, A.},
  year = {1977},
  month = mar,
  volume = {10},
  pages = {31--41},
  issn = {1558-0814},
  doi = {10.1109/C-M.1977.217672},
  abstract = {The Learning Research Group at Xerox Palo Alto Research Center is concerned with all aspects of the communication and manipulation of knowledge. We design, build, and use dynamic media which can be used by human beings of all ages. Several years ago, we crystallized our dreams into a design idea for a personal dynamic medium the size of a notebook (the Dynabook) which could be owned by everyone and could have the power to handle virtually all of its owner's information-related needs. Towards this goal we have designed and built a communications system: the Smalltalk language, implemented on small computers we refer to as "interim Dynabooks." We are exploring the use of this system as a programming and problem solving tool; as an interactive memory for the storage and manipulation of data; as a text editor; and as a medium for expression through drawing, painting, animating pictures, and composing and generating music. (Figure 1 is a view of this interim Dynabook.)},
  file = {/Users/geoffreylitt/Zotero/storage/Q3SGCHYI/Kay and Goldberg - 1977 - Personal Dynamic Media.pdf;/Users/geoffreylitt/Zotero/storage/8Q36BUGB/1646405.html},
  journal = {Computer},
  keywords = {Animation,Computational modeling,Crystallization,Embedded computing,Information retrieval,Manipulator dynamics,Problem-solving},
  number = {3}
}

@article{kell,
  title = {The {{Mythical Matched Modules}}},
  author = {Kell, Stephen},
  pages = {8},
  abstract = {Conventional tools yield expensive and inflexible software. By requiring that software be structured as plug-compatible modules, tools preclude out-of-order development; by treating interoperation of languages as rare, adoption of innovations is inhibited. I propose that a solution must radically separate the concern of integration in software: firstly by using novel tools specialised towards integration (the ``integration domain''), and secondly by prohibiting use of preexisting interfaces (``interface hiding'') outside that domain.},
  file = {/Users/geoffreylitt/Zotero/storage/QPN955A7/Kell - The Mythical Matched Modules.pdf},
  keywords = {toread},
  language = {en}
}

@inproceedings{kery2017,
  title = {Exploring Exploratory Programming},
  booktitle = {2017 {{IEEE Symposium}} on {{Visual Languages}} and {{Human}}-{{Centric Computing}} ({{VL}}/{{HCC}})},
  author = {Kery, M. Beth and Myers, B. A.},
  year = {2017},
  month = oct,
  pages = {25--29},
  doi = {10.1109/VLHCC.2017.8103446},
  abstract = {In open-ended tasks where a program's behavior cannot be specified in advance, exploratory programming is a key practice in which programmers actively experiment with different possibilities using code. Exploratory programming is highly relevant today to a variety of professional and end-user programmer domains, including prototyping, learning through play, digital art, and data science. However, prior research has largely lacked clarity on what exploratory programming is, and what behaviors are characteristic of this practice. Drawing on this data and prior literature, we provide an organized description of what exploratory programming has meant historically and a framework of four dimensions for studying exploratory programming tasks: (1) applications, (2) required code quality, (3) ease or difficulty of exploration, and (4) the exploratory process. This provides a basis for better analyzing tool support for exploratory programming.},
  keywords = {code quality,Creativity Support,Debugging,end-user programming,End-user programming,exploratory programming,Exploratory Programming,Games,programming,Programming profession,prototyping,software prototyping,source code (software),Tools,Visualization}
}

@article{kim2018,
  title = {Assessing {{Effects}} of {{Task}} and {{Data Distribution}} on the {{Effectiveness}} of {{Visual Encodings}}},
  author = {Kim, Younghoon and Heer, Jeffrey},
  year = {2018},
  month = jun,
  volume = {37},
  pages = {157--167},
  issn = {01677055},
  doi = {10.1111/cgf.13409},
  abstract = {In addition to the choice of visual encodings, the effectiveness of a data visualization may vary with the analytical task being performed and the distribution of data values. To better assess these effects and create refined rankings of visual encodings, we conduct an experiment measuring subject performance across task types (e.g., comparing individual versus aggregate values) and data distributions (e.g., with varied cardinalities and entropies). We compare performance across 12 encoding specifications of trivariate data involving 1 categorical and 2 quantitative fields, including the use of x, y, color, size, and spatial subdivision (i.e., faceting). Our results extend existing models of encoding effectiveness and suggest improved approaches for automated design. For example, we find that colored scatterplots (with positionally-coded quantities and color-coded categories) perform well for comparing individual points, but perform poorly for summary tasks as the number of categories increases.},
  journal = {Computer Graphics Forum},
  language = {en},
  number = {3}
}

@article{kirsh1994,
  title = {On {{Distinguishing Epistemic}} from {{Pragmatic Action}}},
  author = {Kirsh, David and Maglio, Paul},
  year = {1994},
  volume = {18},
  pages = {513--549},
  issn = {1551-6709},
  doi = {10.1207/s15516709cog1804_1},
  abstract = {We present data and argument to show that in Tetris\textemdash{}a real-time, interactive video game\textemdash{}certain cognitive and perceptual problems are more quickly, easily, and reliably solved by performing actions in the world than by performing computational actions in the head alone. We have found that some of the translations and rotations made by players of this video game are best understood as actions that use the world to improve cognition. These actions are not used to implement a plan, or to implement a reaction; they are used to change the world in order to simplify the problem-solving task. Thus, we distinguish pragmatic actions\textemdash{}actions performed to bring one physically closer to a goal\textemdash{}from epistemic actions\textemdash{}actions performed to uncover informatioan that is hidden or hard to compute mentally. To illustrate the need for epistemic actions, we first develop a standard information-processing model of Tetris cognition and show that it cannot explain performance data from human players of the game\textemdash{}even when we relax the assumption of fully sequential processing. Standard models disregard many actions taken by players because they appear unmotivated or superfluous. However, we show that such actions are actually far from superfluous; they play a valuable role in improving human performance. We argue that traditional accounts are limited because they regard action as having a single function: to change the world. By recognizing a second function of action\textemdash{}an epistemic function\textemdash{}we can explain many of the actions that a traditional model cannot. Although our argument is supported by numerous examples specifically from Tetris, we outline how the new category of epistemic action can be incorporated into theories of action more generally.},
  journal = {Cognitive Science},
  language = {en},
  number = {4}
}

@inproceedings{kittur2008,
  title = {Harnessing the {{Wisdom}} of {{Crowds}} in {{Wikipedia}}: {{Quality Through Coordination}}},
  shorttitle = {Harnessing the {{Wisdom}} of {{Crowds}} in {{Wikipedia}}},
  booktitle = {Proceedings of the 2008 {{ACM Conference}} on {{Computer Supported Cooperative Work}}},
  author = {Kittur, Aniket and Kraut, Robert E.},
  year = {2008},
  pages = {37--46},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1460563.1460572},
  abstract = {Wikipedia's success is often attributed to the large numbers of contributors who improve the accuracy, completeness and clarity of articles while reducing bias. However, because of the coordination needed to write an article collaboratively, adding contributors is costly. We examined how the number of editors in Wikipedia and the coordination methods they use affect article quality. We distinguish between explicit coordination, in which editors plan the article through communication, and implicit coordination, in which a subset of editors structure the work by doing the majority of it. Adding more editors to an article improved article quality only when they used appropriate coordination techniques and was harmful when they did not. Implicit coordination through concentrating the work was more helpful when many editors contributed, but explicit coordination through communication was not. Both types of coordination improved quality more when an article was in a formative stage. These results demonstrate the critical importance of coordination in effectively harnessing the "wisdom of the crowd" in online production environments.},
  isbn = {978-1-60558-007-4},
  keywords = {collaboration,collective intelligence,coordination,distributed cognition,social computing,wiki,wikipedia},
  series = {{{CSCW}} '08}
}

@inproceedings{klemmer2006,
  title = {How Bodies Matter: Five Themes for Interaction Design},
  shorttitle = {How Bodies Matter},
  booktitle = {Proceedings of the 6th {{ACM}} Conference on {{Designing Interactive}} Systems  - {{DIS}} '06},
  author = {Klemmer, Scott R. and Hartmann, Bj{\"o}rn and Takayama, Leila},
  year = {2006},
  pages = {140},
  publisher = {{ACM Press}},
  address = {{University Park, PA, USA}},
  doi = {10.1145/1142405.1142429},
  abstract = {Our physical bodies play a central role in shaping human experience in the world, understanding of the world, and interactions in the world. This paper draws on theories of embodiment\textemdash{}from psychology, sociology, and philosophy \textemdash{} synthesizing five themes we believe are particularly salient for interaction design: thinking through doing, performance, visibility, risk, and thick practice. We introduce aspects of human embodied engagement in the world with the goal of inspiring new interaction design approaches and evaluations that better integrate the physical and computational worlds.},
  isbn = {978-1-59593-367-6},
  language = {en}
}

@article{klemmer2011,
  title = {Skintroducing the Future},
  author = {Klemmer, Scott},
  year = {2011},
  month = aug,
  volume = {54},
  pages = {110},
  issn = {00010782},
  doi = {10.1145/1978542.1978563},
  journal = {Communications of the ACM},
  language = {en},
  number = {8}
}

@article{kleppmann2017,
  title = {A {{Conflict}}-{{Free Replicated JSON Datatype}}},
  author = {Kleppmann, Martin and Beresford, Alastair R.},
  year = {2017},
  month = oct,
  volume = {28},
  pages = {2733--2746},
  issn = {1045-9219},
  doi = {10.1109/TPDS.2017.2697382},
  abstract = {Many applications model their data in a general-purpose storage format such as JSON. This data structure is modified by the application as a result of user input. Such modifications are well understood if performed sequentially on a single copy of the data, but if the data is replicated and modified concurrently on multiple devices, it is unclear what the semantics should be. In this paper we present an algorithm and formal semantics for a JSON data structure that automatically resolves concurrent modifications such that no updates are lost, and such that all replicas converge towards the same state (a conflict-free replicated datatype or CRDT). It supports arbitrarily nested list and map types, which can be modified by insertion, deletion and assignment. The algorithm performs all merging client-side and does not depend on ordering guarantees from the network, making it suitable for deployment on mobile devices with poor network connectivity, in peer-to-peer networks, and in messaging systems with end-to-end encryption.},
  archivePrefix = {arXiv},
  eprint = {1608.03960},
  eprinttype = {arxiv},
  file = {/Users/geoffreylitt/Zotero/storage/VED65L6S/Kleppmann and Beresford - 2017 - A Conflict-Free Replicated JSON Datatype.pdf},
  journal = {IEEE Transactions on Parallel and Distributed Systems},
  keywords = {Computer Science - Databases,Computer Science - Distributed; Parallel; and Cluster Computing,toread},
  language = {en},
  number = {10}
}

@inproceedings{kleppmann2019,
  title = {Local-First Software: You Own Your Data, in Spite of the Cloud},
  shorttitle = {Local-First Software},
  booktitle = {Proceedings of the 2019 {{ACM SIGPLAN International Symposium}} on {{New Ideas}}, {{New Paradigms}}, and {{Reflections}} on {{Programming}} and {{Software}}  - {{Onward}}! 2019},
  author = {Kleppmann, Martin and Wiggins, Adam and {van Hardenberg}, Peter and McGranaghan, Mark},
  year = {2019},
  pages = {154--178},
  publisher = {{ACM Press}},
  address = {{Athens, Greece}},
  doi = {10.1145/3359591.3359737},
  abstract = {Cloud apps like Google Docs and Trello are popular because they enable real-time collaboration with colleagues, and they make it easy for us to access our work from all of our devices. However, by centralizing data storage on servers, cloud apps also take away ownership and agency from users. If a service shuts down, the software stops functioning, and data created with that software is lost.},
  file = {/Users/geoffreylitt/Zotero/storage/DQ4P84XK/Kleppmann et al. - 2019 - Local-first software you own your data, in spite .pdf},
  isbn = {978-1-4503-6995-4},
  language = {en}
}

@inproceedings{klokmose2009,
  title = {{{VIGO}}: Instrumental Interaction in Multi-Surface Environments},
  shorttitle = {{{VIGO}}},
  booktitle = {Proceedings of the 27th International Conference on {{Human}} Factors in Computing Systems - {{CHI}} 09},
  author = {Klokmose, Clemens Nylandsted and {Beaudouin-Lafon}, Michel},
  year = {2009},
  pages = {869},
  publisher = {{ACM Press}},
  address = {{Boston, MA, USA}},
  doi = {10.1145/1518701.1518833},
  abstract = {This paper addresses interaction in multi-surface environments and question whether the current application-centric approaches to user interfaces is adequate in this context and present an alternative approach based on instrumental interaction. The paper presents the VIGO (Views, Instruments, Governors and Objects) architecture and describes a prototype implementation. It then illustrates how to apply VIGO to support distributed interaction. Finally it demonstrates how a classical Ubicomp interaction technique, Pick-and-Drop, can be easily implemented using VIGO.},
  file = {/Users/geoffreylitt/Zotero/storage/T9Q5JJVK/Klokmose and Beaudouin-Lafon - 2009 - VIGO instrumental interaction in multi-surface en.pdf},
  isbn = {978-1-60558-246-7},
  language = {en}
}

@inproceedings{klokmose2015,
  title = {Webstrates: {{Shareable Dynamic Media}}},
  shorttitle = {Webstrates},
  booktitle = {Proceedings of the 28th {{Annual ACM Symposium}} on {{User Interface Software}} \& {{Technology}} - {{UIST}} '15},
  author = {Klokmose, Clemens N. and Eagan, James R. and Baader, Siemen and Mackay, Wendy and {Beaudouin-Lafon}, Michel},
  year = {2015},
  pages = {280--290},
  publisher = {{ACM Press}},
  address = {{Daegu, Kyungpook, Republic of Korea}},
  doi = {10.1145/2807442.2807446},
  abstract = {We revisit Alan Kay's early vision of dynamic media that blurs the distinction between documents and applications. We introduce shareable dynamic media that are malleable by users, who may appropriate them in idiosyncratic ways; shareable among users, who collaborate on multiple aspects of the media; and distributable across diverse devices and platforms. We present Webstrates, an environment for exploring shareable dynamic media. Webstrates augment web technology with real-time sharing. They turn web pages into substrates, i.e. software entities that act as applications or documents depending upon use. We illustrate Webstrates with two implemented case studies: users collaboratively author an article with functionally and visually different editors that they can personalize and extend at run-time; and they orchestrate its presentation and audience participation with multiple devices. We demonstrate the simplicity and generative power of Webstrates with three additional prototypes and evaluate it from a systems perspective.},
  file = {/Users/geoffreylitt/Zotero/storage/PZI6XAMQ/Klokmose et al. - 2015 - iWebstratesi Shareable Dynamic Media.pdf},
  isbn = {978-1-4503-3779-3},
  language = {en}
}

@inproceedings{ko2004,
  title = {Designing the Whyline: A Debugging Interface for Asking Questions about Program Behavior},
  shorttitle = {Designing the Whyline},
  booktitle = {Proceedings of the 2004 Conference on {{Human}} Factors in Computing Systems  - {{CHI}} '04},
  author = {Ko, Andrew J. and Myers, Brad A.},
  year = {2004},
  pages = {151--158},
  publisher = {{ACM Press}},
  address = {{Vienna, Austria}},
  doi = {10.1145/985692.985712},
  abstract = {Debugging is still among the most common and costly of programming activities. One reason is that current debugging tools do not directly support the inquisitive nature of the activity. Interrogative Debugging is a new debugging paradigm in which programmers can ask why did and even why didn't questions directly about their program's runtime failures. The Whyline is a prototype Interrogative Debugging interface for the Alice programming environment that visualizes answers in terms of runtime events directly relevant to a programmer's question. Comparisons of identical debugging scenarios from user tests with and without the Whyline showed that the Whyline reduced debugging time by nearly a factor of 8, and helped programmers complete 40\% more tasks.},
  file = {/Users/geoffreylitt/Zotero/storage/4PRZXVG7/Ko and Myers - 2004 - Designing the whyline a debugging interface for a.pdf},
  isbn = {978-1-58113-702-6},
  keywords = {program visualization},
  language = {en}
}

@article{ko2011,
  title = {The State of the Art in End-User Software Engineering},
  author = {Ko, Andrew J. and Myers, Brad and Rosson, Mary Beth and Rothermel, Gregg and Shaw, Mary and Wiedenbeck, Susan and Abraham, Robin and Beckwith, Laura and Blackwell, Alan and Burnett, Margaret and Erwig, Martin and Scaffidi, Chris and Lawrance, Joseph and Lieberman, Henry},
  year = {2011},
  month = apr,
  volume = {43},
  pages = {1--44},
  issn = {03600300},
  doi = {10.1145/1922649.1922658},
  file = {/Users/geoffreylitt/Zotero/storage/HZ2VW3UK/Ko et al. - 2011 - The state of the art in end-user software engineer.pdf},
  journal = {ACM Computing Surveys},
  language = {en},
  number = {3}
}

@incollection{kraut2012,
  title = {Evidence-Based {{Social Design}}: {{Introduction}}},
  booktitle = {Evidence-{{Based Social Design}}: {{Mining}} the {{Social Sciences}} to {{Build Online Communities}}},
  author = {Kraut, Robert E. and Resnick, Paul},
  year = {2012},
  publisher = {{MIT Press}},
  address = {{Cambridge, MA}},
  isbn = {978-0-262-29831-5},
  language = {en}
}

@inproceedings{kumar2012,
  title = {Data-Driven {{Web Design}}},
  booktitle = {Proceedings of the 29 Th {{International Conference}} on {{Machine Learning}}},
  author = {Kumar, Ranjitha and Talton, Jerry O. and Ahmad, Salman and Klemmer, Scott R.},
  year = {2012},
  pages = {2},
  address = {{Edinburgh, Scotland}},
  abstract = {This short paper summarizes challenges and opportunities of applying machine learning methods to Web design problems, and describes how structured prediction, deep learning, and probabilistic program induction can enable useful interactions for designers. We intend for these techniques to foster new work in data-driven Web design.},
  language = {en}
}

@article{lerner,
  title = {Projection {{Boxes}}: {{On}}-the-Fly {{Reconfigurable Visualization}} for {{Live Programming}}},
  author = {Lerner, Sorin},
  pages = {7},
  abstract = {Live programming is a regime in which the programming environment provides continual feedback, most often in the form of runtime values. In this paper, we present Projection Boxes, a novel visualization technique for displaying runtime values of programs. The key idea behind projection boxes is to start with a full semantics of the program, and then use projections to pick a subset of the semantics to display. By varying the projection used, projection boxes can encode both previously known visualization techniques, and also new ones. As such, projection boxes provide an expressive and configurable framework for displaying runtime information. Through a user study we demonstrate that (1) users find projection boxes and their configurability useful (2) users are not distracted by the always-on visualization (3) a key driving force behind the need for a configurable visualization for live programming lies with the wide variation in programmer preferences.},
  file = {/Users/geoffreylitt/Zotero/storage/N3IBF8AI/Lerner - Projection Boxes On-the-fly Reconfigurable Visual.pdf},
  keywords = {program visualization},
  language = {en}
}

@inproceedings{lerner2020,
  title = {Projection {{Boxes}}: {{On}}-the-Fly {{Reconfigurable Visualization}} for {{Live Programming}}},
  shorttitle = {Projection {{Boxes}}},
  booktitle = {Proceedings of the 2020 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Lerner, Sorin},
  year = {2020},
  publisher = {{Association for Computing Machinery}},
  doi = {10.1145/3313831.3376494},
  abstract = {Live programming is a regime in which the programming environment provides continual feedback, most often in the form of runtime values. In this paper, we present Projection Boxes, a novel visualization technique for displaying runtime values of programs. The key idea behind projection boxes is to start with a full semantics of the program, and then use projections to pick a subset of the semantics to display. By varying the projection used, projection boxes can encode both previously known visualization techniques, and also new ones. As such, projection boxes provide an expressive and configurable framework for displaying runtime information. Through a user study we demonstrate that (1) users find projection boxes and their configurability useful (2) users are not distracted by the always-on visualization (3) a key driving force behind the need for a configurable visualization for live programming lies with the wide variation in programmer preferences.}
}

@inproceedings{leshed2008,
  title = {{{CoScripter}}: {{Automating}} \& {{Sharing How}}-to {{Knowledge}} in the {{Enterprise}}},
  shorttitle = {{{CoScripter}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Leshed, Gilly and Haber, Eben M. and Matthews, Tara and Lau, Tessa},
  year = {2008},
  pages = {1719--1728},
  publisher = {{ACM}},
  address = {{Florence, Italy}},
  doi = {10.1145/1357054.1357323},
  abstract = {Modern enterprises are replete with numerous online processes. Many must be performed frequently and are tedious, while others are done less frequently yet are complex or hard to remember. We present interviews with knowledge workers that reveal a need for mechanisms to automate the execution of and to share knowledge about these processes. In response, we have developed the CoScripter system (formerly Koala [11]), a collaborative scripting environment for recording, automating, and sharing web-based processes. We have deployed CoScripter within a large corporation for more than 10 months. Through usage log analysis and interviews with users, we show that CoScripter has addressed many user automation and sharing needs, to the extent that more than 50 employees have voluntarily incorporated it into their work practice. We also present ways people have used CoScripter and general issues for tools that support automation and sharing of how-to knowledge.},
  file = {/Users/geoffreylitt/Zotero/storage/RHE55DIG/Leshed et al. - 2008 - CoScripter Automating & Sharing How-to Knowledge .pdf},
  isbn = {978-1-60558-011-1},
  keywords = {automation,knowledge sharing,procedural knowledge,programming-by-demonstration,scripting,user study,wiki},
  series = {{{CHI}} '08}
}

@article{lew2019,
  title = {Trace Types and Denotational Semantics for Sound Programmable Inference in Probabilistic Languages},
  author = {Lew, Alexander K. and {Cusumano-Towner}, Marco F. and Sherman, Benjamin and Carbin, Michael and Mansinghka, Vikash K.},
  year = {2019},
  month = dec,
  volume = {4},
  pages = {1--32},
  issn = {24751421},
  doi = {10.1145/3371087},
  abstract = {ALEXANDER K. LEW, Massachusetts Institute of Technology, USA MARCO F. CUSUMANO-TOWNER, Massachusetts Institute of Technology, USA BENJAMIN SHERMAN, Massachusetts Institute of Technology, USA MICHAEL CARBIN, Massachusetts Institute of Technology, USA VIKASH K. MANSINGHKA, Massachusetts Institute of Technology, USA Modern probabilistic programming languages aim to formalize and automate key aspects of probabilistic modeling and inference. Many languages provide constructs for programmable inference that enable developers 19 to improve inference speed and accuracy by tailoring an algorithm for use with a particular model or dataset. Unfortunately, it is easy to use these constructs to write unsound programs that appear to run correctly but produce incorrect results. To address this problem, we present a denotational semantics for programmable inference in higher-order probabilistic programming languages, along with a type system that ensures that well-typed inference programs are sound by construction. A central insight is that the type of a probabilistic expression can track the space of its possible execution traces, not just the type of value that it returns, as these traces are often the objects that inference algorithms manipulate. We use our semantics and type system to establish soundness properties of custom inference programs that use constructs for variational, sequential Monte Carlo, importance sampling, and Markov chain Monte Carlo inference. CCS Concepts: {$\cdot$} Mathematics of computing \textrightarrow{} Probabilistic inference problems; Variational methods; Metropolis-Hastings algorithm; Sequential Monte Carlo methods; {$\cdot$} Theory of computation \textrightarrow{} Semantics and reasoning; Denotational semantics; {$\cdot$} Software and its engineering \textrightarrow{} Formal language definitions.},
  file = {/Users/geoffreylitt/Zotero/storage/RTHTYZ7Y/Lew et al. - 2019 - Trace types and denotational semantics for sound p.pdf},
  journal = {Proceedings of the ACM on Programming Languages},
  keywords = {toread},
  language = {en},
  number = {POPL}
}

@article{licklider1960,
  title = {Man-{{Computer Symbiosis}}},
  author = {Licklider, J.C.R.},
  year = {1960},
  month = mar,
  pages = {4--11},
  abstract = {Man-computer symbiosis is an expected development in cooperative interaction between men and electronic computers. It will involve very close coupling between the human and the electronic members of the partnership. The main aims are 1) to let computers facilitate formulative thinking as they now facilitate the solution of formulated problems, and 2) to enable men and computers to cooperate in making decisions and controlling complex situations without inflexible dependence on predetermined programs. In the anticipated symbiotic partnership, men will set the goals, formulate the hypotheses, determine the criteria, and perform the evaluations. Computing machines will do the routinizable work that must be done to prepare the way for insights and decisions in technical and scientific thinking. Preliminary analyses indicate that the symbiotic partnership will perform intellectual operations much more effectively than man alone can perform them. Prerequisites for the achievement of the effective, cooperative association include developments in computer time sharing, in memory components, in memory organization, in programming languages, and in input and output equipment.},
  journal = {IEEE Transactions on Human Factors in Electronics},
  language = {en}
}

@inproceedings{lieber2014,
  title = {Addressing Misconceptions about Code with Always-on Programming Visualizations},
  booktitle = {Proceedings of the 32nd Annual {{ACM}} Conference on {{Human}} Factors in Computing Systems - {{CHI}} '14},
  author = {Lieber, Tom and Brandt, Joel R. and Miller, Rob C.},
  year = {2014},
  pages = {2481--2490},
  publisher = {{ACM Press}},
  address = {{Toronto, Ontario, Canada}},
  doi = {10.1145/2556288.2557409},
  abstract = {We present Theseus, an IDE extension that visualizes run\- time behavior within a JavaScript code editor. By displaying real-time information about how code actually behaves dur\- ing execution, Theseus proactively addresses misconceptions by drawing attention to similarities and differences between the programmer's idea of what code does and what it actu\- ally does. To understand how programmers would respond to this kind of an always-on visualization, we ran a lab study with graduate students, and interviewed 9 professional pro\- grammers who were asked to use Theseus in their day-to-day work. We found that users quickly adopted strategies that are unique to always-on, real-time visualizations, and used the additional information to guide their navigation through their code.},
  file = {/Users/geoffreylitt/Zotero/storage/44LDG267/Lieber et al. - 2014 - Addressing misconceptions about code with always-o.pdf},
  isbn = {978-1-4503-2473-1},
  language = {en}
}

@incollection{lieberman2010,
  title = {Knowing What You're Talking About},
  booktitle = {No {{Code Required}}},
  author = {Lieberman, Henry and Ahmad, Moin},
  year = {2010},
  pages = {331--343},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00017-1},
  abstract = {Enabling end users to express programs in natural language would result in a dramatic increase in accessibility. Previous efforts in natural language programming have been hampered by the apparent ambiguity of natural language. We believe a large part of the solution to this problem is knowing what you're talking about \textendash{} introducing enough semantics about the subject matter of the programs to provide sufficient context for understanding.},
  file = {/Users/geoffreylitt/Zotero/storage/F5ZBRPZU/Lieberman and Ahmad - 2010 - Knowing what you're talking about.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@article{linden2003,
  title = {Amazon.Com {{Recommendations}}: {{Item}}-to-{{Item Collaborative Filtering}}},
  shorttitle = {Amazon.Com {{Recommendations}}},
  author = {Linden, Greg and Smith, Brent and York, Jeremy},
  year = {2003},
  month = jan,
  volume = {7},
  pages = {76--80},
  issn = {1089-7801},
  doi = {10.1109/MIC.2003.1167344},
  journal = {IEEE Internet Computing},
  language = {en},
  number = {1}
}

@incollection{little2010,
  title = {Sloppy Programming},
  booktitle = {No {{Code Required}}},
  author = {Little, Greg and Miller, Robert C. and Chou, Victoria H. and Bernstein, Michael and Lau, Tessa and Cypher, Allen},
  year = {2010},
  pages = {289--307},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00015-8},
  abstract = {Modern applications provide interfaces for scripting, but many users do not know how to write script commands. However, many users are familiar with the idea of entering keywords into a Web search engine. Hence, if a user is familiar with the vocabulary of an application domain, we anticipate that they could write a set of keywords expressing a command in that domain. For instance, in the Web browsing domain, a user might enter ``click search button''. We call loosely grammatical commands of this sort ``sloppy commands.'' We discuss several prototypes that implement sloppy programming, translating sloppy commands directly into executable code. We also discuss the algorithms used in these prototypes, expose their limitations, and propose directions for future work.},
  file = {/Users/geoffreylitt/Zotero/storage/GBFFTC6G/Little et al. - 2010 - Sloppy programming.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@incollection{little2010a,
  title = {Sloppy Programming},
  booktitle = {No {{Code Required}}},
  author = {Little, Greg and Miller, Robert C. and Chou, Victoria H. and Bernstein, Michael and Lau, Tessa and Cypher, Allen},
  year = {2010},
  pages = {289--307},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00015-8},
  abstract = {Modern applications provide interfaces for scripting, but many users do not know how to write script commands. However, many users are familiar with the idea of entering keywords into a Web search engine. Hence, if a user is familiar with the vocabulary of an application domain, we anticipate that they could write a set of keywords expressing a command in that domain. For instance, in the Web browsing domain, a user might enter ``click search button''. We call loosely grammatical commands of this sort ``sloppy commands.'' We discuss several prototypes that implement sloppy programming, translating sloppy commands directly into executable code. We also discuss the algorithms used in these prototypes, expose their limitations, and propose directions for future work.},
  file = {/Users/geoffreylitt/Zotero/storage/KHYJZVJD/Little et al. - 2010 - Sloppy programming.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@inproceedings{liu2009,
  title = {A {{Spreadsheet Algebra}} for a {{Direct Data Manipulation Query Interface}}},
  booktitle = {2009 {{IEEE}} 25th {{International Conference}} on {{Data Engineering}}},
  author = {Liu, Bin and Jagadish, H. V.},
  year = {2009},
  month = mar,
  pages = {417--428},
  issn = {2375-026X},
  doi = {10.1109/ICDE.2009.34},
  abstract = {A spreadsheet-like "direct manipulation" interface is more intuitive for many non-technical database users compared to traditional alternatives, such as visual query builders. The construction of such a direct manipulation interface may appear straightforward, but there are some significant challenges. First, individual direct manipulation operations cannot be too complex, so expressive power has to be achieved through composing (long) sequences of small operations. Second, all intermediate results are visible to the user, so grouping and ordering are material after every small step. Third, users often find the need to modify previously specified queries. Since manipulations are specified one step at a time, there is no actual queryexpression to modify. Suitable means must be provided to address this need. Fourth, the order in which manipulations are performed by the user should not affect the results obtained, to avoid user confusion. We address the aforementioned challenges by designing a new spreadsheet algebra that: i) operates on recursively grouped multi-sets, ii) contains a selectively designed set of operators capable of expressing at least all single-block SQL queries and can be intuitively implemented in a spreadsheet, iii) enables query modification by the notion of modifiable query state, and iv) requires no ordering in unary data manipulation operators since they are all designed to commute. We built a prototype implementation of the spreadsheet algebra and show, through user studies with non-technical subjects, that the resultant query interface is easier to use than a standard commercial visual query builder.},
  file = {/Users/geoffreylitt/Zotero/storage/M3AFJ2UA/Liu and Jagadish - 2009 - A Spreadsheet Algebra for a Direct Data Manipulati.pdf;/Users/geoffreylitt/Zotero/storage/576BWR2D/4812422.html},
  keywords = {Algebra,Data analysis,Data engineering,database usability,direct data manipulation query interface,Humans,Presses,Prototypes,query processing,Relational databases,single-block SQL queries,spreadsheet,spreadsheet algebra,spreadsheet programs,Spreadsheet programs,SQL,USA Councils,user interface,Visual databases,visual query builders}
}

@inproceedings{liu2018,
  title = {Somewhere {{Over}} the {{Rainbow}}: {{An Empirical Assessment}} of {{Quantitative Colormaps}}},
  shorttitle = {Somewhere {{Over}} the {{Rainbow}}},
  booktitle = {Proceedings of the 2018 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}  - {{CHI}} '18},
  author = {Liu, Yang and Heer, Jeffrey},
  year = {2018},
  pages = {1--12},
  publisher = {{ACM Press}},
  address = {{Montreal, Canada}},
  doi = {10.1145/3173574.3174172},
  abstract = {An essential goal of quantitative color encoding is the accurate mapping of perceptual dimensions of color to the logical structure of data. Prior research identifies weaknesses of ``rainbow'' colormaps and advocates for ramping in luminance, while recent work contributes multi-hue colormaps generated using perceptually-uniform color models. We contribute a comparative analysis of different colormap types, with a focus on comparing single- and multi-hue schemes. We present a suite of experiments in which subjects perform relative distance judgments among color triplets drawn systematically from each of four single-hue and five multi-hue colormaps. We characterize speed and accuracy across each colormap, and identify conditions that degrade performance. We also find that a combination of perceptual color space and color naming measures more accurately predict user performance than either alone, though the overall accuracy is poor. Based on these results, we distill recommendations on how to design more effective color encodings for scalar data.},
  isbn = {978-1-4503-5620-6},
  language = {en}
}

@incollection{lunzer2010,
  title = {Subjunctive Interfaces for the {{Web}}},
  booktitle = {No {{Code Required}}},
  author = {Lunzer, Aran and Hornb{\ae}k, Kasper},
  year = {2010},
  pages = {267--285},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00014-6},
  abstract = {The data resources and applications accessible through today's Web offer tremendous opportunities for exploration: ask a slightly different question, receive a correspondingly different answer. However, typical browser-based mechanisms for accessing the Web only enable users to pose one such question at a time, placing a heavy operational and cognitive burden on any user who wants to explore and compare alternatives. A subjunctive-interface approach may reduce this burden. Subjunctive interfaces support the setting up, viewing, and adjustment of multiple scenarios in parallel, allowing side-by-side instead of temporally separated viewing, and more efficient iteration through alternatives. We have implemented a spreadsheet-inspired environment where end users can program and use their own Web-access applications that include such multiscenario support. In this chapter we describe three modes of use of this environment \textendash{} parallel retrieval, coordinated manipulation, and tentative composition \textendash{} and explain how these may help to alleviate typical challenges in Web-based tasks. At the same time, we acknowledge that the increased scope for exploration made possible through this environment can itself present a form of cognitive burden to users, and we outline our plans for evaluating the impact of this effect.},
  file = {/Users/geoffreylitt/Zotero/storage/64PD9CGV/Lunzer and Hornbæk - 2010 - Subjunctive interfaces for the Web.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@inproceedings{mackay1991,
  title = {Triggers and Barriers to Customizing Software},
  booktitle = {Proceedings of the {{SIGCHI}} Conference on {{Human}} Factors in Computing Systems {{Reaching}} through Technology - {{CHI}} '91},
  author = {Mackay, Wendy E.},
  year = {1991},
  pages = {153--160},
  publisher = {{ACM Press}},
  address = {{New Orleans, Louisiana, United States}},
  doi = {10.1145/108844.108867},
  abstract = {One of the properties of a user interface is that it both guides and constrains the patterns of interaction between the user and the software application. Application software is increasingly designed to be ``customizable'' by the end user, providing specific mechanisms by which users may specify individual preferences about the software and how they will interact with it over multiple sessions. Users may thus encode and preserve their preferred patterns of use. These customizations, together with choices about which applications to use, make up the unique ``softswue environment'' for each individual.},
  file = {/Users/geoffreylitt/Zotero/storage/CEKJFXHF/Mackay - 1991 - Triggers and barriers to customizing software.pdf},
  isbn = {978-0-89791-383-6},
  language = {en}
}

@article{mackaywendy,
  title = {Patterns of Sharing Customizable Software},
  author = {{Mackay, Wendy}},
  file = {/Users/geoffreylitt/Zotero/storage/IWR3FBNK/99332.99356.pdf}
}

@article{mackenzie1992,
  title = {Fitt's {{Law}} as {{Research}} and {{Design Tool}} in {{Human}}-{{Computer Interaction}}},
  author = {Mackenzie, I. Scott},
  year = {1992},
  volume = {7},
  pages = {91--139},
  journal = {Human-Computer Interaction}
}

@article{mackinlay1986,
  title = {Automating the Design of Graphical Presentations of Relational Information},
  author = {Mackinlay, Jock},
  year = {1986},
  month = apr,
  volume = {5},
  pages = {110--141},
  issn = {07300301},
  doi = {10.1145/22949.22950},
  journal = {ACM Transactions on Graphics},
  language = {en},
  number = {2}
}

@inproceedings{marquardt2011,
  title = {The {{Proximity Toolkit}}: {{Prototyping Proxemic Interactions}} in {{Ubiquitous Computing Ecologies}}},
  shorttitle = {The {{Proximity Toolkit}}},
  booktitle = {Proceedings of the 24th {{Annual Acm Symposium}} on {{User Interface Software}} and {{Technology}} - {{UIST}} '11},
  author = {Marquardt, Nicolai and {Diaz-Marino}, Robert and Boring, Sebastian and Greenberg, Saul},
  year = {2011},
  pages = {315},
  publisher = {{ACM Press}},
  address = {{Santa Barbara, California, USA}},
  doi = {10.1145/2047196.2047238},
  abstract = {People naturally understand and use proxemic relationships (e.g., their distance and orientation towards others) in everyday situations. However, only few ubiquitous computing (ubicomp) systems interpret such proxemic relationships to mediate interaction (proxemic interaction). A technical problem is that developers find it challenging and tedious to access proxemic information from sensors. Our Proximity Toolkit solves this problem. It simplifies the exploration of interaction techniques by supplying fine-grained proxemic information between people, portable devices, large interactive surfaces, and other non-digital objects in a room-sized environment. The toolkit offers three key features. 1) It facilitates rapid prototyping of proxemic-aware systems by supplying developers with the orientation, distance, motion, identity, and location information between entities. 2) It includes various tools, such as a visual monitoring tool, that allows developers to visually observe, record and explore proxemic relationships in 3D space. (3) Its flexible architecture separates sensing hardware from the proxemic data model derived from these sensors, which means that a variety of sensing technologies can be substituted or combined to derive proxemic information. We illustrate the versatility of the toolkit with proxemic-aware systems built by students.},
  isbn = {978-1-4503-0716-1},
  language = {en}
}

@article{maxwell,
  title = {{{TRACING THE DYNABOOK}}: {{A STUDY OF TECHNOCULTURAL TRANSFORMATIONS}}},
  author = {Maxwell, John W},
  pages = {311},
  file = {/Users/geoffreylitt/Zotero/storage/XSW23EEV/Maxwell - TRACING THE DYNABOOK A STUDY OF TECHNOCULTURAL TR.pdf},
  keywords = {toread},
  language = {en}
}

@inproceedings{mayer2015,
  title = {User {{Interaction Models}} for {{Disambiguation}} in {{Programming}} by {{Example}}},
  booktitle = {Proceedings of the 28th {{Annual ACM Symposium}} on {{User Interface Software}} \& {{Technology}} - {{UIST}} '15},
  author = {Mayer, Mika{\"e}l and Soares, Gustavo and Grechkin, Maxim and Le, Vu and Marron, Mark and Polozov, Oleksandr and Singh, Rishabh and Zorn, Benjamin and Gulwani, Sumit},
  year = {2015},
  pages = {291--301},
  publisher = {{ACM Press}},
  address = {{Daegu, Kyungpook, Republic of Korea}},
  doi = {10.1145/2807442.2807459},
  abstract = {Programming by Examples (PBE) has the potential to revo\- lutionize end-user programming by enabling end users, most of whom are non-programmers, to create small scripts for au\- tomating repetitive tasks. However, examples, though often easy to provide, are an ambiguous specification of the user's intent. Because of that, a key impedance in adoption of PBE systems is the lack of user confidence in the correctness of the program that was synthesized by the system. We present two novel user interaction models that communicate action\- able information to the user to help resolve ambiguity in the examples. One of these models allows the user to effectively navigate between the huge set of programs that are consis\- tent with the examples provided by the user. The other model uses active learning to ask directed example-based questions to the user on the test input data over which the user intends to run the synthesized program. Our user studies show that each of these models significantly reduces the number of errors in the performed task without any difference in completion time. Moreover, both models are perceived as useful, and the proactive active-learning based model has a slightly higher preference regarding the users' confidence in the result.},
  file = {/Users/geoffreylitt/Zotero/storage/GWGSLACW/Mayer et al. - 2015 - User Interaction Models for Disambiguation in Prog.pdf},
  isbn = {978-1-4503-3779-3},
  language = {en}
}

@inproceedings{mccarthy1970,
  title = {The {{Home Information Terminal}}\textemdash{}a 1970 {{View}}},
  booktitle = {Proceedings of the {{First Annual Conference}} on {{Man}} and {{Computer}}},
  author = {McCarthy, John},
  year = {1970},
  month = jun,
  pages = {48--57},
  publisher = {{Karger}},
  address = {{Bordeaux, France}},
  abstract = {This article was published in Man and Computer. Proc. int. Conf., Bordeaux 1970, pp. 48-57 (Karger, Basel 1972). It is interesting to compare its 1970 proposals with the current situation, 30 years later. I have decorated it with footnotes commenting on the 1970 situation and making comparisons. Some of the improvements advocated in the paper are still yet to come. I claim quite a few prophet points for it.},
  language = {en}
}

@inproceedings{mccutchen2016,
  title = {Object Spreadsheets: A New Computational Model for End-User Development of Data-Centric Web Applications},
  shorttitle = {Object Spreadsheets},
  booktitle = {Proceedings of the 2016 {{ACM International Symposium}} on {{New Ideas}}, {{New Paradigms}}, and {{Reflections}} on {{Programming}} and {{Software}} - {{Onward}}! 2016},
  author = {McCutchen, Matt and Itzhaky, Shachar and Jackson, Daniel},
  year = {2016},
  pages = {112--127},
  publisher = {{ACM Press}},
  address = {{Amsterdam, Netherlands}},
  doi = {10.1145/2986012.2986018},
  abstract = {Spreadsheets offer many advantages as the computational and data-storage engine for applications that are authored by end users. Paradoxically, however, their main failing in this regard is their computational model. Despite being used in almost all cases to represent data that is essentially relational (with some hierarchical structuring), the spreadsheet model treats the two-dimensional grid as largely unstructured, with formulas linking cells in an ad hoc way.},
  file = {/Users/geoffreylitt/Zotero/storage/8KXJ224J/McCutchen et al. - 2016 - Object spreadsheets a new computational model for.pdf},
  isbn = {978-1-4503-4076-2},
  language = {en}
}

@incollection{mcgrath1995,
  title = {Methodology {{Matters}}: {{Doing Research}} in the {{Behavioral}} and {{Social Sciences}}},
  shorttitle = {Methodology {{Matters}}},
  booktitle = {Readings in {{Human}}-{{Computer Interaction}}: {{Toward}} the {{Year}} 2000},
  author = {McGrath, Joseph E.},
  editor = {Baecker, Ronald M. and Grudin, Jonathan and Buxton, Bill and Greenberg, Saul},
  year = {1995},
  edition = {2nd edition},
  pages = {152--169},
  publisher = {{Morgan Kaufmann}},
  address = {{San Francisco, CA}},
  isbn = {978-0-08-051574-8},
  language = {en}
}

@article{mcguire1997,
  title = {Creative {{Hypothesis Generating}} in {{Psychology}}: {{Some Useful Heuristics}}},
  shorttitle = {Creative {{Hypothesis Generating}} in {{Psychology}}},
  author = {McGuire, William J.},
  year = {1997},
  volume = {48},
  pages = {1--30},
  doi = {10.1146/annurev.psych.48.1.1},
  abstract = {To correct a common imbalance in methodology courses, focusing almost entirely on hypothesis-testing issues to the neglect of hypothesis-generating issues which are at least as important, 49 creative heuristics are described, divided into 5 categories and 14 subcategories. Each of these heuristics has often been used to generate hypotheses in psychological research, and each is teachable to students. The 49 heuristics range from common sense perceptiveness of the oddity of natural occurrences to use of sophisticated quantitative data analyses in ways that provoke new insights.},
  journal = {Annual Review of Psychology},
  number = {1}
}

@inproceedings{meyer2006,
  title = {Mondrian: An Agile Information Visualization Framework},
  shorttitle = {Mondrian},
  booktitle = {Proceedings of the 2006 {{ACM}} Symposium on {{Software}} Visualization  - {{SoftVis}} '06},
  author = {Meyer, Michael and G{\^i}rba, Tudor and Lungu, Mircea},
  year = {2006},
  pages = {135},
  publisher = {{ACM Press}},
  address = {{Brighton, United Kingdom}},
  doi = {10.1145/1148493.1148513},
  abstract = {Data visualization is the process of representing data as pictures to support reasoning about the underlying data. For the interpretation to be as easy as possible, we need to be as close as possible to the original data. As most visualization tools have an internal metamodel, which is different from the one for the presented data, they usually need to duplicate the original data to conform to their metamodel. This leads to an increase in the resources needed, increase which is not always justified. In this work we argue for the need of having an engine that is as close as possible to the data and we present our solution of moving the visualization tool to the data, instead of moving the data to the visualization tool. Our solution also emphasizes the necessity of reusing basic blocks to express complex visualizations and allowing the programmer to script the visualization using his preferred tools, rather than a third party format. As a validation of the expressiveness of our framework, we show how we express several already published visualizations and describe the pros and cons of the approach.},
  file = {/Users/geoffreylitt/Zotero/storage/SPYK98W2/Meyer et al. - 2006 - Mondrian an agile information visualization frame.pdf},
  isbn = {978-1-59593-464-2},
  language = {en}
}

@incollection{miller2010,
  title = {Chapter 3 - {{Rewriting}} the {{Web}} with {{Chickenfoot}}},
  booktitle = {No {{Code Required}}},
  author = {Miller, Robert C. and Bolin, Michael and Chilton, Lydia B. and Little, Greg and Webber, Matthew and Yu, Chen-Hsiang},
  editor = {Cypher, Allen and Dontcheva, Mira and Lau, Tessa and Nichols, Jeffrey},
  year = {2010},
  month = jan,
  pages = {39--63},
  publisher = {{Morgan Kaufmann}},
  address = {{Boston}},
  doi = {10.1016/B978-0-12-381541-5.00003-1},
  abstract = {Unlike desktop applications, Web applications are much more exposed and open to modification. This chapter describes Chickenfoot, a programming system embedded in the Firefox Web browser, which enables end users to automate, customize, and integrate Web applications without examining their source code. One way Chickenfoot addresses this goal is a technique for identifying page components by keyword pattern matching. Web automation includes navigating pages, filling in forms, and clicking on links. For example, many conferences now use a Web site to receive papers, distribute them to reviewers, and collect the reviews. A reviewer assigned 10 papers must download each paper, print it, and (later) upload a review for it. Tedious repetition is a good argument for automation. While integrating multiple Web sites, the simplest kind of integration is just adding links from one site to another, but much richer integration is possible. Techniques are developed through studying how users name Web page components and present a heuristic keyword-matching algorithm that identifies the desired component from the user's name. It describes a range of applications that have been created using Chickenfoot and reflects on its advantages and limitations.},
  file = {/Users/geoffreylitt/Zotero/storage/9AFI2GGP/Potluck_Data_Mash-Up_Tool_for_Casual_Users.pdf;/Users/geoffreylitt/Zotero/storage/ZZS3B7D7/Miller et al. - 2010 - Chapter 3 - Rewriting the Web with Chickenfoot.pdf;/Users/geoffreylitt/Zotero/storage/I95VQQIL/B9780123815415000031.html},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@incollection{miller2010a,
  title = {Rewriting the {{Web}} with {{Chickenfoot}}},
  booktitle = {No {{Code Required}}},
  author = {Miller, Robert C. and Bolin, Michael and Chilton, Lydia B. and Little, Greg and Webber, Matthew and Yu, Chen-Hsiang},
  year = {2010},
  pages = {39--63},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00003-1},
  abstract = {On the desktop, an application can expect to control its user interface down to the last pixel, but on the World Wide Web, a content provider has no control over how the client will view the page, once delivered to the browser. This creates an opportunity for end users who want to automate and customize their Web experiences, but the growing complexity of Web pages and standards prevents most users from realizing this opportunity. This chapter describes Chickenfoot, a programming system embedded in the Firefox Web browser, which enables end users to automate, customize, and integrate Web applications without examining their source code. One way Chickenfoot addresses this goal is a technique for identifying page components by keyword pattern matching. We motivate this technique by studying how users name Web page components, and present a heuristic keyword matching algorithm that identifies the desired component from the user's name. We describe a range of applications that have been created using Chickenfoot and reflect on its advantages and limitations.},
  file = {/Users/geoffreylitt/Zotero/storage/L74PCDWX/Miller et al. - 2010 - Rewriting the Web with Chickenfoot.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@article{miltner2018,
  title = {Synthesizing Bijective Lenses},
  author = {Miltner, Anders and Fisher, Kathleen and Pierce, Benjamin C. and Walker, David and Zdancewic, Steve},
  year = {2018},
  month = jan,
  volume = {2},
  pages = {1--30},
  issn = {2475-1421, 2475-1421},
  doi = {10.1145/3158089},
  file = {/Users/geoffreylitt/Zotero/storage/3WJCDYMD/Miltner et al. - 2018 - Synthesizing bijective lenses.pdf},
  journal = {Proceedings of the ACM on Programming Languages},
  language = {en},
  number = {POPL}
}

@article{munzner2009,
  title = {A {{Nested Model}} for {{Visualization Design}} and {{Validation}}},
  author = {Munzner, Tamara},
  year = {2009},
  month = nov,
  volume = {15},
  pages = {921--928},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2009.111},
  abstract = {We present a nested model for the visualization design process withfour layers: characterize the problem domain, abstract into operationson data types, design visual encoding and interaction techniques, andcreate algorithms to execute techniques efficiently. The output from alevel above is input to the level below, bringing attention to thedesign challenge that an upstream error inevitably cascades to alldownstream levels. This model provides prescriptive guidance fordetermining appropriate evaluation approaches by identifying threatsto validity unique to each level. We call attention to specific stepsin the design and evaluation process that are often given shortshrift. We also provide three recommendations motivated by this model:authors should distinguish between these levels when claimingcontributions at more than one of them, authors should explicitlystate upstream assumptions at levels above the focus of a paper, andvisualization venues should accept more papers on domaincharacterization.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  keywords = {design,evaluation.,frameworks,Models},
  number = {6}
}

@article{myers1983,
  title = {{{INCENSE}}: {{A}} System for Displaying Data Structures},
  shorttitle = {{{INCENSE}}},
  author = {Myers, Brad A.},
  year = {1983},
  month = jul,
  volume = {17},
  pages = {115--125},
  issn = {0097-8930},
  doi = {10.1145/964967.801140},
  abstract = {Many modern computer languages allow the programmer to define and use a variety of data types. Few programming systems, however, allow the programmer similar flexibility when displaying the data structures for debugging, monitoring and documenting programs. Incense is a working prototype system that allows the programmer to interactively investigate data structures in actual programs. The desired displays can be specified by the programmer or a default can be used. The default displays provided by Incense present the standard form for literals of the basic types, the actual names for scalar types, stacked boxes for records and arrays, and curved lines with arrowheads for pointers. In addition to displaying data structures, Incense also allows the user to select, move, erase and redimension the resulting displays. These interactions are provided in a uniform, natural manner using a pointing device (mouse) and keyboard.},
  file = {/Users/geoffreylitt/Zotero/storage/GQIVMKPW/Myers - 1983 - INCENSE A system for displaying data structures.pdf},
  journal = {ACM SIGGRAPH Computer Graphics},
  number = {3}
}

@article{myers1990,
  title = {Taxonomies of Visual Programming and Program Visualization},
  author = {Myers, Brad A.},
  year = {1990},
  month = mar,
  volume = {1},
  pages = {97--123},
  issn = {1045926X},
  doi = {10.1016/S1045-926X(05)80036-9},
  abstract = {There has been a great interest recently in systems that use graphics to aid in the programming, debugging, and understanding of computer systems. The terms ``Visual Programming'' and ``Program Visualization'' have been applied to these systems. This paper attempts to provide more meaning to these terms by giving precise definitions, and then surveys a number of systems that can be classified as providing Visual Programming or Program Visualization. These systems are organized by classifying them into three different taxonomies.},
  file = {/Users/geoffreylitt/Zotero/storage/RRUVMERM/Myers - 1990 - Taxonomies of visual programming and program visua.pdf},
  journal = {Journal of Visual Languages \& Computing},
  keywords = {program visualization},
  language = {en},
  number = {1}
}

@article{myers2000,
  title = {Past, {{Present}}, and {{Future}} of {{User Interface Software Tools}}},
  author = {Myers, Brad and Hudson, Scott and Pausch, Randy},
  year = {2000},
  month = mar,
  volume = {7},
  pages = {3--28},
  doi = {10.1145/344949.344959},
  abstract = {A user interface software tool helps developers design and implement the user interface. Research on past tools has had enormous impact on today's developers---virtually all applications today were built using some form of user interface tool. In this paper, we consider cases of both success and failure in past user interface tools. From these cases we extract a set of themes which can serve as lessons for future work. Using these themes, past tools can be characterized by what aspects of the user interface they addressed, their threshold and ceiling, what path of least resistance they offer, how predictable they are to use, and whether they addressed a target that became irrelevant. We believe the lessons of these past themes are particularly important now, because increasingly rapid technological changes are likely to significantly change user interfaces. We are at the dawn of an era where user interfaces are about to break out of the "desktop" box where they have been stuck for the ...},
  file = {/Users/geoffreylitt/Zotero/storage/UL2WV4QQ/Myers et al. - 2000 - Past, Present, and Future of User Interface Softwa.pdf},
  journal = {ACM Trans. Comput.-Hum. Interact.}
}

@article{myers2000a,
  title = {Past, {{Present}} and {{Future}} of {{User Interface Software Tools}}},
  author = {Myers, Brad and Hudson, Scott E and Pausch, Randy},
  year = {2000},
  month = mar,
  pages = {3--28},
  journal = {ACM Transactions on Computer-Human Interaction},
  language = {en}
}

@inproceedings{nardi1990,
  title = {An {{Ethnographic Study}} of {{Distributed Problem Solving}} in {{Spreadsheet Development}}},
  author = {Nardi, Bonnie A. and Miller, James R.},
  year = {1990},
  pages = {197--208},
  publisher = {{ACM Press}},
  abstract = {In contrast to the common view of spreadsheets as ``single-user '' programs, we have found that spreadsheets offer surprisingly strong support for cooperative development of a wide variety of applications. Ethnographic interviews with spreadsheet users showed that nearly all of the spreadsheets used in the work environments studied were the result of collaborative work by people with different levels of programming and domain expertise. Cooperation among spreadsheet users was spontaneous and casual; users activated existing informal social networks to initiate collaboration.},
  file = {/Users/geoffreylitt/Zotero/storage/B9EBINUV/Nardi and Miller - 1990 - An Ethnographic Study of Distributed Problem Solvi.pdf;/Users/geoffreylitt/Zotero/storage/9ERKIFRJ/summary.html}
}

@article{nardi1991,
  title = {Twinkling Lights and Nested Loops: Distributed Problem Solving and Spreadsheet Development},
  shorttitle = {Twinkling Lights and Nested Loops},
  author = {Nardi, Bonnie A. and Miller, James R.},
  year = {1991},
  month = feb,
  volume = {34},
  pages = {161--184},
  issn = {00207373},
  doi = {10.1016/0020-7373(91)90040-E},
  file = {/Users/geoffreylitt/Zotero/storage/ZN8KPRHB/Nardi and Miller - 1991 - Twinkling lights and nested loops distributed pro.pdf},
  journal = {International Journal of Man-Machine Studies},
  language = {en},
  number = {2}
}

@book{nardi1993,
  title = {A {{Small Matter}} of {{Programming}}: {{Perspectives}} on {{End User Computing}}},
  shorttitle = {A {{Small Matter}} of {{Programming}}},
  author = {Nardi, Bonnie A.},
  year = {1993},
  month = jul,
  publisher = {{The MIT Press}},
  abstract = {A Small Matter of Programming asks why it has been so difficult for end users to command programming power and explores the problems of end user-driven application development that must be solved to afford end users greater computational power. Drawing on empirical research on existing end user systems,  A Small Matter of Programming analyzes cognitive, social, and technical issues of end user programming. In particular, it examines the importance of task-specific programming languages, visual application frameworks, and collaborative work practices for end user computing, with the goal of helping designers and programmers understand and better satisfy the needs of end users who want the capability to create, customize, and extend their applications software. The ideas in the book are based on the author's research on two successful end user programming systems - spreadsheets and CAD systems - as well as other empirical research. Nardi concentrates on broad issues in end user programming, especially end users' strengths and problems, introducing tools and techniques as they are related to higher-level user issues. Bonnie A. Nardi is a Member of the Technical Staff at Hewlett Packard Laboratories.},
  language = {English}
}

@misc{nielsen2014,
  title = {Reinventing {{Explanation}}},
  author = {Nielsen, Michael},
  year = {2014},
  month = jan,
  howpublished = {http://michaelnielsen.org/reinventing\_explanation/},
  journal = {Michael Nielsen}
}

@inproceedings{norman1983,
  title = {Design {{Principles}} for {{Human}}-Computer {{Interfaces}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Norman, Donald A.},
  year = {1983},
  pages = {1--10},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/800045.801571},
  abstract = {If the field of Human Factors in Computer Systems is to be a success it must develop design principles that are useful, principles that apply across a wide range of technologies. In the first part of this paper I discuss some the properties that useful principles should have. While I am at it, I warn of the dangers of the tar pits and the sirens of technology. We cannot avoid these dangers entirely, for were we to do so, we would fail to cope with the real problems and hazards of the field. The second part of the paper is intended to illustrate the first part through the example of tradeoff analysis. Any single design technique is apt to have its virtues along one dimension compensated by deficiencies along another. Tradeoff analysis provides a quantitative method of assessing tradeoff relations for two attributes xi and xj by first determining the User Satisfaction function for each, U(x), then showing how U(xi) trades off against U(xj). In general, the User Satisfaction for a system is given by the weighted sum of the User Satisfaction values for the attributes. The analysis is used to examine two different tradeoffs of information versus time and editor workspace versus menu size. Tradeoffs involving command languages versus menu-based systems, choices of names, and handheld computers versus workstations are examined briefly.},
  isbn = {978-0-89791-121-4},
  series = {{{CHI}} '83}
}

@incollection{norman1993,
  title = {The {{Power}} of {{Representation}}},
  booktitle = {Things {{That Make Us Smart}}: {{Defending Human Attributes}} in the {{Age}} of the {{Machine}}},
  author = {Norman, Donald},
  year = {1993},
  pages = {46--76},
  publisher = {{Basic Books}},
  address = {{New York, NY}},
  language = {en}
}

@book{norman2013,
  title = {The {{Design}} of {{Everyday Things}}},
  author = {Norman, Donald A.},
  year = {2013},
  edition = {Revised and expanded edition},
  publisher = {{Basic Books}},
  address = {{New York, NY}},
  abstract = {"Even the smartest among us can feel inept as we fail to figure out which light switch or oven burner to turn on, or whether to push, pull, or slide a door. The fault, argues this ingenious-even liberating-book, lies not in ourselves, but in product design that ignores the needs of users and the principles of cognitive psychology. The problems range from ambiguous and hidden controls to arbitrary relationships between controls and functions, coupled with a lack of feedback or other assistance and unreasonable demands on memorization. The Design of Everyday Things shows that good, usable design is possible. The rules are simple: make things visible, exploit natural relationships that couple function and control, and make intelligent use of constraints. The goal: guide the user effortlessly to the right action on the right control at the right time. In this entertaining and insightful analysis, cognitive scientist Don Norman hails excellence of design as the most important key to regaining the competitive edge in influencing consumer behavior. Now fully expanded and updated, with a new introduction by the author, The Design of Everyday Things is a powerful primer on how-and why-some products satisfy customers while others only frustrate them. "--},
  isbn = {978-0-465-05065-9},
  keywords = {BUSINESS \& ECONOMICS / Industries / Retailing,DESIGN / Product,Human engineering,Industrial design,Psychological aspects,PSYCHOLOGY / Applied Psychology},
  language = {en},
  lccn = {TS171.4 .N67 2013}
}

@article{ohearn2019,
  title = {Incorrectness Logic},
  author = {O'Hearn, Peter W.},
  year = {2019},
  month = dec,
  volume = {4},
  pages = {1--32},
  issn = {24751421},
  doi = {10.1145/3371078},
  abstract = {PETER W. O'HEARN, Facebook and University College London, UK 10 Program correctness and incorrectness are two sides of the same coin. As a programmer, even if you would like to have correctness, you might find yourself spending most of your time reasoning about incorrectness. This includes informal reasoning that people do while looking at or thinking about their code, as well as that supported by automated testing and static analysis tools. This paper describes a simple logic for program incorrectness which is, in a sense, the other side of the coin to Hoare's logic of correctness. CCS Concepts: {$\cdot$} Theory of computation \textrightarrow{} Programming logic.},
  file = {/Users/geoffreylitt/Zotero/storage/TDY592AI/O'Hearn - 2019 - Incorrectness logic.pdf},
  journal = {Proceedings of the ACM on Programming Languages},
  keywords = {toread},
  language = {en},
  number = {POPL}
}

@article{olsen1999,
  title = {Interacting in Chaos},
  author = {Olsen, Dan R.},
  year = {1999},
  month = sep,
  volume = {6},
  pages = {42--54},
  issn = {1072-5520},
  doi = {10.1145/312683.312720},
  file = {/Users/geoffreylitt/Zotero/storage/9W8X5IDG/Olsen - 1999 - Interacting in chaos.pdf},
  journal = {Interactions},
  number = {5}
}

@article{olson2000,
  title = {Distance {{Matters}}},
  author = {Olson, Gary M. and Olson, Judith S.},
  year = {2000},
  month = sep,
  volume = {15},
  pages = {139--178},
  issn = {0737-0024, 1532-7051},
  doi = {10.1207/S15327051HCI1523_4},
  abstract = {Giant strides in information technology at the turn of the century may have unleashed unreachable goals. With the invention of groupware, people expect to communicate easily with each other and accomplish difficult work even though they are remotely located or rarely overlap in time. Major corporations launch global teams, expecting that technology will make ``virtual collocation'' possible. Federal research money encourages global science through the establishment of ``collaboratories.'' We review over 10 years of field and laboratory investigations of collocated and noncollocated synchronous group collaborations. In particular, we compare collocated work with remote work as it is possible today and comment on the promise of remote work tomorrow. We focus on the sociotechnical conditions required for effective distance work and bring together the results with four key concepts: common ground, coupling of work, collaboration readiness, and collaboration technology readiness. Groups with high common ground and loosely coupled work, with readiness both for collaboration and collaboration technology, have a chance at succeeding with remote work. Deviations from each of these create strain on the relationships among teammates and require changes in the work or processes of collaboration to succeed. Often they do not succeed because distance still matters.},
  journal = {Human\textendash{}Computer Interaction},
  language = {en},
  number = {2-3}
}

@book{olson2014,
  title = {Ways of Knowing in {{HCI}}},
  editor = {Olson, Judith S. and Kellogg, Wendy},
  year = {2014},
  publisher = {{Springer}},
  address = {{New York}},
  file = {/Users/geoffreylitt/Zotero/storage/I4DM8SWF/Olson and Kellogg - 2014 - Ways of knowing in HCI.pdf},
  isbn = {978-1-4939-0377-1},
  keywords = {Human-computer interaction},
  language = {en},
  lccn = {QA76.9.H85 W39 2014}
}

@article{ophir2009,
  title = {Cognitive {{Control}} in {{Media Multitaskers}}},
  author = {Ophir, Eyal and Nass, Clifford and Wagner, Anthony D.},
  year = {2009},
  month = sep,
  volume = {106},
  pages = {15583--15587},
  issn = {0027-8424, 1091-6490},
  doi = {10.1073/pnas.0903620106},
  abstract = {Chronic media multitasking is quickly becoming ubiquitous, although processing multiple incoming streams of information is considered a challenge for human cognition. A series of experiments addressed whether there are systematic differences in information processing styles between chronically heavy and light media multitaskers. A trait media multitasking index was developed to identify groups of heavy and light media multitaskers. These two groups were then compared along established cognitive control dimensions. Results showed that heavy media multitaskers are more susceptible to interference from irrelevant environmental stimuli and from irrelevant representations in memory. This led to the surprising result that heavy media multitaskers performed worse on a test of task-switching ability, likely due to reduced ability to filter out interference from the irrelevant task set. These results demonstrate that media multitasking, a rapidly growing societal trend, is associated with a distinct approach to fundamental information processing.},
  journal = {Proceedings of the National Academy of Sciences},
  language = {en},
  number = {37}
}

@article{ottley2019,
  title = {The {{Curious Case}} of {{Combining Text}} and {{Visualization}}},
  author = {Ottley, Alvitta and Kaszowska, Aleksandra and Crouser, R Jordan and Peck, Evan M},
  year = {2019},
  pages = {5},
  abstract = {Visualization research has made significant progress in demonstrating the value of graphical data representation. Even still, the value added by static visualization is disputed in some areas. When presenting Bayesian reasoning information, for example, some studies suggest that combining text and visualizations could have an interactive effect. In this paper, we use eye tracking to compare how people extract information from text and visualization. Using a Bayesian reasoning problem as a test bed, we provide evidence that a visualization makes it easier to identify critical information, but that once identified as critical, information is more easily extracted from text. These tendencies persist even when text and visualization are presented together, indicating that users do not integrate information well across the two representation types. We discuss these findings and argue that effective representations should consider the ease of both information identification and extraction.},
  language = {en}
}

@incollection{patel2007,
  title = {At the {{Flick}} of a {{Switch}}: {{Detecting}} and {{Classifying Unique Electrical Events}} on the {{Residential Power Line}} ({{Nominated}} for the {{Best Paper Award}})},
  shorttitle = {At the {{Flick}} of a {{Switch}}},
  booktitle = {{{UbiComp}} 2007: {{Ubiquitous Computing}}},
  author = {Patel, Shwetak N. and Robertson, Thomas and Kientz, Julie A. and Reynolds, Matthew S. and Abowd, Gregory D.},
  editor = {Krumm, John and Abowd, Gregory D. and Seneviratne, Aruna and Strang, Thomas},
  year = {2007},
  volume = {4717},
  pages = {271--288},
  publisher = {{Springer Berlin Heidelberg}},
  address = {{Berlin, Heidelberg}},
  abstract = {Activity sensing in the home has a variety of important applications, including healthcare, entertainment, home automation, energy monitoring and post-occupancy research studies. Many existing systems for detecting occupant activity require large numbers of sensors, invasive vision systems, or extensive installation procedures. We present an approach that uses a single plug-in sensor to detect a variety of electrical events throughout the home. This sensor detects the electrical noise on residential power lines created by the abrupt switching of electrical devices and the noise created by certain devices while in operation. We use machine learning techniques to recognize electrically noisy events such as turning on or off a particular light switch, a television set, or an electric stove. We tested our system in one home for several weeks and in five homes for one week each to evaluate the system performance over time and in different types of houses. Results indicate that we can learn and classify various electrical events with accuracies ranging from 85-90\%.},
  isbn = {978-3-540-74852-6},
  language = {en}
}

@inproceedings{patel2010,
  title = {Avaaj {{Otalo}} \textemdash{} {{A Field Study}} of an {{Interactive Voice Forum}} for {{Small Farmers}} in {{Rural India}}},
  booktitle = {Proceedings of the {{Conference}} on {{Human Factors}} in {{Computing Systems}} \textendash{} {{CHI}} 2010},
  author = {Patel, Neil and Chittamuru, Deepti and Jain, Anupam and Dave, Paresh and Parikh, Tapan S.},
  year = {2010},
  month = apr,
  address = {{Atlanta, GA}},
  abstract = {In this paper we present the results of a field study of Avaaj Otalo (literally, ``voice stoop''), an interactive voice application for small-scale farmers in Gujarat, India. Through usage data and interviews, we describe how 51 farmers used the system over a seven month pilot deployment. The most popular feature of Avaaj Otalo was a forum for asking questions and browsing others ' questions and responses on a range of agricultural topics. The forum developed into a lively social space with the emergence of norms, persistent moderation, and a desire for both structured interaction with institutionally sanctioned authorities and open discussion with peers. For all 51 users this was the first experience participating in an online community of any sort. In terms of usability, simple menu-based navigation was readily learned, with users preferring numeric input over speech. We conclude by discussing implications of our findings for designing voice-based social media serving rural communities in India and elsewhere. Author Keywords Voice user interface, social media, forum, India, rural}
}

@article{petricek,
  title = {Cultures of Programming},
  author = {Petricek, Tomas},
  volume = {1},
  pages = {75},
  file = {/Users/geoffreylitt/Zotero/storage/UV2U35Z5/Petricek - Cultures of programming.pdf},
  keywords = {toread},
  language = {en},
  number = {1}
}

@incollection{pirolli2003,
  title = {Exploring and {{Finding Information}}},
  booktitle = {{{HCI Models}}, {{Theories}}, and {{Frameworks}}: {{Toward}} a {{Multidisciplinary Science}}},
  author = {Pirolli, Peter},
  editor = {Carroll, John M.},
  year = {2003},
  month = apr,
  publisher = {{Morgan Kaufmann}},
  address = {{Amsterdam; Boston}},
  abstract = {Finally-a thorough pedagogical survey of the multidisciplinary science of HCI.Human-Computer Interaction spans many disciplines, from the social and behavioral sciences to information and computer technology. But of all the textbooks on HCI technology and applications, none has adequately addressed HCI's multidisciplinary foundations-until now. HCI Models, Theories, and Frameworks fills a huge void in the education and training of advanced HCI students. Its authors comprise a veritable house of diamonds-internationally known HCI researchers, every one of whom has successfully applied a unique scientific method to solve practical problems.Each chapter focuses on a different scientific analysis or approach, but all in an identical format, especially designed to facilitate comparison of the various models.HCI Models, Theories, and Frameworks answers the question raised by the other HCI textbooks: How can HCI theory can support practice in HCI?* Traces HCI research from its origins* Surveys 14 different successful research approaches in HCI* Presents each approach in a common format to facilitate comparisons* Web-enhanced with teaching tools at http://www.HCImodels.com *Contributors are leading researchers in the field of Human-Comptuter Interaction *Fills a major gap in current literature about the rich scientific foundations of HCI *Provides a thorough pedogological survey of the science of HCI},
  isbn = {978-1-55860-808-5},
  language = {English}
}

@inproceedings{pollock2019,
  title = {Theia: Automatically Generating Correct Program State Visualizations},
  shorttitle = {Theia},
  booktitle = {Proceedings of the 2019 {{ACM SIGPLAN Symposium}} on {{SPLASH}}-{{E}}  - {{SPLASH}}-{{E}} 2019},
  author = {Pollock, Josh and Roesch, Jared and Woos, Doug and Tatlock, Zachary},
  year = {2019},
  pages = {46--56},
  publisher = {{ACM Press}},
  address = {{Athens, Greece}},
  doi = {10.1145/3358711.3361625},
  abstract = {Program state visualizations (PSVs) help programmers understand hidden program state like objects, references, and closures. Unfortunately, existing PSV tools do not support custom language semantics, which educators often use to introduce programming languages gradually. They also fail to visualize key pieces of program state, which can lead to incorrect and confusing visualizations.},
  file = {/Users/geoffreylitt/Zotero/storage/FNAG6CMM/Pollock et al. - 2019 - Theia automatically generating correct program st.pdf},
  isbn = {978-1-4503-6989-3},
  language = {en}
}

@misc{rees2019,
  title = {A {{Survey}} of {{Information Visualization Books}}},
  author = {Rees, D. and Laramee, R. S.},
  year = {2019},
  month = feb,
  howpublished = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13595},
  journal = {Computer Graphics Forum},
  language = {en}
}

@inproceedings{reiss2003,
  title = {{{JIVE}}: Visualizing {{Java}} in Action Demonstration Description},
  shorttitle = {{{JIVE}}},
  booktitle = {Proceedings of the 25th {{International Conference}} on {{Software Engineering}}},
  author = {Reiss, Steven P.},
  year = {2003},
  month = may,
  pages = {820--821},
  publisher = {{IEEE Computer Society}},
  address = {{Portland, Oregon}},
  abstract = {Dynamic software visualization should provide a programmer with insights as to what the program is doing. Most current dynamic visualizations either use program traces to show information about prior runs, slow the program down substantially, show only minimal information, or force the programmer to indicate when to turn visualizations on or off. We have developed a dynamic Java visualizer that provides a view of a program in action with low enough overhead that it can be used almost all the time by programmers to understand what their program is doing while it is doing it.},
  file = {/Users/geoffreylitt/Zotero/storage/X42G8K2G/Reiss - 2003 - JIVE visualizing Java in action demonstration des.pdf},
  isbn = {978-0-7695-1877-0},
  series = {{{ICSE}} '03}
}

@inproceedings{reiss2005,
  title = {Jove: Java as It Happens},
  shorttitle = {Jove},
  booktitle = {Proceedings of the 2005 {{ACM}} Symposium on {{Software}} Visualization  - {{SoftVis}} '05},
  author = {Reiss, Steven P. and Renieris, Manos},
  year = {2005},
  pages = {115},
  publisher = {{ACM Press}},
  address = {{St. Louis, Missouri}},
  doi = {10.1145/1056018.1056034},
  abstract = {Dynamic software visualization is designed to provide programmers with insights as to what the program is doing. Most current dynamic visualizations either use program traces to show information about prior runs, slow the program down substantially, show only minimal information, or force the programmer to indicate when to turn visualizations on or off. We have developed a dynamic Java visualizer that provides a statement-level view of a Java program in action with low enough overhead so that it can be used almost all the time by programmers to understand what their program is doing while it is doing it.},
  file = {/Users/geoffreylitt/Zotero/storage/V8H4ET9K/Reiss and Renieris - 2005 - Jove java as it happens.pdf},
  isbn = {978-1-59593-073-6},
  language = {en}
}

@article{reiss2007,
  title = {Visual Representations of Executing Programs},
  author = {Reiss, Steven P.},
  year = {2007},
  doi = {10.1016/j.jvlc.2007.01.003},
  abstract = {Programmers have always been curious about what their programs are doing while it is executing, especially when the behavior is not what they are expecting. Since program execution is intricate and involved, visualization has long been used to provide the programmer with appropriate insights into program execution. This paper looks at the evolution of on-line visual representations of executing programs, showing how they have moved from concrete representations of relatively small programs to abstract representations of larger systems. Based on this examination, we describe the challenges implicit in future execution visualizations and methodologies that can meet these challenges.},
  file = {/Users/geoffreylitt/Zotero/storage/28TMHIMW/jvlexec-1.pdf},
  journal = {J. Vis. Lang. Comput.}
}

@misc{resnick2016,
  title = {Designing for {{Wide Walls}}},
  shorttitle = {Mitchel {{Resnick}}},
  author = {Resnick, Mitchel},
  year = {2016},
  month = aug,
  abstract = {It's not enough to provide a single path from low floor to high ceiling; we need to provide wide walls so that kids can explore multiple pathways from floor to ceiling.},
  file = {/Users/geoffreylitt/Zotero/storage/CI562PI7/mitchel-resnick-designing-for-wide-walls.html},
  howpublished = {https://design.blog/2016/08/25/mitchel-resnick-designing-for-wide-walls/},
  journal = {Design.blog},
  language = {en}
}

@inproceedings{retelny2014,
  title = {Expert Crowdsourcing with Flash Teams},
  booktitle = {Proceedings of the 27th Annual {{ACM}} Symposium on {{User}} Interface Software and Technology - {{UIST}} '14},
  author = {Retelny, Daniela and Robaszkiewicz, S{\'e}bastien and To, Alexandra and Lasecki, Walter S. and Patel, Jay and Rahmati, Negar and Doshi, Tulsee and Valentine, Melissa and Bernstein, Michael S.},
  year = {2014},
  pages = {75--85},
  publisher = {{ACM Press}},
  address = {{Honolulu, Hawaii, USA}},
  doi = {10.1145/2642918.2647409},
  abstract = {We introduce flash teams, a framework for dynamically assembling and managing paid experts from the crowd. Flash teams advance a vision of expert crowd work that accomplishes complex, interdependent goals such as engineering and design. These teams consist of sequences of linked modular tasks and handoffs that can be computationally managed. Interactive systems reason about and manipulate these teams' structures: for example, flash teams can be recombined to form larger organizations and authored automatically in response to a user's request. Flash teams can also hire more people elastically in reaction to task needs, and pipeline intermediate output to accelerate completion times. To enable flash teams, we present Foundry, an end-user authoring platform and runtime manager. Foundry allows users to author modular tasks, then manages teams through handoffs of intermediate work. We demonstrate that Foundry and flash teams enable crowdsourcing of a broad class of goals including design prototyping, course development, and film animation, in half the work time of traditional self-managed teams.},
  isbn = {978-1-4503-3069-5},
  language = {en}
}

@article{robertson2008,
  title = {Effectiveness of {{Animation}} in {{Trend Visualization}}},
  author = {Robertson, G. and Fernandez, R. and Fisher, D. and Lee, B. and Stasko, J.},
  year = {2008},
  month = nov,
  volume = {14},
  pages = {1325--1332},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2008.125},
  abstract = {Animation has been used to show trends in multi-dimensional data. This technique has recently gained new prominence for presentations, most notably with Gapminder Trendalyzer. In Trendalyzer, animation together with interesting data and an engaging presenter helps the audience understand the results of an analysis of the data. It is less clear whether trend animation is effective for analysis. This paper proposes two alternative trend visualizations that use static depictions of trends: one which shows traces of all trends overlaid simultaneously in one display and a second that uses a small multiples display to show the trend traces side-by-side. The paper evaluates the three visualizations for both analysis and presentation. Results indicate that trend animation can be challenging to use even for presentations; while it is the fastest technique for presentation and participants find it enjoyable and exciting, it does lead to many participant errors. Animation is the least effective form for analysis; both static depictions of trends are significantly faster than animation, and the small multiples display is more accurate.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {6}
}

@incollection{robinson1993,
  title = {Design for Unanticipated Use.....},
  booktitle = {Proceedings of the {{Third European Conference}} on {{Computer}}-{{Supported Cooperative Work}} 13\textendash{}17 {{September}} 1993, {{Milan}}, {{Italy ECSCW}} '93},
  author = {Robinson, Mike},
  editor = {{de Michelis}, Giorgio and Simone, Carla and Schmidt, Kjeld},
  year = {1993},
  pages = {187--202},
  publisher = {{Springer Netherlands}},
  address = {{Dordrecht}},
  doi = {10.1007/978-94-011-2094-4_13},
  abstract = {Support for work practice is better conceptualised as support for activity taking place in a multidimensional space than as prescription of temporal task sequences. The notion of ``common artefact'' is introduced to illustrate, unify, and summarise recent research that identifies significant dimensions of cooperative work. Common artefacts may be mundane, everyday objects like hotel keyracks or sophisticated computer tools. Both are multidimensional, in that they provide orthogonal features. They are predictable; help people see at a glance what others are doing (peripheral awareness); support implicit communications through the material being worked on; provide a focus for discussion of difficulties and negotiation of compromises (double level language); and afford an overview of the work process that would not otherwise be available. It is argued that CSCW should support these dimensions of work, rather than trying to anticipate its specific sequentiality.},
  file = {/Users/geoffreylitt/Zotero/storage/YI7YP66J/Robinson - 1993 - Design for unanticipated use......pdf},
  isbn = {978-94-011-2094-4},
  keywords = {Common Artefact,Computer Support Cooperative Work,Cooperative Work,Explicit Communication,Flight Level},
  language = {en}
}

@article{robison2002,
  title = {Representation and Misrepresentation: {{Tufte}} and the {{Morton Thiokol}} Engineers on the {{Challenger}}},
  shorttitle = {Representation and Misrepresentation},
  author = {Robison, Wade},
  year = {2002},
  month = mar,
  volume = {8},
  pages = {59--81},
  issn = {1353-3452, 1471-5546},
  doi = {10.1007/s11948-002-0033-2},
  abstract = {This paper examines the role of the Morton Thiokol engineers in the decisions surrounding the launch of the Challenger, particularly with reference to an analysis of this event by Edward Tufte. The engineers at Morton Thiokol recommended against the launch of Challenger because the projected launch temperature between 26\textdegree{}F to 29\textdegree{}F was far outside their field database of successful launches. The engineers had asked for, but not received, data necessary to determine the cause of massive blow-by on the launch the previous January, and they had informed their managers and NASA that continuing flights could be catastrophic if the cause of the problems with the launches was not discovered. The authors conclude that the engineers thus did what they were ethically as well as professionally obligated to do.},
  journal = {Science and Engineering Ethics},
  language = {en},
  number = {1}
}

@inproceedings{rule2018,
  title = {Exploration and {{Explanation}} in {{Computational Notebooks}}},
  booktitle = {Proceedings of the 2018 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Rule, Adam and Tabard, Aur{\'e}lien and Hollan, James D.},
  year = {2018},
  pages = {32:1-32:12},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3173574.3173606},
  abstract = {Computational notebooks combine code, visualizations, and text in a single document. Researchers, data analysts, and even journalists are rapidly adopting this new medium. We present three studies of how they are using notebooks to document and share exploratory data analyses. In the first, we analyzed over 1 million computational notebooks on GitHub, finding that one in four had no explanatory text but consisted entirely of visualizations or code. In a second study, we examined over 200 academic computational notebooks, finding that although the vast majority described methods, only a minority discussed reasoning or results. In a third study, we interviewed 15 academic data analysts, finding that most considered computational notebooks personal, exploratory, and messy. Importantly, they typically used other media to share analyses. These studies demonstrate a tension between exploration and explanation in constructing and sharing computational notebooks. We conclude with opportunities to encourage explanation in computational media without hindering exploration.},
  isbn = {978-1-4503-5620-6},
  keywords = {computational notebook,data analysis,data science,jupyter notebook,narrative},
  series = {{{CHI}} '18}
}

@article{sarkar2018,
  title = {Calculation {{View}}: Multiple-Representation Editing in Spreadsheets},
  shorttitle = {Calculation {{View}}},
  author = {Sarkar, Advait and Gordon, Andy and Jones, Simon Peyton and Toronto, Neil},
  year = {2018},
  month = oct,
  abstract = {Spreadsheet errors are ubiquitous and costly, an unfortunate combination that is well-reported. A large class of these errors can be attributed to the inability to clearly see the underlying computational structure, as well as poor support for abstraction (encapsulation, re-use, etc). In this paper we propose a novel solution: a multiple-representation spreadsheet containing additional representations \ldots{}},
  file = {/Users/geoffreylitt/Zotero/storage/H9QZBRSC/Sarkar et al. - 2018 - Calculation View multiple-representation editing .pdf;/Users/geoffreylitt/Zotero/storage/7EV4V9XU/calculation-view-multiple-representation-editing-in-spreadsheets.html},
  language = {en-US}
}

@article{satyanarayan,
  title = {Vega-{{Lite}}: {{A Grammar}} of {{Interactive Graphics}}},
  author = {Satyanarayan, Arvind and Moritz, Dominik and Wongsuphasawat, Kanit and Heer, Jeffrey},
  pages = {10},
  abstract = {We present Vega-Lite, a high-level grammar that enables rapid specification of interactive data visualizations. Vega-Lite combines a traditional grammar of graphics, providing visual encoding rules and a composition algebra for layered and multi-view displays, with a novel grammar of interaction. Users specify interactive semantics by composing selections. In Vega-Lite, a selection is an abstraction that defines input event processing, points of interest, and a predicate function for inclusion testing. Selections parameterize visual encodings by serving as input data, defining scale extents, or by driving conditional logic. The Vega-Lite compiler automatically synthesizes requisite data flow and event handling logic, which users can override for further customization. In contrast to existing reactive specifications, Vega-Lite selections decompose an interaction design into concise, enumerable semantic units. We evaluate Vega-Lite through a range of examples, demonstrating succinct specification of both customized interaction methods and common techniques such as panning, zooming, and linked selection.},
  file = {/Users/geoffreylitt/Zotero/storage/7NMHQC79/Satyanarayan et al. - Vega-Lite A Grammar of Interactive Graphics.pdf},
  language = {en}
}

@article{satyanarayan2017,
  title = {Vega-{{Lite}}: {{A Grammar}} of {{Interactive Graphics}}},
  shorttitle = {Vega-{{Lite}}},
  author = {Satyanarayan, A. and Moritz, D. and Wongsuphasawat, K. and Heer, J.},
  year = {2017},
  month = jan,
  volume = {23},
  pages = {341--350},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2016.2599030},
  abstract = {We present Vega-Lite, a high-level grammar that enables rapid specification of interactive data visualizations. Vega-Lite combines a traditional grammar of graphics, providing visual encoding rules and a composition algebra for layered and multi-view displays, with a novel grammar of interaction. Users specify interactive semantics by composing selections. In Vega-Lite, a selection is an abstraction that defines input event processing, points of interest, and a predicate function for inclusion testing. Selections parameterize visual encodings by serving as input data, defining scale extents, or by driving conditional logic. The Vega-Lite compiler automatically synthesizes requisite data flow and event handling logic, which users can override for further customization. In contrast to existing reactive specifications, Vega-Lite selections decompose an interaction design into concise, enumerable semantic units. We evaluate Vega-Lite through a range of examples, demonstrating succinct specification of both customized interaction methods and common techniques such as panning, zooming, and linked selection.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  keywords = {Brushes,composition algebra,conditional logic,customized interaction methods,data visualisation,Data visualization,declarative specification,Encoding,Grammar,grammars,high-level grammar,inclusion testing,Information visualization,interaction,interactive data visualizations,interactive graphics,interactive systems,linked selection,multiview displays,program compilers,systems,toolkits,Transforms,Vega-Lite compiler,visual encoding rules,visual encodings,Visualization},
  number = {1}
}

@inproceedings{scaffidi2005,
  title = {Estimating the {{Numbers}} of {{End Users}} and {{End User Programmers}}},
  booktitle = {2005 {{IEEE Symposium}} on {{Visual Languages}} and {{Human}}-{{Centric Computing}} ({{VL}}/{{HCC}}'05)},
  author = {Scaffidi, C. and Shaw, M. and Myers, B.},
  year = {2005},
  pages = {207--214},
  publisher = {{IEEE}},
  address = {{Dallas, TX, USA}},
  doi = {10.1109/VLHCC.2005.34},
  abstract = {In 1995, Boehm predicted that by 2005, there would be ``55 million performers'' of ``end user programming'' in the United States. The original context and method which generated this number had two weaknesses, both of which we address. First, it relies on undocumented, judgment based factors to estimate the number of end user programmers based on the total number of end users; we address this weakness by identifying specific end user sub populations and then estimating their sizes. Second, Boehm's estimate relies on additional undocumented, judgment based factors to adjust for rising computer usage rates; we address this weakness by integrating fresh Bureau of Labor Statistics (BLS) data and projections as well as a richer estimation method.},
  file = {/Users/geoffreylitt/Zotero/storage/9HPVDWWQ/Scaffidi et al. - 2005 - Estimating the Numbers of End Users and End User P.pdf},
  isbn = {978-0-7695-2443-6},
  language = {en}
}

@incollection{scaffidi2010,
  title = {Reuse in the World of End User Programmers},
  booktitle = {No {{Code Required}}},
  author = {Scaffidi, Christopher and Shaw, Mary},
  year = {2010},
  pages = {407--421},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00021-3},
  abstract = {End user programmers often reuse one another's code when creating new programs, but this reuse is rarely as clean or simple as the black box reuse that professional programmers aspire to achieve. In this chapter, we explore the motivations that drive reuse of end user code, the challenges that impede reuse of end user code, and several approaches that facilitate reuse of end user code. We give particular emphasis to the problem of helping end users to identify high-quality reusable code amid the millions of scripts, macros, spreadsheets, and other programs produced by essentially anonymous users out on the Web. Based on a review of empirical studies, we find that reusable code is often characterized by certain traits, suggesting that it might be possible to help end user programmers to find reusable code by automatically gathering, analyzing, and synthesizing information about whether code has these desirable traits. We close the chapter with a discussion of future research opportunities aimed at helping end users to identify, understand, and adapt reusable code.},
  file = {/Users/geoffreylitt/Zotero/storage/CI7I9DDW/Scaffidi and Shaw - 2010 - Reuse in the world of end user programmers.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@article{sedlmair2012,
  title = {Design {{Study Methodology}}: {{Reflections}} from the {{Trenches}} and the {{Stacks}}},
  shorttitle = {Design {{Study Methodology}}},
  author = {Sedlmair, Michael and Meyer, Miriah and Munzner, Tamara},
  year = {2012},
  month = dec,
  volume = {18},
  pages = {2431--2440},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2012.213},
  abstract = {Design studies are an increasingly popular form of problem-driven visualization research, yet there is little guidance available about how to do them effectively. In this paper we reflect on our combined experience of conducting twenty-one design studies, as well as reading and reviewing many more, and on an extensive literature review of other field work methods and methodologies. Based on this foundation we provide definitions, propose a methodological framework, and provide practical guidance for conducting design studies. We define a design study as a project in which visualization researchers analyze a specific real-world problem faced by domain experts, design a visualization system that supports solving this problem, validate the design, and reflect about lessons learned in order to refine visualization design guidelines. We characterize two axes\textemdash{}a task clarity axis from fuzzy to crisp and an information location axis from the domain expert's head to the computer\textemdash{}and use these axes to reason about design study contributions, their suitability, and uniqueness from other approaches. The proposed methodological framework consists of 9 stages: learn, winnow, cast, discover, design, implement, deploy, reflect, and write. For each stage we provide practical guidance and outline potential pitfalls. We also conducted an extensive literature survey of related methodological approaches that involve a significant amount of qualitative field work, and compare design study methodology to that of ethnography, grounded theory, and action research.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {12}
}

@article{segel2010,
  title = {Narrative {{Visualization}}: {{Telling Stories}} with {{Data}}},
  shorttitle = {Narrative {{Visualization}}},
  author = {Segel, E. and Heer, J.},
  year = {2010},
  month = nov,
  volume = {16},
  pages = {1139--1148},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2010.179},
  abstract = {Data visualization is regularly promoted for its ability to reveal stories within data, yet these ``data stories'' differ in important ways from traditional forms of storytelling. Storytellers, especially online journalists, have increasingly been integrating visualizations into their narratives, in some cases allowing the visualization to function in place of a written story. In this paper, we systematically review the design space of this emerging class of visualizations. Drawing on case studies from news media to visualization research, we identify distinct genres of narrative visualization. We characterize these design differences, together with interactivity and messaging, in terms of the balance between the narrative flow intended by the author (imposed by graphical elements and the interface) and story discovery on the part of the reader (often through interactive exploration). Our framework suggests design strategies for narrative visualization, including promising under-explored approaches to journalistic storytelling and educational media.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  keywords = {case study,data story,data visualisation,data visualization,Data visualization,design differences,design methods,Economics,educational aids,educational media,Engineering profession,humanities,Image color analysis,journalism,journalistic storytelling,Media,narrative visualization,Narrative visualization,online journalists,social data analysis,storytelling,telling story,Visualization,visualization research},
  number = {6}
}

@incollection{shapiro2011,
  title = {Conflict-{{Free Replicated Data Types}}},
  booktitle = {Stabilization, {{Safety}}, and {{Security}} of {{Distributed Systems}}},
  author = {Shapiro, Marc and Pregui{\c c}a, Nuno and Baquero, Carlos and Zawirski, Marek},
  editor = {D{\'e}fago, Xavier and Petit, Franck and Villain, Vincent},
  year = {2011},
  volume = {6976},
  pages = {386--400},
  publisher = {{Springer Berlin Heidelberg}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-642-24550-3_29},
  abstract = {Replicating data under Eventual Consistency (EC) allows any replica to accept updates without remote synchronisation. This ensures performance and scalability in largescale distributed systems (e.g., clouds). However, published EC approaches are ad-hoc and error-prone. Under a formal Strong Eventual Consistency (SEC) model, we study sufficient conditions for convergence. A data type that satisfies these conditions is called a Conflictfree Replicated Data Type (CRDT). Replicas of any CRDT are guaranteed to converge in a self-stabilising manner, despite any number of failures. This paper formalises two popular approaches (state- and operation-based) and their relevant sufficient conditions. We study a number of useful CRDTs, such as sets with clean semantics, supporting both add and remove operations, and consider in depth the more complex Graph data type. CRDT types can be composed to develop large-scale distributed applications, and have interesting theoretical properties.},
  file = {/Users/geoffreylitt/Zotero/storage/DXFKYLIR/Shapiro et al. - 2011 - Conflict-Free Replicated Data Types.pdf},
  isbn = {978-3-642-24549-7 978-3-642-24550-3},
  keywords = {toread},
  language = {en}
}

@article{shneiderman1983,
  title = {Direct {{Manipulation}}: {{A Step Beyond Programming Languages}}},
  shorttitle = {Direct {{Manipulation}}},
  author = {Shneiderman, B.},
  year = {1983},
  month = aug,
  volume = {16},
  pages = {57--69},
  issn = {0018-9162},
  doi = {10.1109/MC.1983.1654471},
  abstract = {First Page of the Article},
  file = {/Users/geoffreylitt/Zotero/storage/ML6V6C9N/Shneiderman - 1983 - Direct Manipulation A Step Beyond Programming Lan.pdf},
  journal = {Computer},
  number = {8}
}

@inproceedings{shneiderman1996,
  title = {The {{Eyes Have It}}: {{A Task}} by {{Data Type Taxonomy}} for {{Information Visualizations}}},
  shorttitle = {The {{Eyes Have It}}},
  booktitle = {Proceedings of the 1996 {{IEEE Symposium}} on {{Visual Languages}}},
  author = {Shneiderman, Ben},
  year = {1996},
  pages = {336--343},
  publisher = {{IEEE Computer Society}},
  address = {{Washington, DC, USA}},
  abstract = {A useful starting point for designing advanced graphical user interfaces is the Visual Information-Seeking Mantra: overview first, zoom and filter, then details on demand. But this is only a starting point in trying to understand the rich and varied set of information visualizations that have been proposed in recent years. This paper offers a task by data type taxonomy with seven data types (one-, two-, three-dimensional data, temporal and multi-dimensional data, and tree and network data) and seven tasks (overview, zoom, filter, details-on-demand, relate, history, and extracts).},
  isbn = {978-0-8186-7508-9},
  keywords = {graphical user interfaces,information visualization,visualization},
  series = {{{VL}} '96}
}

@article{simon1988,
  title = {The {{Science}} of {{Design}}: {{Creating}} the {{Artificial}}},
  shorttitle = {The {{Science}} of {{Design}}},
  author = {Simon, Herbert A.},
  year = {1988},
  volume = {4},
  pages = {67},
  issn = {07479360},
  doi = {10.2307/1511391},
  journal = {Design Issues},
  language = {en},
  number = {1/2}
}

@book{simon2008,
  title = {The {{Sciences}} of the {{Artificial}}},
  author = {Simon, Herbert Alexander},
  year = {2008},
  publisher = {{MIT Press}},
  address = {{Cambridge, MA}},
  isbn = {978-0-262-19374-0 978-0-262-69191-8},
  language = {en}
}

@article{spencer2015,
  title = {Brittleness and {{Bureaucracy}}: {{Software}} as a {{Material}} for {{Science}}},
  shorttitle = {Brittleness and {{Bureaucracy}}},
  author = {Spencer, Matt},
  year = {2015},
  month = nov,
  volume = {23},
  pages = {466--484},
  issn = {1063-6145, 1530-9274},
  doi = {10.1162/POSC_a_00184},
  file = {/Users/geoffreylitt/Zotero/storage/QYIANLYK/Spencer - 2015 - Brittleness and Bureaucracy Software as a Materia.pdf},
  journal = {Perspectives on Science},
  keywords = {toread},
  language = {en},
  number = {4}
}

@article{srivastava,
  title = {From {{Program Verification}} to {{Program Synthesis}}},
  author = {Srivastava, Saurabh and Gulwani, Sumit and Foster, Jeffrey S},
  pages = {14},
  abstract = {This paper describes a novel technique for the synthesis of imperative programs. Automated program synthesis has the potential to make programming and the design of systems easier by allowing programs to be specified at a higher-level than executable code. In our approach, which we call proof-theoretic synthesis, the user provides an input-output functional specification, a description of the atomic operations in the programming language, and a specification of the synthesized program's looping structure, allowed stack space, and bound on usage of certain operations. Our technique synthesizes a program, if there exists one, that meets the inputoutput specification and uses only the given resources.},
  file = {/Users/geoffreylitt/Zotero/storage/58YWURBB/Srivastava et al. - From Program Veriﬁcation to Program Synthesis.pdf},
  language = {en}
}

@misc{stallmanrichard,
  title = {{{EMACS}}: {{The Extensible}}, {{Customizable Display Editor}}},
  author = {Stallman, Richard},
  file = {/Users/geoffreylitt/Zotero/storage/ZQS7ACB2/emacs-paper.html},
  howpublished = {https://www.gnu.org/software/emacs/emacs-paper.html\#SEC15},
  keywords = {customizable software,toread}
}

@article{stasko1990,
  title = {Tango: {{A Framework}} and {{System}} for {{Algorithm Animation}}},
  shorttitle = {Tango},
  author = {Stasko, John T.},
  year = {1990},
  month = sep,
  volume = {23},
  pages = {27--39},
  issn = {0018-9162},
  doi = {10.1109/2.58216},
  abstract = {The role of animation in understanding and evaluating programs and developing new programs is discussed. A framework for algorithm animation, called Tango, and a system based on that framework are introduced. Related work is reviewed, and the conceptual framework on which Tango is based is examined. The implementation of the Tango system is described. The first-fit bin-packing algorithm is animated to illustrate how the path-transition paradigm simplifies algorithm animation.},
  journal = {Computer},
  number = {9}
}

@incollection{stokes1997,
  title = {Transforming the {{Paradigm}}},
  booktitle = {Pasteur's {{Quadrant}}: {{Basic Science}} and {{Technological Innovation}}},
  author = {Stokes, Donald E.},
  year = {1997},
  pages = {58--89},
  publisher = {{Brookings Institution Press}},
  address = {{Washington, D.C.}}
}

@article{stolte2003,
  title = {Multiscale {{Visualization Using Data Cubes}}},
  author = {Stolte, Chris and Tang, Diane and Hanrahan, Pat},
  year = {2003},
  month = apr,
  volume = {9},
  pages = {176--187},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2003.1196005},
  abstract = {Most analysts start with an overview of the data before gradually refining their view to be more focused and detailed. Multiscale pan-and-zoom systems are effective because they directly support this approach. However, generating abstract overviews of large data sets is difficult and most systems take advantage of only one type of abstraction: visual abstraction. Furthermore, these existing systems limit the analyst to a single zooming path on their data and thus to a single set of abstract views. This paper presents: 1) a formalism for describing multiscale visualizations of data cubes with both data and visual abstraction and 2) a method for independently zooming along one or more dimensions by traversing a zoom graph with nodes at different levels of detail. As an example of how to design multiscale visualizations using our system, we describe four design patterns using our formalism. These design patterns show the effectiveness of multiscale visualization of general relational databases.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  keywords = {database visualization,graphic formalism.,Multiscale visualization},
  number = {2}
}

@misc{streak,
  title = {{{InboxSDK}}},
  author = {Streak},
  file = {/Users/geoffreylitt/Zotero/storage/TK2FCLM5/www.inboxsdk.com.html},
  howpublished = {https://www.inboxsdk.com/}
}

@book{suchman1985,
  title = {Plans and {{Situated Actions}}: {{The Problem}} of {{Human}}-{{Machine Communication}}},
  author = {Suchman, Lucy A.},
  year = {1985},
  month = feb,
  publisher = {{Palo Alto Research Center, Xerox Corporation}},
  address = {{Palo Alto, CA}},
  language = {en}
}

@phdthesis{sutherland1963,
  title = {Sketchpad: {{A Man}}-{{Machine Graphical Communication System}}},
  author = {Sutherland, Ivan Edward},
  year = {1963},
  month = jan,
  address = {{Cambridge, MA}},
  language = {en},
  school = {Massachusetts Institute of Technology},
  type = {Ph.{{D}}. {{Thesis}}}
}

@article{szafir2018,
  title = {The Good, the Bad, and the Biased: Five Ways Visualizations Can Mislead (and How to Fix Them)},
  shorttitle = {The Good, the Bad, and the Biased},
  author = {Szafir, Danielle Albers},
  year = {2018},
  month = jun,
  volume = {25},
  pages = {26--33},
  issn = {10725520},
  doi = {10.1145/3231772},
  journal = {Interactions},
  language = {en},
  number = {4}
}

@misc{talwar2019,
  title = {Gmail.Js},
  author = {Talwar, Kartik},
  year = {2019},
  abstract = {Gmail JavaScript API},
  file = {/Users/geoffreylitt/Zotero/storage/EQIGCWJM/master.html},
  howpublished = {https://github.com/KartikTalwar/gmail.js},
  journal = {GitHub},
  language = {en}
}

@article{tchernavskij,
  title = {Designing and {{Programming Malleable Software}}},
  author = {Tchernavskij, Philip},
  pages = {138},
  file = {/Users/geoffreylitt/Zotero/storage/HGMLC9GV/Tchernavskij - Designing and Programming Malleable Software.pdf},
  keywords = {toread},
  language = {en}
}

@inproceedings{teevan2004,
  title = {The {{Perfect Search Engine}} Is {{Not Enough}}: {{A Study}} of {{Orienteering Behavior}} in {{Directed Search}}},
  shorttitle = {The {{Perfect Search Engine}} Is {{Not Enough}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Teevan, Jaime and Alvarado, Christine and Ackerman, Mark S. and Karger, David R.},
  year = {2004},
  pages = {415--422},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/985692.985745},
  abstract = {This paper presents a modified diary study that investigated how people performed personally motivated searches in their email, in their files, and on the Web. Although earlier studies of directed search focused on keyword search, most of the search behavior we observed did not involve keyword search. Instead of jumping directly to their information target using keywords, our participants navigated to their target with small, local steps using their contextual knowledge as a guide, even when they knew exactly what they were looking for in advance. This stepping behavior was especially common for participants with unstructured information organization. The observed advantages of searching by taking small steps include that it allowed users to specify less of their information need and provided a context in which to understand their results. We discuss the implications of such advantages for the design of personal information management tools.},
  isbn = {978-1-58113-702-6},
  keywords = {context,information seeking,observational study,orienteering,search,teleporting},
  series = {{{CHI}} '04}
}

@inproceedings{tohidi2006,
  title = {Getting the {{Right Design}} and the {{Design Right}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Tohidi, Maryam and Buxton, William and Baecker, Ronald and Sellen, Abigail},
  year = {2006},
  pages = {1243--1252},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1124772.1124960},
  abstract = {We present a study comparing usability testing of a single interface versus three functionally equivalent but stylistically distinct designs. We found that when presented with a single design, users give significantly higher ratings and were more reluctant to criticize than when presented with the same design in a group of three. Our results imply that by presenting users with alternative design solutions, subjective ratings are less prone to inflation and give rise to more and stronger criticisms when appropriate. Contrary to our expectations, our results also suggest that usability testing by itself, even when multiple designs are presented, is not an effective vehicle for soliciting constructive suggestions about how to improve the design from end users. It is a means to identify problems, not provide solutions.},
  isbn = {978-1-59593-372-0},
  keywords = {design,evaluation,methods,participatory design,prototyping,usability testing,user centered design},
  series = {{{CHI}} '06}
}

@inproceedings{torlak2007,
  title = {Kodkod: {{A}} Relational Model Finder},
  shorttitle = {Kodkod},
  booktitle = {International {{Conference}} on {{Tools}} and {{Algorithms}} for the {{Construction}} and {{Analysis}} of {{Systems}}},
  author = {Torlak, Emina and Jackson, Daniel},
  year = {2007},
  pages = {632--647},
  publisher = {{Springer}},
  file = {/Users/geoffreylitt/Zotero/storage/JD7XJVQD/Torlak and Jackson - 2007 - Kodkod A relational model finder.pdf;/Users/geoffreylitt/Zotero/storage/GP83CYAX/978-3-540-71209-1_49.html}
}

@inproceedings{trigg1994,
  title = {From Implementation to Design: Tailoring and the Emergence of Systematization in {{CSCW}}},
  shorttitle = {From Implementation to Design},
  booktitle = {Proceedings of the 1994 {{ACM}} Conference on {{Computer}} Supported Cooperative Work},
  author = {Trigg, Randall H. and B{\o}dker, Susanne},
  year = {1994},
  month = oct,
  pages = {45--54},
  publisher = {{Association for Computing Machinery}},
  address = {{Chapel Hill, North Carolina, USA}},
  doi = {10.1145/192844.192869},
  abstract = {In this paper, we look at how people working in a governmental labor inspection agency tailor their shared PC environment. Starting with standard off-the-shelf software, the tailors adapt that software to the particular workplace in which they are embedded, at the same time that they modify and extend the practices of that workplace. Over time, their adaptations and the tailoring processes themselves become structured and systematized within the organization. This tendency toward systematization is in part a response to the requirement that the results of tailoring be sharable across groups of users. Our study focuses on several dimensions of the work of tailoring: construction, organizational change, learning, and politics. We draw two kinds of lessons for system development: how better to support the work of tailors, and how system developers can learn from and cooperate with tailors.},
  file = {/Users/geoffreylitt/Zotero/storage/YKXY2L95/Trigg and Bødker - 1994 - From implementation to design tailoring and the e.pdf},
  isbn = {978-0-89791-689-9},
  keywords = {customizable software,customization,development and use of shared standards,emergent use of standard technology,tailoring},
  series = {{{CSCW}} '94}
}

@book{tufte1997,
  title = {Visual {{Explanations}}: {{Images}} and {{Quantities}}, {{Evidence}} and {{Narrative}}},
  author = {Tufte, Edward R.},
  year = {1997},
  publisher = {{Graphics Press}},
  address = {{Cheshire, CT}},
  abstract = {This book describes design strategies - the proper arrangement in space and time of images, words, and numbers - for presenting information about motion, process, mechanism, cause and effect.},
  isbn = {0-9613921-2-6 978-0-9613921-2-3 978-1-930824-15-7 1-930824-15-7 0-9613921-7-7 978-0-9613921-7-8},
  keywords = {\#nosource},
  language = {English}
}

@book{tufte2001,
  title = {The {{Visual Display}} of {{Quantitative Information}}},
  author = {Tufte, Edward R.},
  year = {2001},
  publisher = {{Graphics Press}},
  address = {{Cheshire, CT}},
  keywords = {\#nosource}
}

@book{tufte2003,
  title = {The {{Cognitive Style}} of {{Powerpoint}}},
  author = {Tufte, Edward R.},
  year = {2003},
  publisher = {{Graphics Press}},
  address = {{Cheshire, CT}},
  abstract = {Using specific examples, Tufte explains how PowerPoint's templates "usually weaken verbal and spatial reasoning and almost always corrupt statistical analysis," and describes concrete ways to improve content of presentations.},
  isbn = {0-9613921-5-0 978-0-9613921-5-4},
  keywords = {\#nosource},
  language = {English}
}

@book{tufte2006,
  title = {Beautiful {{Evidence}}},
  author = {Tufte, Edward R.},
  year = {2006},
  publisher = {{Graphics Press}},
  address = {{Cheshire, CT}},
  keywords = {\#nosource}
}

@book{tufte2006a,
  title = {Envisioning {{Information}}},
  author = {Tufte, Edward R.},
  year = {2006},
  publisher = {{Graphics Press}},
  address = {{Cheshire, CT}},
  isbn = {978-0-9613921-1-6 0-9613921-1-8},
  keywords = {\#nosource},
  language = {English}
}

@article{tversky2002,
  title = {Animation: Can It Facilitate?},
  shorttitle = {Animation},
  author = {Tversky, Barbara and Morrison, Julie Bauer and Betrancourt, Mireille},
  year = {2002},
  month = oct,
  volume = {57},
  pages = {247--262},
  issn = {10715819},
  doi = {10.1006/ijhc.2002.1017},
  journal = {International Journal of Human-Computer Studies},
  language = {en},
  number = {4}
}

@inproceedings{valentine2017,
  title = {Flash {{Organizations}}: {{Crowdsourcing Complex Work}} by {{Structuring Crowds As Organizations}}},
  shorttitle = {Flash {{Organizations}}},
  booktitle = {Proceedings of the 2017 {{CHI Conference}} on {{Human Factors}} in {{Computing Systems}}  - {{CHI}} '17},
  author = {Valentine, Melissa A. and Retelny, Daniela and To, Alexandra and Rahmati, Negar and Doshi, Tulsee and Bernstein, Michael S.},
  year = {2017},
  pages = {3523--3537},
  publisher = {{ACM Press}},
  address = {{Denver, Colorado, USA}},
  doi = {10.1145/3025453.3025811},
  abstract = {This paper introduces flash organizations: crowds structured like organizations to achieve complex and open-ended goals. Microtask workflows, the dominant crowdsourcing structures today, only enable goals that are so simple and modular that their path can be entirely pre-defined. We present a system that organizes crowd workers into computationally-represented structures inspired by those used in organizations \textemdash{} roles, teams, and hierarchies \textemdash{} which support emergent and adaptive coordination toward open-ended goals. Our system introduces two technical contributions: 1) encoding the crowd's division of labor into de-individualized roles, much as movie crews or disaster response teams use roles to support coordination between on-demand workers who have not worked together before; and 2) reconfiguring these structures through a model inspired by version control, enabling continuous adaptation of the work and the division of labor. We report a deployment in which flash organizations successfully carried out open-ended and complex goals previously out of reach for crowdsourcing, including product design, software development, and game production. This research demonstrates digitally networked organizations that flexibly assemble and reassemble themselves from a globally distributed online workforce to accomplish complex work.},
  isbn = {978-1-4503-4655-9},
  language = {en}
}

@article{valiant1984,
  title = {A Theory of the Learnable},
  author = {Valiant, Leslie},
  year = {1984},
  volume = {27},
  pages = {9},
  abstract = {Humans appear to be able to learn new concepts without needing to be programmed explicitly in any conventional sense. In this paper we regard learning as the phenomenon of knowledge acquisition in the absence of explicit programming. We give a precise methodology for studying this phenomenon from a computational viewpoint. It consists of choosing an appropriate information gathering mechanism, the learning protocol, and exploring the class of concepts that can be learned using it in a reasonable (polynomial) number of steps. Although inherent algorithmic complexity appears to set serious limits to the range of concepts that can be learned, we show that there are some important nontrivial classes of propositional concepts that can be learned in a realistic sense.},
  file = {/Users/geoffreylitt/Zotero/storage/5U9B4ZMA/Waltz - 1984 - A theory of the learnable.pdf},
  keywords = {toread},
  language = {en},
  number = {11}
}

@inproceedings{vanhardenberg2020,
  title = {{{PushPin}}: Towards Production-Quality Peer-to-Peer Collaboration},
  shorttitle = {{{PushPin}}},
  booktitle = {Proceedings of the {{7thWorkshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {{van Hardenberg}, Peter and Kleppmann, Martin},
  year = {2020},
  month = apr,
  pages = {1--10},
  publisher = {{ACM}},
  address = {{Heraklion Greece}},
  doi = {10.1145/3380787.3393683},
  abstract = {Fully peer-to-peer application software promises many benefits over cloud software, in particular, being able to function indefinitely without requiring servers. Research on distributed consistency mechanisms such as CRDTs has laid the foundation for P2P data synchronisation and collaboration. In this paper we report on our experience in taking these technologies beyond research prototypes, and working towards commercial-grade P2P collaboration software. We identify approaches that work well in our experience, such as the functional reactive programming paradigm, and highlight areas in need of further research, such as the reliability of NAT traversal and usability challenges.},
  file = {/Users/geoffreylitt/Zotero/storage/YBEKKZLA/van Hardenberg and Kleppmann - 2020 - PushPin towards production-quality peer-to-peer c.pdf},
  isbn = {978-1-4503-7524-5},
  language = {en}
}

@incollection{vankleek2010,
  title = {Mixing the Reactive with the Personal},
  booktitle = {No {{Code Required}}},
  author = {Van Kleek, Max and Andr{\'e}, Paul and Moore, Brennan and Karger, David and {schraefel}, m.c.},
  year = {2010},
  pages = {127--149},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00007-9},
  abstract = {The transition of personal information management (PIM) tools off the desktop to the Web presents an opportunity to augment these tools with capabilities provided by the wealth of real-time information readily available. In this chapter, we describe a personal information assistance engine that lets end users delegate to it various simple context- and activity-reactive tasks and reminders. Our system, Atomate, treats RSS/ATOM feeds from social networking and life-tracking sites as sensor streams, integrating information from such feeds into a simple unified RDF world model representing people, places, and things and their time-varying states and activities. Combined with other information sources on the Web, including the user's online calendar, Web-based email client, news feeds and messaging services, Atomate can be made to automatically carry out a variety of simple tasks for the user, ranging from context-aware filtering and messaging, to sharing and social coordination actions. Atomate's open architecture and world model easily accommodate new information sources and actions via the addition of feeds and Web services. To make routine use of the system easy for nonprogrammers, Atomate provides a constrained-input, controlled natural language interface (CNLI) for behavior specification, and a direct-manipulation interface for inspecting and updating its world model.},
  file = {/Users/geoffreylitt/Zotero/storage/L4DJNUYA/Van Kleek et al. - 2010 - Mixing the reactive with the personal.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@inproceedings{verou2016,
  title = {Mavo: {{Creating Interactive Data}}-{{Driven Web Applications}} by {{Authoring HTML}}},
  shorttitle = {Mavo},
  booktitle = {Proceedings of the 29th {{Annual Symposium}} on {{User Interface Software}} and {{Technology}} - {{UIST}} '16},
  author = {Verou, Lea and Zhang, Amy X. and Karger, David R.},
  year = {2016},
  pages = {483--496},
  publisher = {{ACM Press}},
  address = {{Tokyo, Japan}},
  doi = {10.1145/2984511.2984551},
  abstract = {Many people can author static web pages with HTML and CSS but find it hard or impossible to program persistent, interactive web applications. We show that for a broad class of CRUD (Create, Read, Update, Delete) applications, this gap can be bridged. Mavo extends the declarative syntax of HTML to describe Web applications that manage, store and transform data. Using Mavo, authors with basic HTML knowledge define complex data schemas implicitly as they design their HTML layout. They need only add a few attributes and expressions to their HTML elements to transform their static design into a persistent, data-driven web application whose data can be edited by direct manipulation of the content in the browser. We evaluated Mavo with 20 users who marked up static designs\textemdash{}some provided by us, some their own creation\textemdash{}to transform them into fully functional web applications. Even users with no programming experience were able to quickly craft Mavo applications.},
  file = {/Users/geoffreylitt/Zotero/storage/WDIPZUY3/Verou et al. - 2016 - Mavo Creating Interactive Data-Driven Web Applica.pdf},
  isbn = {978-1-4503-4189-9},
  language = {en}
}

@misc{victor2011,
  title = {Up and {{Down}} the {{Ladder}} of {{Abstraction}}},
  author = {Victor, Bret},
  year = {2011},
  month = oct,
  howpublished = {http://worrydream.com/LadderOfAbstraction/},
  journal = {Bret Victor}
}

@misc{victor2013,
  title = {Media for {{Thinking}} the {{Unthinkable}}},
  author = {Victor, Bret},
  year = {2013},
  month = apr,
  howpublished = {http://worrydream.com/MediaForThinkingTheUnthinkable/},
  journal = {Bret Victor}
}

@misc{victor2020,
  title = {Dynamicland},
  author = {Victor, Bret},
  year = {2020},
  abstract = {incubating a humane dynamic medium},
  file = {/Users/geoffreylitt/Zotero/storage/JIP78YH7/dynamicland.org.html},
  howpublished = {https://dynamicland.org/}
}

@misc{victora,
  title = {Learnable {{Programming}}},
  author = {Victor, Bret},
  file = {/Users/geoffreylitt/Zotero/storage/TD257V6J/LearnableProgramming.html},
  howpublished = {http://worrydream.com/LearnableProgramming/},
  keywords = {program visualization}
}

@incollection{vonhippel2005,
  title = {Application: {{Toolkits}} for {{User Innovation}} and {{Custom Design}}},
  shorttitle = {Application},
  booktitle = {Democratizing {{Innovation}}},
  author = {{von Hippel}, Eric},
  year = {2005},
  pages = {147--164},
  publisher = {{The MIT Press}},
  isbn = {978-0-262-28563-6},
  language = {en}
}

@article{wang2019,
  title = {Visualization by Example},
  author = {Wang, Chenglong and Feng, Yu and Bodik, Rastislav and Cheung, Alvin and Dillig, Isil},
  year = {2019},
  month = dec,
  volume = {4},
  pages = {1--28},
  issn = {24751421},
  doi = {10.1145/3371117},
  abstract = {CHENGLONG WANG, University of Washington, USA YU FENG, University of California, Santa Barbara, USA RASTISLAV BODIK, University of Washington, USA ALVIN CHEUNG, University of California, Berkeley, USA ISIL DILLIG, University of Texas at Austin, USA While visualizations play a crucial role in gaining insights from data, generating useful visualizations from a complex dataset is far from an easy task. In particular, besides understanding the functionality provided by existing visualization libraries, generating the desired visualization also requires reshaping and aggregating the underlying data as well as composing different visual elements to achieve the intended visual narrative. This paper aims to simplify visualization tasks by automatically synthesizing the required program from simple visual sketches provided by the user. Specifically, given an input data set and a visual sketch that demonstrates how to visualize a very small subset of this data, our technique automatically generates a program that can be used to visualize the entire data set. From a program synthesis perspective, automating visualization tasks poses several challenges that are not addressed by prior techniques. First, because many visualization tasks require data wrangling in addition to generating plots from a given table, we need to decompose the end-to-end synthesis task into two separate sub-problems. Second, because the intermediate specification that results from the decomposition is necessarily imprecise, this makes the data wrangling task particularly challenging in our context. In this paper, we address these problems by developing a new compositional visualization-by-example technique that (a) decomposes the end-to-end task into two different synthesis problems over different DSLs and (b) leverages bi-directional program analysis to deal with the complexity that arises from having an imprecise intermediate specification. We have implemented our visualization-by-example approach in a tool called Viser and evaluate it on 83 visualization tasks collected from on-line forums and tutorials. Viser can solve 84\% of these benchmarks within a 600 second time limit, and, for those tasks that can be solved, the desired visualization is among the top-5 generated by Viser in 70\% of the cases. CCS Concepts: \textbullet{} Theory of computation \textrightarrow{} Program reasoning; \textbullet{} Human-centered computing \textrightarrow{} Visualization toolkits.},
  file = {/Users/geoffreylitt/Zotero/storage/2RWUSYKS/Wang et al. - 2019 - Visualization by example.pdf},
  journal = {Proceedings of the ACM on Programming Languages},
  keywords = {toread},
  language = {en},
  number = {POPL}
}

@article{weiher,
  title = {Can {{Programmers Escape}} the {{Gentle Tyranny}} of Call/Return?},
  author = {Weiher, Marcel},
  pages = {21},
  abstract = {Although the call/return architectural style has served as the foundation of much of computing since its existence, it no longer matches a large proportion, probably the majority, of the programs or systems created today.},
  file = {/Users/geoffreylitt/Zotero/storage/CGSM3L8Y/Weiher - Can Programmers Escape the Gentle Tyranny of call.pdf},
  language = {en}
}

@inproceedings{weiher2019,
  title = {Storage Combinators},
  booktitle = {Proceedings of the 2019 {{ACM SIGPLAN International Symposium}} on {{New Ideas}}, {{New Paradigms}}, and {{Reflections}} on {{Programming}} and {{Software}} - {{Onward}}! 2019},
  author = {Weiher, Marcel and Hirschfeld, Robert},
  year = {2019},
  pages = {111--127},
  publisher = {{ACM Press}},
  address = {{Athens, Greece}},
  doi = {10.1145/3359591.3359729},
  abstract = {The ability to compose software from high level components is as sought after as it is elusive. The REST architectural style used in the World Wide Web enables such plug-compatible components in distributed settings.},
  file = {/Users/geoffreylitt/Zotero/storage/TVHJY94Z/Weiher and Hirschfeld - 2019 - Storage combinators.pdf},
  isbn = {978-1-4503-6995-4},
  keywords = {toread},
  language = {en}
}

@article{weiser1999,
  title = {The {{Computer}} for the 21st {{Century}}},
  author = {Weiser, Mark},
  year = {1999},
  month = jul,
  volume = {3},
  pages = {3--11},
  issn = {1559-1662},
  doi = {10.1145/329124.329126},
  abstract = {Specialized elements of hardware and software, connected by wires, radio waves and infrared, will be so ubiquitous that no one will notice their presence.},
  journal = {SIGMOBILE Mobile Computing and Communications Review},
  number = {3}
}

@article{wickham2010,
  title = {A {{Layered Grammar}} of {{Graphics}}},
  author = {Wickham, Hadley},
  year = {2010},
  month = jan,
  volume = {19},
  pages = {3--28},
  issn = {1061-8600, 1537-2715},
  doi = {10.1198/jcgs.2009.07098},
  file = {/Users/geoffreylitt/Zotero/storage/W7MDYG2N/Wickham - 2010 - A Layered Grammar of Graphics.pdf},
  journal = {Journal of Computational and Graphical Statistics},
  language = {en},
  number = {1}
}

@incollection{wigdor2011,
  title = {Touch versus {{In}}-{{Air Gestures}}},
  booktitle = {Brave {{NUI World}}: {{Designing Natural User Interfaces}} for {{Touch}} and {{Gesture}}},
  author = {Wigdor, Daniel and Wixon, Dennis},
  year = {2011},
  pages = {97--103},
  publisher = {{Morgan Kaufmann Publishers}},
  address = {{Amsterdam}}
}

@book{wigdor2011a,
  title = {Brave {{NUI World}}: {{Designing Natural User Interfaces}} for {{Touch}} and {{Gesture}}},
  shorttitle = {Brave {{Nui World}}},
  author = {Wigdor, Daniel and Wixon, Dennis},
  year = {2011},
  publisher = {{Morgan Kaufmann}},
  address = {{Burlington, MA}},
  isbn = {978-0-12-382231-4},
  keywords = {Haptic devices,Human-computer interaction,User interfaces (Computer systems)},
  language = {en},
  lccn = {QA76.9.U83 W537 2011}
}

@inproceedings{wobbrock2009,
  title = {User-{{Defined Gestures}} for {{Surface Computing}}},
  booktitle = {Proceedings of the 27th {{International Conference}} on {{Human Factors}} in {{Computing Systems}} - {{CHI}} 09},
  author = {Wobbrock, Jacob O. and Morris, Meredith Ringel and Wilson, Andrew D.},
  year = {2009},
  pages = {1083},
  publisher = {{ACM Press}},
  address = {{Boston, MA, USA}},
  doi = {10.1145/1518701.1518866},
  abstract = {Many surface computing prototypes have employed gestures created by system designers. Although such gestures are appropriate for early investigations, they are not necessarily reflective of user behavior. We present an approach to designing tabletop gestures that relies on eliciting gestures from non-technical users by first portraying the effect of a gesture, and then asking users to perform its cause. In all, 1080 gestures from 20 participants were logged, analyzed, and paired with think-aloud data for 27 commands performed with 1 and 2 hands. Our findings indicate that users rarely care about the number of fingers they employ, that one hand is preferred to two, that desktop idioms strongly influence users' mental models, and that some commands elicit little gestural agreement, suggesting the need for on-screen widgets. We also present a complete user-defined gesture set, quantitative agreement scores, implications for surface technology, and a taxonomy of surface gestures. Our results will help designers create better gesture sets informed by user behavior.},
  isbn = {978-1-60558-246-7},
  language = {en}
}

@inproceedings{wong2007,
  title = {Making Mashups with Marmite: Towards End-User Programming for the Web},
  shorttitle = {Making Mashups with Marmite},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}  - {{CHI}} '07},
  author = {Wong, Jeffrey and Hong, Jason I.},
  year = {2007},
  pages = {1435--1444},
  publisher = {{ACM Press}},
  address = {{San Jose, California, USA}},
  doi = {10.1145/1240624.1240842},
  abstract = {There is a tremendous amount of web content available today, but it is not always in a form that supports end-users' needs. In many cases, all of the data and services needed to accomplish a goal already exist, but are not in a form amenable to an end-user. To address this problem, we have developed an end-user programming tool called Marmite, which lets end-users create so-called mashups that repurpose and combine existing web content and services. In this paper, we present the design, implementation, and evaluation of Marmite. An informal user study found that programmers and some spreadsheet users had little difficulty using the system.},
  file = {/Users/geoffreylitt/Zotero/storage/9QWLY8KD/Wong and Hong - 2007 - Making mashups with marmite towards end-user prog.pdf},
  isbn = {978-1-59593-593-9},
  language = {en}
}

@article{wongsuphasawat2016,
  title = {Voyager: {{Exploratory Analysis}} via {{Faceted Browsing}} of {{Visualization Recommendations}}},
  shorttitle = {Voyager},
  author = {Wongsuphasawat, Kanit and Moritz, Dominik and Anand, Anushka and Mackinlay, Jock and Howe, Bill and Heer, Jeffrey},
  year = {2016},
  month = jan,
  volume = {22},
  pages = {649--658},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2015.2467191},
  abstract = {General visualization tools typically require manual specification of views: analysts must select data variables and then choose which transformations and visual encodings to apply. These decisions often involve both domain and visualization design expertise, and may impose a tedious specification process that impedes exploration. In this paper, we seek to complement manual chart construction with interactive navigation of a gallery of automatically-generated visualizations. We contribute Voyager, a mixed-initiative system that supports faceted browsing of recommended charts chosen according to statistical and perceptual measures. We describe Voyager's architecture, motivating design principles, and methods for generating and interacting with visualization recommendations. In a study comparing Voyager to a manual visualization specification tool, we find that Voyager facilitates exploration of previously unseen data and leads to increased data variable coverage. We then distill design implications for visualization tools, in particular the need to balance rapid exploration and targeted question-answering.},
  file = {/Users/geoffreylitt/Zotero/storage/N2PELLDU/Wongsuphasawat et al. - 2016 - Voyager Exploratory Analysis via Faceted Browsing.pdf},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {1}
}

@article{wood2019,
  title = {Design {{Exposition}} with {{Literate Visualization}}},
  author = {Wood, Jo and Kachkaev, Alexander and Dykes, Jason},
  year = {2019},
  month = jan,
  volume = {25},
  pages = {759--768},
  issn = {1077-2626, 1941-0506, 2160-9306},
  doi = {10.1109/TVCG.2018.2864836},
  abstract = {We propose a new approach to the visualization design and communication process, literate visualization, based upon and extending, Donald Knuth's idea of literate programming. It integrates the process of writing data visualization code with description of the design choices that led to the implementation (design exposition). We develop a model of design exposition characterised by four visualization designer architypes: the evaluator, the autonomist, the didacticist and the rationalist. The model is used to justify the key characteristics of literate visualization: `notebook' documents that integrate live coding input, rendered output and textual narrative; low cost of authoring textual narrative; guidelines to encourage structured visualization design and its documentation. We propose narrative schemas for structuring and validating a wide range of visualization design approaches and models, and branching narratives for capturing alternative designs and design views. We describe a new open source literate visualization environment, litvis, based on a declarative interface to Vega and Vega-Lite through the functional programming language Elm combined with markdown for formatted narrative. We informally assess the approach, its implementation and potential by considering three examples spanning a range of design abstractions: new visualization idioms; validation though visualization algebra; and feminist data visualization. We argue that the rich documentation of the design process provided by literate visualization offers the potential to improve the validity of visualization design and so benefit both academic visualization and visualization practice.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  language = {en},
  number = {1}
}

@inproceedings{yankelovich1995,
  title = {Designing {{SpeechActs}}: Issues in Speech User Interfaces},
  shorttitle = {Designing {{SpeechActs}}},
  booktitle = {Proceedings of the {{SIGCHI}} Conference on {{Human}} Factors in Computing Systems - {{CHI}} '95},
  author = {Yankelovich, Nicole and Levow, Gina-Anne and Marx, Matt},
  year = {1995},
  pages = {369--376},
  publisher = {{ACM Press}},
  address = {{Denver, Colorado, United States}},
  doi = {10.1145/223904.223952},
  abstract = {SpeechActs is an experimental conversational speech system. Experience with redesigning the system based on user feedback indicates the importance of adhering to conversational conventions when designing speech interfaces, particularly in the face of speech recognition errors. Study results also suggest that speech-only interfaces should be designed from scratch rather than directly translated from their graphical counterparts. This paper examines a set of challenging issues facing speech interface designers and describes approaches to address some of these challenges.},
  isbn = {978-0-201-84705-5},
  language = {en}
}

@incollection{zang2010,
  title = {The {{Web}}-Active End User},
  booktitle = {No {{Code Required}}},
  author = {Zang, Nan and Rosson, Mary Beth},
  year = {2010},
  pages = {389--405},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-381541-5.00020-1},
  abstract = {In this chapter we present our work that has led to the idea of the Web-active end user \textendash{} individuals who actively seek and adopt new technologies and try to make the most of what the Web has to offer. Using the context of mashups \textendash{} a type of Web application that combines different data into one interface \textendash{} we explore how these users take advantage of the Web. We examine some of their ideas about online information and detail their use of a mashup tool. By focusing our work on the users themselves, we hope to better understand the needs of these users and provide a user-centered direction for future tools.},
  file = {/Users/geoffreylitt/Zotero/storage/VDXPJX97/Zang and Rosson - 2010 - The Web-active end user.pdf},
  isbn = {978-0-12-381541-5},
  language = {en}
}

@misc{zotero-109,
  title = {Cracking the Cocoa Nut | {{Proceedings}} of the 24th Annual {{ACM}} Symposium on {{User}} Interface Software and Technology},
  file = {/Users/geoffreylitt/Zotero/storage/IU975ZTG/2047196.html},
  howpublished = {http://dl.acm.org/doi/abs/10.1145/2047196.2047226},
  language = {en}
}

@article{zotero-117,
  title = {A Theory of the Learnable},
  file = {/Users/geoffreylitt/Zotero/storage/BJEDTPMG/1968.html},
  journal = {Communications of the ACM},
  language = {en}
}

@misc{zotero-48,
  title = {Exhibit | {{Proceedings}} of the 16th International Conference on {{World Wide Web}}},
  file = {/Users/geoffreylitt/Zotero/storage/6KKT6UT4/1242572.html},
  howpublished = {http://dl.acm.org/doi/abs/10.1145/1242572.1242672},
  language = {en}
}

@misc{zotero-621,
  title = {Redux - {{A}} Predictable State Container for {{JavaScript}} Apps. | {{Redux}}},
  abstract = {A predictable state container for JavaScript apps.},
  file = {/Users/geoffreylitt/Zotero/storage/DIABRQN4/redux.js.org.html},
  howpublished = {https://redux.js.org/},
  language = {en}
}

@misc{zotero-700,
  title = {Cocoa {{Scripting}}},
  file = {/Users/geoffreylitt/Zotero/storage/IJQ3ZSSW/Scripting.html},
  howpublished = {https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/AppArchitecture/Concepts/Scripting.html}
}


